{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/emoji-regex/index.js","src/Button.js","src/CheckBox.js","src/Container.js","src/DynamicText/DynamicChar.js","src/DynamicText/DynamicText.js","src/DynamicText/DynamicTextStyle.js","src/Ease/Ease.js","src/Ease/EaseBase.js","src/Ease/ExponentialEase.js","src/Helpers.js","src/InputBase.js","src/Interaction/ClickEvent.js","src/Interaction/DragDropController.js","src/Interaction/DragEvent.js","src/Interaction/InputController.js","src/Interaction/Interaction.js","src/Interaction/MouseScrollEvent.js","src/ScrollBar.js","src/ScrollingContainer.js","src/SliceSprite.js","src/Slider.js","src/SortableList.js","src/Sprite.js","src/Stage.js","src/Text.js","src/TextInput.js","src/Ticker.js","src/TilingSprite.js","src/Tween.js","src/UI.js","src/UIBase.js","src/UISettings.js","src"],"names":["f","exports","module","define","amd","g","window","global","self","this","pixiUi","min","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","Button","options","InputBase","width","background","height","tabIndex","tabGroup","pivot","verticalAlign","horizontalAlign","addChild","isHover","uiText","text","container","buttonMode","clickEvent","ClickEvent","onHover","over","emit","onPress","isPressed","focus","data","originalEvent","preventDefault","onClick","click","_focused","prototype","blur","initialize","interactiveChildren","setTimeout","bounds","getLocalBounds","hitArea","PIXI","Rectangle","x","y","Math","max","_width","_height","Object","create","constructor","defineProperties","value","get","set","val","CheckBox","_checked","undefined","checked","_value","checkGroup","checkgroup","checkmark","alpha","InputController","registrerCheckGroup","change","updateCheckGroupSelected","selectedValue","getCheckGroupSelectedValue","setCheckGroupSelectedValue","Container","UIBase","update","DynamicChar","style","space","newline","emoji","charcode","wordIndex","lineIndex","DynamicText","atlas","DynamicAtlas","autoWidth","autoHeight","defaultStyle","_style","DynamicTextStyle","merge","chars","renderChars","spriteCache","charContainer","_inputText","lastWidth","lastHeight","dirtyText","dirtyStyle","dirtyRender","lineWidthData","lineHeightData","lineFontSizeData","lineAlignmentData","renderCount","charCount","lineEllipsisData","lineHasEllipsis","render","yOffset","xOffset","currentLine","removeSprite","visible","char","lineWidth","lineHeight","maxLineWidth","texture","tex","sprite","Sprite","anchor","tint","hexToInt","rotation","float","skew","parent","prepareForRender","pos","Point","lineFontSize","lineAlignment","align","lastSpaceIndex","lastSpaceLineWidth","textHeight","forceNewline","renderIndex","ellipsis","lineFull","lastChar","overflowY","fontSize","size","round","letterSpacing","wrap","breakWords","overflowX","ellipsisData","d","dot","getCharObject","parseFloat","closeTags","processInputText","styleTree","charIndex","inputTextIndex","inputArray","Array","from","c","charCodeAt","test","allowTags","tag","substring","slice","indexOf","FoundTag","clone","fontStyle","push","fontWeight","splice","startsWith","regex","match","exec","emojiMatch","emojiRegex","fontFamily","settings","defaultEmojiFont","lazyUpdate","dirtySize","def","isNaN","int","parseInt","string","str","result","replace","hexToRgba","hex","debugSpriteSheet","metricsCanvas","document","createElement","metricsContext","getContext","padding","canvas","context","objects","baseTexture","lazyTimeout","rootNode","atlasdim","newObjects","devicePixelRatio","canvasList","startdim","maxdim","AtlasNode","w","h","children","rect","insert","obj","newNode","frame","dw","dh","addCanvas","BaseTexture","fromCanvas","mipmap","resolution","className","body","appendChild","fontFamilyCache","drawObjects","arr","resized","drawObject","drawImage","_cache","font","ctxFont","familyCache","key","ctxKey","metrics","generateCharData","minx","descent","Texture","addNewObjects","compareFunction","b","sort","_resized","_newcanvas","node","resizeCanvas","dim","measureText","paddingY","paddingX","ceil","baseline","clearRect","save","shadowData","trim","split","color","fillData","position","rgba","getFillStyle","fills","filter","gradEnd","gradient","createLinearGradient","addColorStop","drawShadows","shadowString","stroke","shadows","globalAlpha","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","strokeText","fillText","restore","shadow","strokeShadow","fillStyle","fill","strokeStyle","strokeFill","pixelData","getImageData","line","len","ascent","step","maxx","miny","maxy","respectDirty","_parent","_scale","_align","_fontFamily","_fontSize","_fontWeight","_fontStyle","_letterSpacing","_lineHeight","_verticalAlign","_rotation","_skew","_tint","_fill","_shadow","_stroke","_strokeFill","_strokeShadow","_wrap","_breakWords","_overflowX","_overflowY","_ellipsis","_cachedEllipsisSize","ellipsisSize","param","_dirty","join","scale","fn","EaseBase","getPosition","wrapEase","easeInFunction","easeOutFunction","easeInOutFunction","easeIn","easeOut","easeInOut","Ease","ExponentialEase","HALF_PI","PI","Linear","Power0","easeNone","Power1","Quad","Power2","Cubic","Power3","Quart","Power4","Quint","Bounce","BounceIn","p","BounceOut","BounceInOut","invert","Circ","CircIn","sqrt","CircOut","CircInOut","Expo","ExpoIn","pow","ExpoOut","ExpoInOut","Sine","SineIn","cos","SineOut","sin","SineInOut","power","Helpers","Lerp","start","stop","amt","Round","number","decimals","componentToHex","toString","rgbToHex","rgbToNumber","numberToRgb","floor","hexToRgb","shorthandRegex","m","_useTab","_usePrev","_useNext","interactive","registrer","keyDownEvent","which","fireTab","firePrev","fireNext","documentMouseDown","__down","on","_bindEvents","stage","addEventListener","_clearEvents","off","removeEventListener","clear","includeHover","rightMouseButton","doubleClick","bound","id","ishover","mouse","offset","movementX","movementY","right","hover","double","eventname_mousedown","eventname_mouseup","eventname_mouseupoutside","time","_onMouseDown","event","copy","identifier","_onMouseUp","_onMouseUpOutside","now","performance","_mouseUpAll","removeListener","dragThreshold","abs","_onMouseOver","_onMouseMove","_onMouseOut","onMove","stopEvent","startEvent","_items","DragDropController","add","item","_dragDropEventId","getItem","object","index","getEventItem","group","dragGroup","DragEvent","cancel","dragging","_onDragStart","_onDragMove","_onDragEnd","dragRestrictAxis","onDragStart","onDragMove","onDragEnd","_currentItem","tabGroups","checkGroups","checkGroupValues","groupName","items","_tabIndex","_tabGroup","cb","name","Interaction","MouseScrollEvent","delta","_onMouseScroll","deltaX","deltaY","axis","detail","onMouseScroll","_onHover","ScrollBar","Slider","track","handle","vertical","scrollingContainer","autohide","_hidden","Tween","_onValueChanging","sizeAmt","innerContainer","forcePctPosition","_amt","_scrollBars","alignToContainer","newPos","x_y","width_height","top_left","_posAmt","diff","toggleHidden","hidden","to","ScrollingContainer","mask","Graphics","innerBounds","scrollX","scrollY","dragScrolling","softness","radius","expandMask","animating","scrolling","boundCached","Ticker","apply","initScrolling","_lastWidth","_lastHeight","of","lineStyle","beginFill","drawRect","drawRoundedRect","endFill","setScrollPosition","UIObject","argumentsLength","arguments","getInnerBounds","updateScrollBars","force","containerStart","targetPosition","lastPosition","Position","Speed","direction","pct","focusPosition","dif","speed","updateScrollPosition","updateDirection","target","exp","drag","scrollSpeed","scroll","SliceSprite","borderWidth","horizontalSlice","verticalSlice","tile","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","stl","sbl","sbr","st","sb","sl","sr","sf","bw","vs","hs","setting","minWidth","minHeight","extras","TilingSprite","addChildAt","initialized","blendMode","_disabled","_minValue","minValue","_maxValue","maxValue","_onValueChange","onValueChange","onValueChanging","soft","handleSize","top","left","startValue","handleDrag","stopPropagation","maxPosition","triggerValueChanging","triggerValueChange","localMousePosition","trackDrag","updatePositionToMouse","mousePosition","toLocal","maxPos","_lastChange","_lastChanging","disabled","SortableList","desc","tweenTime","tweenEase","fnValue","fnThenBy","_sortListValue","_sortListThenByValue","_sortListRnd","random","removeChild","instant","clearTimeout","_sortTimeout","_sort","_this","alt","res","fromTo","altering","updatesettings","fromFrame","frameId","fromImage","imageUrl","Stage","__width","__height","UIChildren","resize","argumentLenght","rx","ry","Text","PIXITextStyle","_text","baseupdate","_anchorLeft","_anchorRight","widthPct","_anchorTop","_anchorBottom","heightPct","TextInput","_pui_tempInput","setAttribute","_dirtyText","maxLength","_lastValue","multiLine","selectedColor","selectedBackgroundColor","tempText","destroy","selection","_startIndex","_endIndex","caret","_index","caretWidth","moveTo","lineTo","paddingLeft","paddingRight","paddingBottom","paddingTop","textContainer","UI","anchorTop","anchorBottom","anchorLeft","anchorRight","updateText","setCaretIndex","hasSelection","updateSelectionGraphics","caretInterval","si","sie","ei","eie","sp","ds","de","rdd","vrdd","selectionStart","selectionEnd","cc","textLengthPX","textHeightPX","lineIndexMax","ctrlDown","shiftDown","shiftKey","ctrlKey","cmdKey","whitespace","lastWordIndex","charText","wrapped","cacheAsBitmap","updateClosestIndex","point","currentClosest","currentDistX","currentIndex","atEnd","closestLineIndex","distX","deleteSelection","updateSelectionColors","_sp","scrollToPosition","resetScrollPosition","hideCaret","clearInterval","showCaret","clearSelection","setInterval","insertTextAtCaret","_atEnd","valueEvent","defaultPrevented","select","caretAtStart","_forward","startindex","selectRange","endIndex","_i","selectIndex","_down","keyUpEvent","copyEvent","clipboardData","setData","cutEvent","pasteEvent","getData","inputEvent","inputBlurEvent","mouseDown","timeSinceLast","selectWord","worldTransform","tx","ty","startIndex","drawSelectionRect","c1","cx","cy","cl","end","autoStart","utils","EventEmitter","_now","DeltaTime","Time","Ms","shared","_update","requestAnimationFrame","once","tilePosition","tileScale","getFromValue","widthKeys","heightKeys","getSurfix","getToValue","getObject","_tweenObjectId","_currentId","_tweenObjects","TweenObject","getTweenItem","_tweenItemCache","_ready","tween","TweenItem","getCallbackItem","_callbackItemCache","CallbackItem","_activeTweenObjects","tweens","active","onUpdate","callback","currentTime","remove","keys","_currentCallbackID","ease","isColor","surfix","currentColor","params","paramsFrom","paramsTo","Base","UISettings","dragInitialized","dropInitialized","dirty","_oldWidth","_oldHeight","pixelPerfect","_minWidth","_minHeight","_maxWidth","_maxHeight","_left","_right","_top","_bottom","_dragPosition","updateChildren","updateParent","parentHeight","parentWidth","actual_width","actual_height","actual_minWidth","actual_minHeight","actual_maxWidth","actual_maxHeight","actual_anchorLeft","actual_anchorRight","actual_anchorTop","actual_anchorBottom","actual_left","actual_right","actual_top","actual_bottom","_parentWidth","_parentHeight","pivotXOffset","pivotX","pivotYOffset","pivotY","useHorizontalAnchor","useLeftRight","useVerticalAnchor","useTopBottom","dragRestricted","scaleX","scaleY","oldUIParent","draggable","initDraggable","droppable","initDroppable","clearDraggable","stageOffset","added","dragContainer","clearDroppable","onDrop","dropGroup","droppableReparent","minWidthPct","minHeightPct","maxWidth","maxWidthPct","maxHeight","maxHeightPct","anchorLeftPct","anchorRightPct","anchorTopPct","anchorBottomPct","leftPct","rightPct","topPct","bottom","bottomPct","valign","renderable","parentLayer","Library","assign"],"mappings":"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","file":"pixi-ui.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nmodule.exports = function () {\n\t// https://mathiasbynens.be/notes/es-unicode-property-escapes#emoji\n\treturn (/\\uD83D\\uDC69(?:\\u200D(?:(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67|(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC6F\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3C-\\uDD3E\\uDDD6-\\uDDDF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642])\\uFE0F|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708]))\\uFE0F|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83D\\uDC69\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]))|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\u200D(?:(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDD1-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])?|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])\\uFE0F/g\n\t);\n};","var InputBase = require('./InputBase'),\r\n    ClickEvent = require('./Interaction/ClickEvent.js'),\r\n    InputController = require('./Interaction/InputController');\r\n\r\n/**\r\n * An UI button object\r\n *\r\n * @class\r\n * @extends PIXI.UI.InputBase\r\n * @memberof PIXI.UI\r\n * @param [options.background}] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for Button\r\n * @param [options.text=null] {PIXI.UI.Text} optional text\r\n * @param [options.tabIndex=0] {Number} input tab index\r\n * @param [options.tabGroup=0] {Number|String} input tab group\r\n * @param [options.width=options.background.width] {Number|String} width\r\n * @param [options.height=options.background.height] {Number|String} height\r\n */\r\n\r\nfunction Button(options) {\r\n    InputBase.call(this, options.width || (options.background ? options.background.width : 100), options.height || (options.background ? options.background.height : 20), options.tabIndex || 0, options.tabGroup || 0);\r\n    this.background = options.background;\r\n\r\n    if (this.background) {\r\n        this.background.width = \"100%\";\r\n        this.background.height = \"100%\";\r\n        this.background.pivot = 0.5;\r\n        this.background.verticalAlign = \"middle\";\r\n        this.background.horizontalAlign = \"center\";\r\n        this.addChild(this.background);\r\n\r\n    }\r\n    this.isHover = false;\r\n\r\n    this.uiText = options.text;\r\n    if (this.uiText) {\r\n        this.uiText.verticalAlign = \"middle\";\r\n        this.uiText.horizontalAlign = \"center\";\r\n        this.addChild(this.uiText);\r\n    }\r\n\r\n    this.container.buttonMode = true;\r\n   \r\n\r\n    var self = this;\r\n    //var keyDownEvent = function (e) {\r\n    //    if (e.which === 32) { //space\r\n    //        self.click();\r\n    //    }\r\n    //};\r\n\r\n    var clickEvent = new ClickEvent(this);\r\n    clickEvent.onHover = function (e, over) {\r\n        this.isHover = over;\r\n        self.emit(\"hover\", over);\r\n    };\r\n\r\n\r\n    clickEvent.onPress = function (e, isPressed) {\r\n        if (isPressed) {\r\n            self.focus();\r\n            e.data.originalEvent.preventDefault();\r\n        }\r\n        self.emit(\"press\", isPressed);\r\n    };\r\n\r\n    clickEvent.onClick = function (e) {\r\n        self.click();\r\n    };\r\n\r\n    this.click = function () {\r\n        self.emit(\"click\");\r\n    };\r\n\r\n\r\n    this.focus = function () {\r\n        if (!this._focused) {\r\n            InputBase.prototype.focus.call(this);\r\n            //document.addEventListener(\"keydown\", keyDownEvent, false);\r\n        }\r\n\r\n    };\r\n\r\n    this.blur = function () {\r\n        if (this._focused) {\r\n            InputBase.prototype.blur.call(this);\r\n            //document.removeEventListener(\"keydown\", keyDownEvent);\r\n        }\r\n    };\r\n\r\n    this.initialize = function () {\r\n        InputBase.prototype.initialize.call(this);\r\n        this.container.interactiveChildren = false;\r\n\r\n        var self = this;\r\n        //lazy to make sure all children is initialized (trying to get the bedst hitArea possible)\r\n        setTimeout(function () {\r\n            var bounds = self.container.getLocalBounds();\r\n            self.container.hitArea = new PIXI.Rectangle(bounds.x < 0 ? bounds.x : 0, bounds.y < 0 ? bounds.y : 0, Math.max(bounds.x + bounds.width + (bounds.x < 0 ? -bounds.x : 0), self._width), Math.max(bounds.y + bounds.height + (bounds.y < 0 ? -bounds.y : 0), self._height));\r\n        }, 20);\r\n    };\r\n\r\n}\r\n\r\nButton.prototype = Object.create(InputBase.prototype);\r\nButton.prototype.constructor = Button;\r\nmodule.exports = Button;\r\n\r\nObject.defineProperties(Button.prototype, {\r\n    value: {\r\n        get: function () {\r\n            if (this.uiText) {\r\n                return this.uiText.text;\r\n            }\r\n            return \"\";\r\n        },\r\n        set: function (val) {\r\n            if (this.uiText) {\r\n                this.uiText.text = val;\r\n            }\r\n        }\r\n    },\r\n    text: {\r\n        get: function () {\r\n            return this.uiText;\r\n        },\r\n        set: function (val) {\r\n            this.value = val;\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n/*\r\n * Features:\r\n * Button, radio button (checkgroups)\r\n * \r\n * Methods:\r\n * blur()\r\n * focus()\r\n * \r\n * Properties:\r\n * checked: get/set Button checked\r\n * value: get/set Button value\r\n * \r\n * Events:\r\n * \"hover\"          param: [bool]isHover (hover/leave)\r\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\r\n * \"click\"\r\n * \"blur\"\r\n * \"focus\"\r\n * \"focusChanged\"   param: [bool]isFocussed\r\n *  \r\n */","var InputBase = require('./InputBase'),\r\n    ClickEvent = require('./Interaction/ClickEvent.js'),\r\n    InputController = require('./Interaction/InputController');\r\n\r\n/**\r\n * An UI button object\r\n *\r\n * @class\r\n * @extends PIXI.UI.InputBase\r\n * @memberof PIXI.UI\r\n * @param [options.checked=false] {bool} is checked\r\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for CheckBox\r\n * @param options.checkmark {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as checkmark for CheckBox\r\n * @param [options.checkgroup=null] {String} CheckGroup name\r\n * @param options.value {String} mostly used along with checkgroup\r\n * @param [options.tabIndex=0] {Number} input tab index\r\n * @param [options.tabGroup=0] {Number|String} input tab group\r\n */\r\n\r\nfunction CheckBox(options) {\r\n    InputBase.call(this, options.background.width, options.background.height, options.tabIndex || 0, options.tabGroup || 0);\r\n    this._checked = options.checked !== undefined ? options.checked : false;\r\n    this._value = options.value || \"\";\r\n    this.checkGroup = options.checkgroup || null;\r\n\r\n    this.background = options.background;\r\n    this.background.width = \"100%\";\r\n    this.background.height = \"100%\";\r\n    this.addChild(this.background);\r\n\r\n    this.checkmark = options.checkmark;\r\n    if (this.checkmark) {\r\n        this.checkmark.verticalAlign = \"middle\";\r\n        this.checkmark.horizontalAlign = \"center\";\r\n        if (!this._checked) {\r\n            this.checkmark.alpha = 0;\r\n        }\r\n        this.addChild(this.checkmark);\r\n    }\r\n\r\n\r\n\r\n\r\n    this.container.buttonMode = true;\r\n\r\n    if (this.checkGroup !== null)\r\n        InputController.registrerCheckGroup(this);\r\n\r\n    var self = this;\r\n    //var keyDownEvent = function (e) {\r\n    //    if (e.which === 32) { //space\r\n    //        self.click();\r\n    //    }\r\n    //};\r\n\r\n    var clickEvent = new ClickEvent(this);\r\n    clickEvent.onHover = function (e, over) {\r\n        self.emit(\"hover\", over);\r\n    };\r\n\r\n\r\n    clickEvent.onPress = function (e, isPressed) {\r\n        if (isPressed) {\r\n            self.focus();\r\n            e.data.originalEvent.preventDefault();\r\n        }\r\n        self.emit(\"press\", isPressed);\r\n    };\r\n\r\n    clickEvent.onClick = function (e) {\r\n        self.click();\r\n    };\r\n\r\n    this.change = function (val) {\r\n        if (this.checkmark)\r\n            this.checkmark.alpha = val ? 1 : 0;\r\n    };\r\n\r\n    this.click = function () {\r\n        self.emit(\"click\");\r\n        if (self.checkGroup !== null && self.checked)\r\n            return;\r\n\r\n        self.checked = !self.checked;\r\n        this.emit(\"change\", self.checked);\r\n    };\r\n\r\n\r\n    this.focus = function () {\r\n\r\n        if (!this._focused) {\r\n            InputBase.prototype.focus.call(this);\r\n            //document.addEventListener(\"keydown\", keyDownEvent, false);\r\n        }\r\n\r\n    };\r\n\r\n    this.blur = function () {\r\n\r\n        if (this._focused) {\r\n            InputBase.prototype.blur.call(this);\r\n            //document.removeEventListener(\"keydown\", keyDownEvent);\r\n        }\r\n    };\r\n}\r\n\r\nCheckBox.prototype = Object.create(InputBase.prototype);\r\nCheckBox.prototype.constructor = CheckBox;\r\nmodule.exports = CheckBox;\r\n\r\nObject.defineProperties(CheckBox.prototype, {\r\n    checked: {\r\n        get: function () {\r\n            return this._checked;\r\n        },\r\n        set: function (val) {\r\n\r\n\r\n            if (val !== this._checked) {\r\n\r\n                if (this.checkGroup !== null && val)\r\n                    InputController.updateCheckGroupSelected(this);\r\n\r\n\r\n                \r\n                \r\n                this._checked = val;\r\n                this.change(val);\r\n\r\n            }\r\n        }\r\n    },\r\n    value: {\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        set: function (val) {\r\n            this._value = val;\r\n            if (this.checked)\r\n                InputController.updateCheckGroupSelected(this);\r\n        }\r\n    },\r\n    selectedValue: {\r\n        get: function () {\r\n            return InputController.getCheckGroupSelectedValue(this.checkGroup);\r\n        },\r\n        set: function (val) {\r\n            InputController.setCheckGroupSelectedValue(this.checkGroup, val);\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n/*\r\n * Features:\r\n * checkbox, radio button (checkgroups)\r\n * \r\n * Methods:\r\n * blur()\r\n * focus()\r\n * change(checked) //only exposed to overwrite (if you dont want to hard toggle alpha of checkmark) \r\n * \r\n * Properties:\r\n * checked: get/set checkbox checked\r\n * value: get/set checkbox value\r\n * selectedValue: get/set selected value for checkgroup\r\n * \r\n * Events:\r\n * \"hover\"          param: [bool]isHover (hover/leave)\r\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\r\n * \"click\"\r\n * \"blur\"\r\n * \"focus\"\r\n * \"focusChanged\"   param: [bool]isFocussed\r\n * \"change\"         param: [bool]isChecked\r\n *  \r\n */","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI Container object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param width {Number} Width of the Container\r\n * @param height {Number} Height of the Container\r\n */\r\nfunction Container(width, height) {\r\n    UIBase.call(this, width, height);\r\n    this.container.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\r\n}\r\n\r\n\r\nContainer.prototype = Object.create(UIBase.prototype);\r\nContainer.prototype.constructor = Container;\r\nmodule.exports = Container;\r\n\r\n\r\nContainer.prototype.update = function () {\r\n    //if (this.container.interactive) {\r\n        this.container.hitArea.width = this._width;\r\n        this.container.hitArea.height = this._height;\r\n    //}\r\n};\r\n\r\n","function DynamicChar() {\r\n    //styledata (texture, orig width, orig height)\r\n    this.style = null;\r\n\r\n    //char data\r\n    this.data = null;\r\n\r\n    //is this char space?\r\n    this.space = false;\r\n\r\n    //is this char newline?\r\n    this.newline = false;\r\n\r\n    this.emoji = false;\r\n\r\n    //charcode\r\n    this.charcode = 0;\r\n\r\n    //char string value\r\n    this.value = \"\";\r\n\r\n    //word index\r\n    this.wordIndex = -1;\r\n\r\n    //line index of char\r\n    this.lineIndex = -1;\r\n\r\n}\r\n\r\nDynamicChar.prototype.constructor = DynamicChar;\r\nmodule.exports = DynamicChar;","var UIBase = require('../UIBase'),\r\n    DynamicTextStyle = require('./DynamicTextStyle'),\r\n    DynamicChar = require('./DynamicChar'),\r\n    emojiRegex = require('emoji-regex'),\r\n    atlas = null;\r\n\r\n\r\n/**\r\n* An dynamic text object with auto generated atlas\r\n*\r\n* @class\r\n* @extends PIXI.UI.UIBase\r\n* @memberof PIXI.UI\r\n* @param text {String} Text content\r\n* @param [width=0] {Number|String} width of textbox. 0 = autoWidth\r\n* @param [height=0] {Number|String} height of textbox. 0 = autoHeight\r\n* @param [allowTags=true] {boolean} Allow inline styling\r\n* @param [options=null] {DynamicTextStyle} Additional text settings\r\n*/\r\nfunction DynamicText(text, options) {\r\n    options = options || {};\r\n\r\n    UIBase.call(this, options.width || 0, options.height || 0);\r\n\r\n    //create atlas\r\n    if (atlas === null)\r\n        atlas = new DynamicAtlas(1);\r\n\r\n    var autoWidth = !options.width;\r\n    var autoHeight = !options.height;\r\n\r\n    //defaultstyle for this textobject\r\n    var defaultStyle = this._style = new DynamicTextStyle(this);\r\n    defaultStyle.merge(options.style);\r\n\r\n    //collection of all processed char\r\n    var chars = this.chars = [];\r\n    var renderChars = [];\r\n    var spriteCache = []; //(temp)\r\n    var charContainer = new PIXI.Container();\r\n    this.container.addChild(charContainer);\r\n\r\n    //the input text\r\n    this._inputText = text;\r\n\r\n    //list of rendered sprites (temp)\r\n    var sprites = [];\r\n\r\n    //states\r\n    var lastWidth = 0,\r\n        lastHeight = 0;\r\n\r\n    this.dirtyText = true;\r\n    this.dirtyStyle = true;\r\n    this.dirtyRender = true;\r\n\r\n\r\n    //dictionary for line data\r\n    var lineWidthData = [];\r\n    var lineHeightData = [];\r\n    var lineFontSizeData = [];\r\n    var lineAlignmentData = [];\r\n    var renderCount = 0;\r\n    var charCount = 0;\r\n\r\n    //ellipsis caches (not nessesary when no sprites)\r\n    var lineEllipsisData = [];\r\n    var lineHasEllipsis = [];\r\n\r\n    //ROUGH TEMP RENDER (with sprites)\r\n    this.render = function () {\r\n        var yOffset = 0,\r\n            xOffset = 0,\r\n            currentLine = -1,\r\n            i;\r\n\r\n        if (spriteCache.length > renderCount) {\r\n            for (i = renderCount; i < spriteCache.length; i++) {\r\n                var removeSprite = spriteCache[i];\r\n                if (removeSprite)\r\n                    removeSprite.visible = false;\r\n            }\r\n        }\r\n\r\n        var char, lineWidth = 0, lineHeight = 0, maxLineWidth = 0;\r\n\r\n        for (i = 0; i < renderCount; i++) {\r\n            char = renderChars[i];\r\n\r\n            //get line data\r\n            if (currentLine !== char.lineIndex) {\r\n                currentLine = char.lineIndex;\r\n                lineWidth = lineWidthData[currentLine];\r\n                lineHeight = lineHeightData[currentLine];\r\n                yOffset += lineHeight;\r\n\r\n\r\n\r\n                switch (lineAlignmentData[currentLine]) {\r\n                    case 'right': xOffset = this._width - lineWidth; break;\r\n                    case 'center': xOffset = (this._width - lineWidth) * 0.5; break;\r\n                    default: xOffset = 0;\r\n                }\r\n\r\n\r\n                maxLineWidth = Math.max(lineWidth, maxLineWidth);\r\n            }\r\n\r\n            //no reason to render a blank space or 0x0 letters (no texture created)\r\n            if (!char.data.texture || char.space || char.newline) {\r\n                if (spriteCache[i])\r\n                    spriteCache[i].visible = false;\r\n                continue;\r\n            }\r\n\r\n\r\n            //add new sprite\r\n            var tex = char.data.texture, sprite = spriteCache[i];\r\n\r\n\r\n\r\n            if (!sprite) {\r\n                sprite = spriteCache[i] = new PIXI.Sprite(tex);\r\n                sprite.anchor.set(0.5);\r\n            }\r\n            else\r\n                sprite.texture = tex;\r\n\r\n\r\n\r\n            sprite.visible = true;\r\n            sprite.x = char.x + xOffset + tex.width * 0.5;\r\n            sprite.y = char.y + yOffset - tex.height * 0.5 - (lineHeight - lineFontSizeData[currentLine]);\r\n\r\n\r\n            sprite.tint = char.emoji ? 0xffffff : hexToInt(char.style.tint, 0xffffff);\r\n            sprite.rotation = float(char.style.rotation, 0);\r\n            sprite.skew.x = float(char.style.skew, 0);\r\n\r\n            if (!sprite.parent)\r\n                charContainer.addChild(sprite);\r\n        }\r\n\r\n        if (autoWidth) this.width = maxLineWidth;\r\n        if (autoHeight) this.height = yOffset;\r\n    };\r\n\r\n    //updates the renderChar array and position chars for render\r\n    this.prepareForRender = function () {\r\n        var pos = new PIXI.Point(),\r\n            wordIndex = 0,\r\n            lineHeight = 0,\r\n            lineFontSize = 0,\r\n            lineIndex = 0,\r\n            lineAlignment = defaultStyle.align,\r\n            lastSpaceIndex = -1,\r\n            lastSpaceLineWidth = 0,\r\n            textHeight = 0,\r\n            forceNewline = false,\r\n            style,\r\n            renderIndex = 0,\r\n            ellipsis = false,\r\n            lineFull = false,\r\n            i;\r\n\r\n\r\n\r\n\r\n        for (i = 0; i < charCount; i++) {\r\n            var char = chars[i], lastChar = chars[i - 1];\r\n            style = char.style;\r\n\r\n\r\n            //lineheight\r\n            lineHeight = Math.max(lineHeight, defaultStyle.lineHeight || style.lineHeight || char.data.lineHeight);\r\n\r\n            if (style.overflowY !== 'visible' && lineHeight + textHeight > this._height) {\r\n                if (style.overflowY === 'hidden')\r\n                    break;\r\n\r\n            }\r\n\r\n            if (char.newline)\r\n                lineFull = false;\r\n\r\n\r\n            //set word index\r\n            if (char.space || char.newline) wordIndex++;\r\n            else char.wordIndex = wordIndex;\r\n\r\n            //textheight\r\n            lineFontSize = Math.max(lineFontSize, style.fontSize);\r\n\r\n            //lineindex\r\n            char.lineIndex = lineIndex;\r\n\r\n            //lineAlignment\r\n            if (style.align !== defaultStyle.align) lineAlignment = style.align;\r\n\r\n\r\n            if (char.space) {\r\n                lastSpaceIndex = i;\r\n                lastSpaceLineWidth = pos.x;\r\n            }\r\n\r\n\r\n            var size = Math.round(char.data.width) + float(style.letterSpacing, 0);\r\n            if (!autoWidth && !forceNewline && !char.newline && pos.x + size > this._width) {\r\n                if (style.wrap) {\r\n                    if (char.space) {\r\n                        forceNewline = true;\r\n                    }\r\n                    else if (lastSpaceIndex !== -1) {\r\n                        renderIndex -= i - lastSpaceIndex;\r\n                        i = lastSpaceIndex - 1;\r\n                        lastSpaceIndex = -1;\r\n                        pos.x = lastSpaceLineWidth;\r\n                        forceNewline = true;\r\n                        continue;\r\n\r\n                    }\r\n                    else if (style.breakWords) {\r\n                        if (lastChar) {\r\n                            pos.x -= lastChar.style.letterSpacing;\r\n                            pos.x -= lastChar.data.width;\r\n                        }\r\n                        i -= 2;\r\n                        renderIndex--;\r\n                        forceNewline = true;\r\n                        continue;\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n                if (style.overflowX == 'hidden' && !forceNewline) {\r\n                    lineFull = true;\r\n                    if (style.ellipsis && !ellipsis) {\r\n                        ellipsis = true;\r\n                        var ellipsisData = lineEllipsisData[lineIndex];\r\n                        if (!ellipsisData) ellipsisData = lineEllipsisData[lineIndex] = [new DynamicChar(), new DynamicChar(), new DynamicChar()];\r\n                        for (var d = 0; d < 3; d++) {\r\n                            var dot = ellipsisData[d];\r\n                            dot.value = \".\";\r\n                            dot.data = atlas.getCharObject(dot.value, style);\r\n                            dot.style = style;\r\n                            dot.x = pos.x + char.data.xOffset;\r\n                            dot.y = parseFloat(style.verticalAlign) + dot.data.yOffset;\r\n                            dot.lineIndex = lineIndex;\r\n                            pos.x += Math.round(dot.data.width) + float(style.letterSpacing, 0);\r\n                            renderChars[renderIndex] = dot;\r\n                            renderIndex++;\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            //Update position and add to renderchars\r\n            if (!lineFull) {\r\n                //position\r\n                char.x = pos.x + char.data.xOffset;\r\n                char.y = parseFloat(style.verticalAlign) + char.data.yOffset;\r\n                pos.x += size;\r\n                renderChars[renderIndex] = char;\r\n                renderIndex++;\r\n            }\r\n\r\n\r\n\r\n            //new line\r\n            if (forceNewline || char.newline || i === charCount - 1) {\r\n                if (lastChar) {\r\n                    pos.x -= lastChar.style.letterSpacing;\r\n                }\r\n\r\n                if (char.space) {\r\n                    pos.x -= char.data.width;\r\n                    pos.x -= float(style.letterSpacing, 0);\r\n                }\r\n\r\n                textHeight += lineHeight;\r\n                lineHasEllipsis[lineIndex] = ellipsis;\r\n                lineWidthData[lineIndex] = pos.x;\r\n                lineHeightData[lineIndex] = lineHeight;\r\n                lineFontSizeData[lineIndex] = lineFontSize;\r\n                lineAlignmentData[lineIndex] = lineAlignment;\r\n\r\n\r\n                //reset line vaules\r\n                lineHeight = pos.x = lastSpaceLineWidth = lineFontSize = 0;\r\n                lineAlignment = defaultStyle.align;\r\n                lastSpaceIndex = -1;\r\n                lineIndex++;\r\n                forceNewline = lineFull = ellipsis = false;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        renderCount = renderIndex;\r\n    };\r\n\r\n    //phrases the input text and prepares the char array\r\n    var closeTags = ['</i>', '</b>', '</font>', '</center>'];\r\n    this.processInputText = function () {\r\n        var styleTree = [defaultStyle],\r\n            charIndex = 0,\r\n            inputTextIndex = 0,\r\n            inputArray = Array.from(this._inputText);\r\n\r\n        for (var i = 0; i < inputArray.length; i++) {\r\n            style = styleTree[styleTree.length - 1];\r\n            var c = inputArray[i],\r\n                charcode = c.charCodeAt(0),\r\n                newline = false,\r\n                space = false,\r\n                emoji = false;\r\n\r\n\r\n            //Extract Tags\r\n            if (/(?:\\r\\n|\\r|\\n)/.test(c))\r\n                newline = true;\r\n            else if (/(\\s)/.test(c))\r\n                space = true;\r\n            else if (options.allowTags && c === \"<\") {\r\n                var tag = this._inputText.substring(inputTextIndex);\r\n                tag = tag.slice(0, tag.indexOf(\">\") + 1);\r\n                var FoundTag = true;\r\n                if (tag.length) {\r\n                    if (tag === \"<i>\") {\r\n                        style = style.clone();\r\n                        style.fontStyle = 'italic';\r\n                        styleTree.push(style);\r\n                    }\r\n                    else if (tag === \"<b>\") {\r\n                        style = style.clone();\r\n                        style.fontWeight = 'bold';\r\n                        styleTree.push(style);\r\n                    }\r\n                    else if (tag === \"<center>\") {\r\n                        style = style.clone();\r\n                        style.align = 'center';\r\n                        styleTree.push(style);\r\n                    }\r\n                    else if (closeTags.indexOf(tag) !== -1) {\r\n                        if (styleTree.length > 1) styleTree.splice(styleTree.length - 1, 1);\r\n                    }\r\n                    else if (tag.startsWith(\"<font \")) {\r\n                        var regex = /(\\w+)\\s*=\\s*(([\"'])(.*?)\\3|([^>\\s]*)(?=\\s|\\/>))(?=[^<]*>)/g,\r\n                            match = regex.exec(tag);\r\n\r\n                        if (match !== null) {\r\n                            style = style.clone();\r\n                            while (match !== null) {\r\n                                switch (match[1]) {\r\n                                    case 'family': match[1] = 'fontFamily'; break;\r\n                                    case 'size': match[1] = 'fontSize'; break;\r\n                                    case 'weight': match[1] = 'fontWeight'; break;\r\n                                    case 'style': match[1] = 'fontStyle'; break;\r\n                                    case 'valign': match[1] = 'verticalAlign'; break;\r\n                                    case 'spacing': match[1] = 'letterSpacing'; break;\r\n                                    case 'color': match[1] = 'tint'; break;\r\n\r\n                                }\r\n                                style[match[1]] = match[4];\r\n                                match = regex.exec(tag);\r\n                            }\r\n                            styleTree.push(style);\r\n                        }\r\n                    }\r\n                    else {\r\n                        FoundTag = false;\r\n                    }\r\n\r\n                    if (FoundTag) {\r\n                        inputTextIndex += tag.length;\r\n                        i += tag.length - 1;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                //detect emoji\r\n                var emojiMatch = emojiRegex().exec(c);\r\n                if (emojiMatch !== null) {\r\n                    i--; c = '';\r\n                    while (emojiMatch !== null && c !== emojiMatch[0]) {\r\n                        i++;\r\n                        c = emojiMatch[0];\r\n                        emojiMatch = emojiRegex().exec(c + inputArray[i + 1]);\r\n                    }\r\n                    emoji = true;\r\n                }\r\n            }\r\n\r\n\r\n            //Prepare DynamicChar object\r\n            var char = chars[charIndex];\r\n            if (!char) {\r\n                char = new DynamicChar();\r\n                chars[charIndex] = char;\r\n            }\r\n            char.style = style;\r\n\r\n\r\n            if (emoji) {\r\n                char.style = char.style.clone();\r\n                char.style.fontFamily = DynamicText.settings.defaultEmojiFont;\r\n            }\r\n\r\n            char.data = atlas.getCharObject(c, char.style);\r\n            char.value = c;\r\n            char.space = space;\r\n            char.newline = newline;\r\n            char.emoji = emoji;\r\n\r\n            charIndex++;\r\n            inputTextIndex += c.length;\r\n        }\r\n        charCount = charIndex;\r\n    };\r\n\r\n    //PIXIUI update, lazy update (bad solution needs rewrite when converted to pixi plugin)\r\n    this.lazyUpdate = null;\r\n    var self = this;\r\n    this.update = function () {\r\n        if (self.lazyUpdate !== null) return;\r\n        self.lazyUpdate = setTimeout(function () {\r\n            \r\n            //console.log(\"UPDATING TEXT\");\r\n            var dirtySize = !autoWidth && (self._width != lastWidth || self._height != lastHeight || self.dirtyText);\r\n\r\n            if (self.dirtyText || self.dirtyStyle) {\r\n                self.dirtyText = self.dirtyStyle = false;\r\n                self.dirtyRender = true; //force render after textchange\r\n                self.processInputText();\r\n            }\r\n\r\n            if (dirtySize || self.dirtyRender) {\r\n                self.dirtyRender = false;\r\n                lastWidth = self._width;\r\n                lastHeight = self.height;\r\n                self.prepareForRender();\r\n                self.render();\r\n            }\r\n            self.lazyUpdate = null;\r\n        }, 0);\r\n\r\n    };\r\n}\r\n\r\n\r\nDynamicText.prototype = Object.create(UIBase.prototype);\r\nDynamicText.prototype.constructor = DynamicText;\r\nmodule.exports = DynamicText;\r\nDynamicText.settings = {\r\n    debugSpriteSheet: false,\r\n    defaultEmojiFont: \"Segoe UI Emoji\" //force one font family for emojis so we dont rerender them multiple times\r\n};\r\n\r\nObject.defineProperties(DynamicText.prototype, {\r\n    value: {\r\n        get: function () {\r\n            return this._inputText;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._inputText) {\r\n                this._inputText = val;\r\n                this.dirtyText = true;\r\n                this.update();\r\n                //console.log(\"Updating Text to: \" + val);\r\n            }\r\n        }\r\n    },\r\n    text: {\r\n        get: function () {\r\n            return this.value;\r\n        },\r\n        set: function (val) {\r\n            \r\n            this.value = val;\r\n        }\r\n    },\r\n    style: {\r\n        get: function () {\r\n            return this._style;\r\n        },\r\n        set: function (val) {\r\n            //get a clean default style\r\n            var style = new DynamicTextStyle(this);\r\n\r\n            //merge it with new style\r\n            style.merge(val);\r\n\r\n            //merge it onto this default style\r\n            this._style.merge(style);\r\n\r\n            this.dirtyStyle = true;\r\n            this.update();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Atlas\r\nvar metricsCanvas = document.createElement(\"canvas\");\r\nvar metricsContext = metricsCanvas.getContext(\"2d\");\r\nmetricsCanvas.width = 100;\r\nmetricsCanvas.height = 100;\r\n\r\n\r\nvar DynamicAtlas = function (padding) {\r\n    var res = devicePixelRatio || 1,\r\n        canvas,\r\n        context,\r\n        objects,\r\n        newObjects = [],\r\n        baseTexture,\r\n        lazyTimeout,\r\n        rootNode,\r\n        canvasList = [],\r\n        atlasdim,\r\n        startdim = 256,\r\n        maxdim = 2048;\r\n\r\n\r\n    var AtlasNode = function (w, h) {\r\n        var children = this.children = [];\r\n        this.rect = new PIXI.Rectangle(0, 0, w || 0, h || 0);\r\n        this.data = null;\r\n\r\n        this.insert = function (width, height, obj) {\r\n            if (children.length > 0) {\r\n                var newNode = children[0].insert(width, height, obj);\r\n                if (newNode !== null) return newNode;\r\n\r\n                return children[1].insert(width, height, obj);\r\n            } else {\r\n                if (this.data !== null) return null;\r\n                if (width > this.rect.width || height > this.rect.height) return null;\r\n                if (width == this.rect.width && height == this.rect.height) {\r\n                    this.data = obj;\r\n                    obj.frame.x = this.rect.x;\r\n                    obj.frame.y = this.rect.y;\r\n                    return this;\r\n                }\r\n\r\n                children.push(new AtlasNode());\r\n                children.push(new AtlasNode());\r\n\r\n                var dw = this.rect.width - width;\r\n                var dh = this.rect.height - height;\r\n\r\n                if (dw > dh) {\r\n                    children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, width, this.rect.height);\r\n                    children[1].rect = new PIXI.Rectangle(this.rect.x + width, this.rect.y, this.rect.width - width, this.rect.height);\r\n                } else {\r\n                    children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, this.rect.width, height);\r\n                    children[1].rect = new PIXI.Rectangle(this.rect.x, this.rect.y + height, this.rect.width, this.rect.height - height);\r\n                }\r\n\r\n                return children[0].insert(width, height, obj);\r\n            }\r\n        };\r\n    };\r\n\r\n    var addCanvas = function () {\r\n        //create new canvas\r\n        canvas = document.createElement(\"canvas\");\r\n        context = canvas.getContext(\"2d\");\r\n        canvasList.push(canvas);\r\n\r\n        //reset dimentions\r\n        atlasdim = startdim;\r\n        canvas.width = canvas.height = atlasdim;\r\n        rootNode = new AtlasNode(atlasdim, atlasdim);\r\n\r\n        //reset array with canvas objects and create new atlas\r\n        objects = [];\r\n\r\n        //set new basetexture\r\n        baseTexture = PIXI.BaseTexture.fromCanvas(canvas);\r\n        baseTexture.mipmap = false; //if not, pixi bug resizing POW2\r\n        baseTexture.resolution = 1; //todo: support all resolutions\r\n        baseTexture.update();\r\n\r\n        //Debug Spritesheet\r\n        if (DynamicText.settings.debugSpriteSheet) {\r\n            canvas.className = \"DynamicText_SpriteSheet\";\r\n            document.body.appendChild(canvas);\r\n        }\r\n\r\n    };\r\n\r\n    this.fontFamilyCache = {};\r\n\r\n    var drawObjects = function (arr, resized) {\r\n        if (resized) baseTexture.update();\r\n        for (var i = 0; i < arr.length; i++)\r\n            drawObject(arr[i]);\r\n    };\r\n\r\n    var drawObject = function (obj) {\r\n        context.drawImage(obj._cache, obj.frame.x, obj.frame.y);\r\n        obj.texture.frame = obj.frame;\r\n        obj.texture.update();\r\n    };\r\n\r\n    this.getCharObject = function (char, style) {\r\n        var font = style.ctxFont();\r\n\r\n        //create new cache for fontFamily\r\n        var familyCache = this.fontFamilyCache[font];\r\n        if (!familyCache) {\r\n            familyCache = {};\r\n            this.fontFamilyCache[font] = familyCache;\r\n        }\r\n\r\n\r\n\r\n        //get char data\r\n        var key = style.ctxKey(char);\r\n        var obj = familyCache[key];\r\n        if (!obj) {\r\n            //create char object\r\n            var metrics = generateCharData(char, style);\r\n\r\n\r\n\r\n            //temp resize if doesnt fit (not nesseary when we dont need to generate textures)\r\n            if (metrics.rect) {\r\n                if (canvas.width < metrics.rect.width || canvas.height < metrics.rect.height) {\r\n                    canvas.width = canvas.height = Math.max(metrics.rect.width, metrics.rect.height);\r\n                    baseTexture.update();\r\n                }\r\n            }\r\n\r\n\r\n            //todo: cleanup when we know whats needed\r\n            obj = {\r\n                metrics: metrics,\r\n                font: font,\r\n                value: char,\r\n                frame: metrics.rect,\r\n                baseTexture: metrics.rect ? baseTexture : null,\r\n                xOffset: metrics.bounds ? metrics.bounds.minx : 0,\r\n                yOffset: metrics.descent || 0,\r\n                width: metrics.width || 0,\r\n                lineHeight: metrics.lineHeight || 0,\r\n                _cache: metrics.canvas,\r\n                texture: metrics.rect ? new PIXI.Texture(baseTexture, metrics.rect) : null //temp texture\r\n            };\r\n\r\n            //add to collections\r\n            familyCache[key] = obj;\r\n\r\n\r\n            //add to atlas if visible char\r\n            if (metrics.rect) {\r\n                newObjects.push(obj);\r\n\r\n\r\n\r\n                if (lazyTimeout === undefined)\r\n                    lazyTimeout = setTimeout(function () {\r\n                        addNewObjects();\r\n                        lazyTimeout = undefined;\r\n                    }, 0);\r\n\r\n            }\r\n        }\r\n\r\n        return obj;\r\n    };\r\n\r\n    var compareFunction = function (a, b) {\r\n        if (a.frame.height < b.frame.height)\r\n            return 1;\r\n\r\n        if (a.frame.height > b.frame.height)\r\n            return -1;\r\n\r\n\r\n        if (a.frame.width < b.frame.width)\r\n            return 1;\r\n\r\n        if (a.frame.width > b.frame.width)\r\n            return -1;\r\n\r\n\r\n        return 0;\r\n    };\r\n\r\n    var addNewObjects = function () {\r\n        newObjects.sort(compareFunction);\r\n        var _resized = false;\r\n        var _newcanvas = false;\r\n\r\n        for (var i = 0; i < newObjects.length; i++) {\r\n            var obj = newObjects[i];\r\n            var node = rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\r\n\r\n            if (node !== null) {\r\n                if (_newcanvas) obj.texture.baseTexture = baseTexture; //update basetexture if new canvas was created (temp)\r\n                objects.push(obj);\r\n                continue;\r\n            }\r\n\r\n            //step one back (so it will be added after resize/new canvas)\r\n            i--;\r\n\r\n            if (atlasdim < maxdim) {\r\n                _resized = true;\r\n                resizeCanvas(atlasdim * 2);\r\n                continue;\r\n            }\r\n\r\n            //close current spritesheet and make a new one\r\n            drawObjects(objects, _resized);\r\n            addCanvas();\r\n            _newcanvas = true;\r\n            _resized = false;\r\n        }\r\n\r\n        drawObjects(_resized || _newcanvas ? objects : newObjects, _resized);\r\n        newObjects = [];\r\n    };\r\n\r\n    var resizeCanvas = function (dim) {\r\n        canvas.width = canvas.height = atlasdim = dim;\r\n\r\n        rootNode = new AtlasNode(dim, dim);\r\n        objects.sort(compareFunction);\r\n\r\n        for (var i = 0; i < objects.length; i++) {\r\n            var obj = objects[i];\r\n            rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\r\n        }\r\n    };\r\n\r\n    var generateCharData = function (char, style) {\r\n\r\n        var fontSize = Math.max(1, int(style.fontSize, 26)),\r\n            lineHeight = fontSize * 1.25;\r\n\r\n\r\n        //Start our returnobject\r\n        var data = {\r\n            fontSize: fontSize,\r\n            lineHeight: lineHeight,\r\n            width: 0\r\n        };\r\n\r\n        //Return if newline\r\n        if (!char || /(?:\\r\\n|\\r|\\n)/.test(char))\r\n            return data;\r\n\r\n        //Ctx font string\r\n        var font = style.ctxFont();\r\n        metricsContext.font = font;\r\n\r\n        //Get char width\r\n        data.width = Math.round(metricsContext.measureText(char).width);\r\n\r\n        //Return if char = space\r\n        if (/(\\s)/.test(char)) return data;\r\n\r\n        //set canvas size (with padding so we can messure)\r\n        var paddingY = Math.round(fontSize * 0.7), paddingX = Math.max(5, Math.round(fontSize * 0.7));\r\n        metricsCanvas.width = Math.ceil(data.width) + paddingX * 2;\r\n        metricsCanvas.height = 1.5 * fontSize;\r\n        var w = metricsCanvas.width, h = metricsCanvas.height, baseline = (h / 2) + (paddingY * 0.5);\r\n\r\n        //set font again after resize\r\n        metricsContext.font = font;\r\n\r\n        //make sure canvas is clean\r\n        metricsContext.clearRect(0, 0, w, h);\r\n\r\n        //save clean state with font\r\n        metricsContext.save();\r\n\r\n        //convert shadow string to shadow data\r\n        var shadowData = function (str) {\r\n            var data = str.trim().split(' ');\r\n            return {\r\n                color: string(data[0], \"#000000\"),\r\n                alpha: float(data[1], 0.5),\r\n                xOffset: float(data[2], 3),\r\n                yOffset: float(data[3], 3),\r\n                blur: float(data[4], 5)\r\n            };\r\n        };\r\n\r\n        //convert fill string to fill data\r\n        var fillData = function (str) {\r\n            var data = str.trim().split(' ');\r\n            var c = string(data[0], \"#FFFFFF\");\r\n            var a = float(data[1], 1);\r\n            return {\r\n                color: c,\r\n                alpha: a,\r\n                position: float(data[2], -1),\r\n                rgba: hexToRgba(c, a)\r\n            };\r\n        };\r\n\r\n        //create fill style from fill string\r\n        var getFillStyle = function (str) {\r\n            var fills = str.split(',').filter(function (s) { return s !== ''; }), i;\r\n\r\n            //convert to fill data\r\n            for (i = 0; i < fills.length; i++) fills[i] = fillData(fills[i]);\r\n\r\n            switch (fills.length) {\r\n                case 0: return \"white\";\r\n                case 1: return fills[0].rgba ? fills[0].rgba : fills[0].color || \"#FFFFFF\";\r\n                default:\r\n                    //make gradient\r\n                    try {\r\n                        var gradEnd = baseline + lineHeight - fontSize,\r\n                            gradient = metricsContext.createLinearGradient(0, gradEnd - fontSize, 0, gradEnd);\r\n\r\n                        for (i = 0; i < fills.length; i++)\r\n                            gradient.addColorStop(fills[i].position !== -1 ? fills[i].position : i / (fills.length - 1), fills[i].rgba || fills[i].color);\r\n\r\n                        return gradient;\r\n                    }\r\n                    catch (e) {\r\n                        return \"#FFFFFF\";\r\n                    }\r\n            }\r\n        };\r\n\r\n\r\n        //function to draw shadows\r\n        var drawShadows = function (shadowString, stroke) {\r\n            var shadows = shadowString.trim().split(',').filter(function (s) { return s !== ''; });\r\n            if (shadows.length) {\r\n                for (var i = 0; i < shadows.length; i++) {\r\n                    var s = shadowData(shadows[i]);\r\n                    metricsContext.globalAlpha = s.alpha;\r\n                    metricsContext.shadowColor = s.color;\r\n                    metricsContext.shadowOffsetX = s.xOffset + w;\r\n                    metricsContext.shadowOffsetY = s.yOffset;\r\n                    metricsContext.shadowBlur = s.blur;\r\n\r\n                    if (stroke) {\r\n                        metricsContext.lineWidth = style.stroke;\r\n                        metricsContext.strokeText(char, paddingX - w, baseline);\r\n                    }\r\n                    else metricsContext.fillText(char, paddingX - w, baseline);\r\n                }\r\n                metricsContext.restore();\r\n            }\r\n        };\r\n\r\n        //draw text shadows\r\n        if (style.shadow.length)\r\n            drawShadows(style.shadow, false);\r\n\r\n        //draw stroke shadows\r\n        if (style.stroke && style.strokeShadow.length) {\r\n            drawShadows(style.strokeShadow, true);\r\n        }\r\n\r\n        //draw text\r\n        metricsContext.fillStyle = getFillStyle(string(style.fill, \"#000000\"));\r\n        metricsContext.fillText(char, paddingX, baseline);\r\n        metricsContext.restore();\r\n\r\n        //draw stroke\r\n        if (style.stroke) {\r\n            metricsContext.strokeStyle = getFillStyle(string(style.strokeFill, \"#000000\"));\r\n            metricsContext.lineWidth = style.stroke;\r\n            metricsContext.strokeText(char, paddingX, baseline);\r\n            metricsContext.restore();\r\n        }\r\n\r\n\r\n        //begin messuring\r\n        var pixelData = metricsContext.getImageData(0, 0, w, h).data;\r\n\r\n        var i = 3,\r\n            line = w * 4,\r\n            len = pixelData.length;\r\n\r\n\r\n\r\n        //scanline on alpha\r\n        while (i < len && !pixelData[i]) { i += 4; }\r\n        var ascent = (i / line) | 0;\r\n\r\n\r\n        if (i < len) {\r\n            //rev scanline on alpha\r\n            i = len - 1;\r\n            while (i > 0 && !pixelData[i]) { i -= 4; }\r\n            var descent = (i / line) | 0;\r\n\r\n\r\n            //left to right scanline on alpha\r\n            for (i = 3; i < len && !pixelData[i];) {\r\n                i += line;\r\n                if (i >= len) { i = (i - len) + 4; }\r\n            }\r\n            var minx = ((i % line) / 4) | 0;\r\n\r\n            //right to left scanline on alpha\r\n            var step = 1;\r\n            for (i = len - 1; i >= 0 && !pixelData[i];) {\r\n                i -= line;\r\n                if (i < 0) { i = (len - 1) - (step++) * 4; }\r\n            }\r\n            var maxx = ((i % line) / 4) + 1 | 0;\r\n\r\n\r\n            // set font metrics\r\n            data.ascent = Math.round(baseline - ascent);\r\n            data.descent = Math.round(descent - baseline);\r\n            data.height = 1 + Math.round(descent - ascent);\r\n            data.bounds = {\r\n                minx: minx - paddingX,\r\n                maxx: maxx - paddingX,\r\n                miny: 0,\r\n                maxy: descent - ascent\r\n            };\r\n            data.rect = {\r\n                x: data.bounds.minx,\r\n                y: -data.ascent - 2,\r\n                width: data.bounds.maxx - data.bounds.minx + 2,\r\n                height: data.ascent + data.descent + 4\r\n            };\r\n\r\n\r\n            //cache (for fast rearrange later)\r\n            data.canvas = document.createElement(\"canvas\");\r\n            data.canvas.width = data.rect.width;\r\n            data.canvas.height = data.rect.height;\r\n            var c = data.canvas.getContext(\"2d\");\r\n            c.drawImage(metricsCanvas, -paddingX - data.rect.x, -baseline - data.rect.y);\r\n\r\n            //reset rect position\r\n            data.rect.x = data.rect.y = 0;\r\n\r\n\r\n        }\r\n        return data;\r\n    };\r\n\r\n    addCanvas();\r\n};\r\n\r\n\r\n\r\n//helper function for float or default\r\nfunction float(val, def) {\r\n    if (isNaN(val)) return def;\r\n    return parseFloat(val);\r\n}\r\n\r\n//helper function for int or default\r\nfunction int(val, def) {\r\n    if (isNaN(val)) return def;\r\n    return parseInt(val);\r\n}\r\n\r\n//helper function for string or default\r\nfunction string(val, def) {\r\n    if (typeof val === 'string' && val.length) return val;\r\n    return def;\r\n}\r\n\r\n//helper function to convert string hex to int or default\r\nfunction hexToInt(str, def) {\r\n    if (typeof str === 'number')\r\n        return str;\r\n\r\n    var result = parseInt(str.replace('#', '0x'));\r\n\r\n    if (isNaN(result)) return def;\r\n    return result;\r\n}\r\n\r\n//helper function to convert hex to rgba\r\nfunction hexToRgba(hex, alpha) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    alpha = float(alpha, 1);\r\n    return result ? \"rgba(\" + parseInt(result[1], 16) + \",\" + parseInt(result[2], 16) + \",\" + parseInt(result[3], 16) + \",\" + alpha + \")\" : false;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","function DynamicTextStyle(parent) {\r\n    this.respectDirty = true;\r\n    this._parent = parent || null;\r\n    this._scale = 1;\r\n    this._align = 'left';\r\n    this._fontFamily = 'Arial';\r\n    this._fontSize = 26;\r\n    this._fontWeight = 'normal';\r\n    this._fontStyle = 'normal';\r\n    this._letterSpacing = 0;\r\n    this._lineHeight = 0;\r\n    this._verticalAlign = 0;\r\n    this._rotation = 0;\r\n    this._skew = 0;\r\n    this._tint = \"#FFFFFF\";\r\n    this._fill = '#FFFFFF';\r\n    this._shadow = '';\r\n    this._stroke = 0;\r\n    this._strokeFill = '';\r\n    this._strokeShadow = '';\r\n    this._wrap = true;\r\n    this._breakWords = false;\r\n    this._overflowX = 'visible'; //visible|hidden\r\n    this._overflowY = 'visible'; //visible|hidden\r\n    this._ellipsis = false;\r\n\r\n\r\n    var _cachedEllipsisSize = null;\r\n    this.ellipsisSize = function (atlas) {\r\n        if (!this.ellipsis) return 0;\r\n        if (_cachedEllipsisSize === null)\r\n            _cachedEllipsisSize = (atlas.getCharObject(\".\", this).width + this.letterSpacing) * 3;\r\n        return _cachedEllipsisSize;\r\n    };\r\n}\r\n\r\n\r\nDynamicTextStyle.prototype.clone = function () {\r\n    var style = new DynamicTextStyle();\r\n    style.merge(this);\r\n    return style;\r\n};\r\n\r\nDynamicTextStyle.prototype.merge = function (style) {\r\n\r\n    if (typeof style === 'object') {\r\n        this.respectDirty = false;\r\n        for (var param in style) {\r\n            var val = style[param];\r\n            if (typeof val === 'function' || param === 'respectDirty' || param === '_parent') continue;\r\n            this[param] = style[param];\r\n        }\r\n        this.respectDirty = true;\r\n        this._dirty = true;\r\n    }\r\n};\r\n\r\nDynamicTextStyle.prototype.ctxKey = function (char) {\r\n    return [char, this.fill, this.shadow, this.stroke, this.strokeFill, this.strokeShadow].join('|');\r\n};\r\n\r\nDynamicTextStyle.prototype.ctxFont = function () {\r\n    var fontSize = Math.min(200, Math.max(1, this.fontSize || 26)) + \"px \";\r\n    var fontWeight = this.fontWeight === \"bold\" ? this.fontWeight + \" \" : \"\";\r\n    var fontStyle = this.fontStyle === \"italic\" || this.fontStyle === \"oblique\" ? this.fontStyle + \" \" : \"\";\r\n    return fontWeight + fontStyle + fontSize + this.fontFamily;\r\n};\r\n\r\nDynamicTextStyle.prototype.constructor = DynamicTextStyle;\r\nmodule.exports = DynamicTextStyle;\r\n\r\nObject.defineProperties(DynamicTextStyle.prototype, {\r\n    _dirty: {\r\n        set: function (val) {\r\n            if (this.respectDirty) {\r\n                if (this._parent !== null) {\r\n                    this._parent.dirtyStyle = val;\r\n                    this._parent.update();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    scale: {\r\n        get: function () {\r\n            return this._scale;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._scale) {\r\n                this._scale = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    align: {\r\n        get: function () {\r\n            return this._align;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._align) {\r\n                this._align = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    fontFamily: {\r\n        get: function () {\r\n            return this._fontFamily;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._fontFamily) {\r\n                this._fontFamily = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    fontSize: {\r\n        get: function () {\r\n            return this._fontSize;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._fontSize) {\r\n                this._fontSize = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    fontWeight: {\r\n        get: function () {\r\n            return this._fontWeight;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._fontWeight) {\r\n                this._fontWeight = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    fontStyle: {\r\n        get: function () {\r\n            return this._fontStyle;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._fontStyle) {\r\n                this._fontStyle = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    letterSpacing: {\r\n        get: function () {\r\n            return this._letterSpacing;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._letterSpacing) {\r\n                this._letterSpacing = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    lineHeight: {\r\n        get: function () {\r\n            return this._lineHeight;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._lineHeight) {\r\n                this._lineHeight = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    verticalAlign: {\r\n        get: function () {\r\n            return this._verticalAlign;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._verticalAlign) {\r\n                this._verticalAlign = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    rotation: {\r\n        get: function () {\r\n            return this._rotation;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._rotation) {\r\n                this._rotation = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    skew: {\r\n        get: function () {\r\n            return this._skew;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._skew) {\r\n                this._skew = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    tint: {\r\n        get: function () {\r\n            return this._tint;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._tint) {\r\n                this._tint = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    fill: {\r\n        get: function () {\r\n            return this._fill;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._fill) {\r\n                this._fill = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    shadow: {\r\n        get: function () {\r\n            return this._shadow;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._shadow) {\r\n                this._shadow = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    stroke: {\r\n        get: function () {\r\n            return this._stroke;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._stroke) {\r\n                this._stroke = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    strokeFill: {\r\n        get: function () {\r\n            return this._strokeFill;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._strokeFill) {\r\n                this._strokeFill = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    strokeShadow: {\r\n        get: function () {\r\n            return this._strokeShadow;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._strokeShadow) {\r\n                this._strokeShadow = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    wrap: {\r\n        get: function () {\r\n            return this._wrap;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._wrap) {\r\n                this._wrap = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    breakWords: {\r\n        get: function () {\r\n            return this._breakWords;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._breakWords) {\r\n                this._breakWords = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    overflowX: {\r\n        get: function () {\r\n            return this._overflowX;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._overflowX) {\r\n                this._overflowX = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    overflowY: {\r\n        get: function () {\r\n            return this._overflowY;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._overflowY) {\r\n                this._overflowY = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    ellipsis: {\r\n        get: function () {\r\n            return this._ellipsis;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._ellipsis) {\r\n                this._ellipsis = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    }\r\n});","var Ease = {},\r\n    EaseBase = require('./EaseBase'),\r\n    ExponentialEase = require('./ExponentialEase'),\r\n    HALF_PI = Math.PI * 0.5;\r\n\r\nfunction create(fn) {\r\n    var e = Object.create(EaseBase.prototype);\r\n    e.getPosition = fn;\r\n    return e;\r\n}\r\n\r\n\r\n//Liear\r\nEase.Linear = new EaseBase();\r\n\r\n//Exponetial Eases\r\nfunction wrapEase(easeInFunction, easeOutFunction, easeInOutFunction) {\r\n    return {\r\n        easeIn: easeInFunction,\r\n        easeOut: easeOutFunction,\r\n        easeInOut: easeInOutFunction\r\n    };\r\n}\r\n\r\nEase.Power0 = {\r\n    \"easeNone\" : Ease.Linear,\r\n};\r\n\r\nEase.Power1 = Ease.Quad = wrapEase(\r\n    new ExponentialEase(1, 1, 0),\r\n    new ExponentialEase(1, 0, 1),\r\n    new ExponentialEase(1, 1, 1));\r\n\r\nEase.Power2 = Ease.Cubic = wrapEase(\r\n    new ExponentialEase(2, 1, 0),\r\n    new ExponentialEase(2, 0, 1),\r\n    new ExponentialEase(2, 1, 1));\r\n\r\nEase.Power3 = Ease.Quart = wrapEase(\r\n    new ExponentialEase(3, 1, 0),\r\n    new ExponentialEase(3, 0, 1),\r\n    new ExponentialEase(3, 1, 1));\r\n\r\nEase.Power4 = Ease.Quint = wrapEase(\r\n    new ExponentialEase(4, 1, 0),\r\n    new ExponentialEase(4, 0, 1),\r\n    new ExponentialEase(4, 1, 1));\r\n\r\n\r\n//Bounce\r\nEase.Bounce = {\r\n    \"BounceIn\": create(function (p) {\r\n        if ((p = 1 - p) < 1 / 2.75) {\r\n            return 1 - (7.5625 * p * p);\r\n        } else if (p < 2 / 2.75) {\r\n            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\r\n        } else if (p < 2.5 / 2.75) {\r\n            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\r\n        }\r\n        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\r\n    }),\r\n    \"BounceOut\": create(function (p) {\r\n        if (p < 1 / 2.75) {\r\n            return 7.5625 * p * p;\r\n        } else if (p < 2 / 2.75) {\r\n            return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\r\n        } else if (p < 2.5 / 2.75) {\r\n            return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\r\n        }\r\n        return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\r\n    }),\r\n    \"BounceInOut\": create(function (p) {\r\n        var invert = (p < 0.5);\r\n        if (invert) {\r\n            p = 1 - (p * 2);\r\n        } else {\r\n            p = (p * 2) - 1;\r\n        }\r\n        if (p < 1 / 2.75) {\r\n            p = 7.5625 * p * p;\r\n        } else if (p < 2 / 2.75) {\r\n            p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\r\n        } else if (p < 2.5 / 2.75) {\r\n            p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\r\n        } else {\r\n            p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\r\n        }\r\n        return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\r\n    })\r\n};\r\n\r\n//Circ\r\nEase.Circ = {\r\n    \"CircIn\": create(function (p) {\r\n        return -(Math.sqrt(1 - (p * p)) - 1);\r\n    }),\r\n    \"CircOut\": create(function (p) {\r\n        return Math.sqrt(1 - (p = p - 1) * p);\r\n    }),\r\n    \"CircInOut\": create(function (p) {\r\n        return ((p *= 2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\r\n    })\r\n};\r\n\r\n\r\n//Expo\r\nEase.Expo = {\r\n    \"ExpoIn\": create(function (p) {\r\n        return Math.pow(2, 10 * (p - 1)) - 0.001;\r\n    }),\r\n    \"ExpoOut\": create(function (p) {\r\n        return 1 - Math.pow(2, -10 * p);\r\n    }),\r\n    \"ExpoInOut\": create(function (p) {\r\n        return ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\r\n    })\r\n};\r\n\r\n\r\n//Sine\r\nEase.Sine = {\r\n    \"SineIn\": create(function (p) {\r\n        return -Math.cos(p * HALF_PI) + 1;\r\n    }),\r\n    \"SineOut\": create(function (p) {\r\n        return Math.sin(p * HALF_PI);\r\n    }),\r\n    \"SineInOut\": create(function (p) {\r\n        return -0.5 * (Math.cos(Math.PI * p) - 1);\r\n    })\r\n};\r\n\r\n\r\nmodule.exports = Ease;\r\n\r\n\r\n","function EaseBase() {\r\n    this.getPosition = function (p) {\r\n        return p;\r\n    };\r\n}\r\n\r\nEaseBase.prototype.constructor = EaseBase;\r\nmodule.exports = EaseBase;\r\n\r\n\r\n\r\n","var EaseBase = require('./EaseBase');\r\n\r\nfunction ExponentialEase(power, easeIn, easeOut) {\r\n    var pow = power;\r\n    var t = easeIn && easeOut ? 3 : easeOut ? 1 : 2;\r\n    this.getPosition = function (p) {\r\n        var r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n        if (pow === 1) {\r\n            r *= r;\r\n        } else if (pow === 2) {\r\n            r *= r * r;\r\n        } else if (pow === 3) {\r\n            r *= r * r * r;\r\n        } else if (pow === 4) {\r\n            r *= r * r * r * r;\r\n        }\n        return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\r\n    };\r\n}\r\n\r\nExponentialEase.prototype = Object.create(EaseBase.prototype);\r\nExponentialEase.prototype.constructor = ExponentialEase;\r\nmodule.exports = ExponentialEase;\r\n\r\n\r\n\r\n","var Helpers = {\r\n    Lerp: function (start, stop, amt) {\r\n        if (amt > 1) amt = 1;\r\n        else if (amt < 0) amt = 0;\r\n        return start + (stop - start) * amt;\r\n    },\r\n    Round: function(number, decimals) {\r\n        var pow = Math.pow(10, decimals);\r\n        return Math.round(number * pow) / pow;\r\n    },\r\n    componentToHex: function(c) {\r\n       var hex = c.toString(16);\r\n       return hex.length == 1 ? \"0\" + hex : hex;\r\n    },\r\n    rgbToHex: function(r, g, b) {\r\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n    },\r\n    rgbToNumber: function (r, g, b) {\r\n        return r * 65536 + g * 256 + b;\r\n    },\r\n    numberToRgb: function (c) {\r\n        return {\r\n            r: Math.floor(c / (256 * 256)),\r\n            g: Math.floor(c / 256) % 256,\r\n            b: c % 256,\r\n        };\r\n    },\r\n    hexToRgb: function (hex) {\r\n        if (hex === null)\r\n            hex = 0xffffff;\r\n\r\n        if (!isNaN(hex)) return this.numberToRgb(hex);\r\n\r\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n};\r\n\r\nmodule.exports = Helpers;","var UIBase = require('./UIBase'),\r\n    InputController = require('./Interaction/InputController'),\r\n    ClickEvent = require('./Interaction/ClickEvent');\r\n/**\r\n * base object for all Input type objects\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param width {number} passed to uibase\r\n * @param height {number} passed to uibase\r\n * @param tabIndex {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\r\n */\r\nfunction InputBase(width, height, tabIndex, tabGroup) {\r\n    UIBase.call(this, width, height);\r\n    var self = this;\r\n    this._focused = false;\r\n    this._useTab = this._usePrev = this._useNext = true;\r\n    this.container.interactive = true;\r\n    InputController.registrer(this, tabIndex, tabGroup);\r\n\r\n\r\n    var keyDownEvent = function (e) {\r\n        if (e.which === 9) {\r\n            if (self._useTab) {\r\n                InputController.fireTab();\r\n                e.preventDefault();\r\n            }\r\n        }\r\n        else if (e.which === 38) {\r\n            if (self._usePrev) {\r\n                InputController.firePrev();\r\n                e.preventDefault();\r\n            }\r\n        }\r\n        else if (e.which === 40) {\r\n            if (self._useNext) {\r\n                InputController.fireNext();\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    var documentMouseDown = function (e) {\r\n        if (!self.__down)\r\n            self.blur();\r\n    };\r\n\r\n    this.container.on(\"pointerdown\", function (e) {\r\n        self.focus();\r\n        self.__down = true;\r\n    });\r\n\r\n    this.container.on(\"pointerup\", function (e) {\r\n        self.__down = false;\r\n    });\r\n\r\n    this.container.on(\"pointerupoutside\", function (e) {\r\n        self.__down = false;\r\n    });\r\n\r\n    //var cancelFocusEvent = new ClickEvent(this.stage)\r\n\r\n    this._bindEvents = function () {\r\n        if (this.stage !== null) {\r\n            this.stage.on(\"pointerdown\", documentMouseDown);\r\n            document.addEventListener(\"keydown\", keyDownEvent);\r\n        }\r\n    };\r\n\r\n    this._clearEvents = function () {\r\n        if (this.stage !== null) {\r\n            this.stage.off(\"pointerdown\", documentMouseDown);\r\n            document.removeEventListener(\"keydown\", keyDownEvent);\r\n        }\r\n    };\r\n}\r\n\r\nInputBase.prototype = Object.create(UIBase.prototype);\r\nInputBase.prototype.constructor = InputBase;\r\nmodule.exports = InputBase;\r\n\r\nInputBase.prototype.focus = function () {\r\n    if (!this._focused) {\r\n        this._focused = true;\r\n        this._bindEvents();\r\n        InputController.set(this);\r\n        this.emit(\"focusChanged\", true);\r\n        this.emit(\"focus\");\r\n\r\n    }\r\n};\r\n\r\nInputBase.prototype.blur = function () {\r\n    if (this._focused) {\r\n        InputController.clear();\r\n        this._focused = false;\r\n        this._clearEvents();\r\n        this.emit(\"focusChanged\", false);\r\n        this.emit(\"blur\");\r\n\r\n    }\r\n};","var ClickEvent = function (obj, includeHover, rightMouseButton, doubleClick) {\r\n\r\n\r\n\r\n    var bound = false,\r\n        self = this,\r\n        id = 0,\r\n        ishover = false,\r\n        mouse = new PIXI.Point(),\r\n        offset = new PIXI.Point(),\r\n        movementX = 0,\r\n        movementY = 0,\r\n        right = typeof rightMouseButton === 'undefined' ? false : rightMouseButton,\r\n        hover = typeof includeHover === 'undefined' ? true : includeHover,\r\n        double = typeof doubleClick === 'undefined' ? false : doubleClick;\r\n\r\n\r\n    var eventname_mousedown = right ? \"rightdown\" : \"mousedown\";\r\n    var eventname_mouseup = right ? \"rightup\" : \"mouseup\";\r\n    var eventname_mouseupoutside = right ? \"rightupoutside\" : \"mouseupoutside\";\r\n\r\n    obj.container.interactive = true;\r\n\r\n    var time = 0;\r\n\r\n    var _onMouseDown = function (event) {\r\n        mouse.copy(event.data.global);\r\n        id = event.data.identifier;\r\n        self.onPress.call(obj, event, true);\r\n        if (!bound) {\r\n            obj.container.on(eventname_mouseup, _onMouseUp);\r\n            obj.container.on(eventname_mouseupoutside, _onMouseUpOutside);\r\n            if (!right) {\r\n                obj.container.on('touchend', _onMouseUp);\r\n                obj.container.on('touchendoutside', _onMouseUpOutside);\r\n            }\r\n            bound = true;\r\n        }\r\n\r\n        if (double) {\r\n            var now = performance.now();\r\n            if (now - time < 210) {\r\n                self.onClick.call(obj, event);\r\n            }\r\n            else {\r\n                time = now;\r\n            }\r\n        }\r\n\r\n\r\n        event.data.originalEvent.preventDefault();\r\n    };\r\n\r\n    var _mouseUpAll = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        offset.set(event.data.global.x - mouse.x, event.data.global.y - mouse.y);\r\n        if (bound) {\r\n            obj.container.removeListener(eventname_mouseup, _onMouseUp);\r\n            obj.container.removeListener(eventname_mouseupoutside, _onMouseUpOutside);\r\n            if (!right) {\r\n                obj.container.removeListener('touchend', _onMouseUp);\r\n                obj.container.removeListener('touchendoutside', _onMouseUpOutside);\r\n            }\r\n            bound = false;\r\n        }\r\n        self.onPress.call(obj, event, false);\r\n    };\r\n\r\n    var _onMouseUp = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        _mouseUpAll(event);\r\n\r\n        //prevent clicks with scrolling/dragging objects\r\n        if (obj.dragThreshold) {\r\n            movementX = Math.abs(offset.x);\r\n            movementY = Math.abs(offset.y);\r\n            if (Math.max(movementX, movementY) > obj.dragThreshold) return;\r\n        }\r\n\r\n        if (!double)\r\n            self.onClick.call(obj, event);\r\n    };\r\n\r\n    var _onMouseUpOutside = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        _mouseUpAll(event);\r\n    };\r\n\r\n    var _onMouseOver = function (event) {\r\n        if (!ishover) {\r\n            ishover = true;\r\n            obj.container.on('mousemove', _onMouseMove);\r\n            obj.container.on('touchmove', _onMouseMove);\r\n            self.onHover.call(obj, event, true);\r\n        }\r\n    };\r\n\r\n    var _onMouseOut = function (event) {\r\n        if (ishover) {\r\n            ishover = false;\r\n            obj.container.removeListener('mousemove', _onMouseMove);\r\n            obj.container.removeListener('touchmove', _onMouseMove);\r\n            self.onHover.call(obj, event, false);\r\n        }\r\n    };\r\n\r\n    var _onMouseMove = function (event) {\r\n        self.onMove.call(obj, event);\r\n    };\r\n\r\n    this.stopEvent = function () {\r\n        if (bound) {\r\n            obj.container.removeListener(eventname_mouseup, _onMouseUp);\r\n            obj.container.removeListener(eventname_mouseupoutside, _onMouseUpOutside);\r\n\r\n            if (!right) {\r\n                obj.container.removeListener('touchend', _onMouseUp);\r\n                obj.container.removeListener('touchendoutside', _onMouseUpOutside);\r\n            }\r\n            bound = false;\r\n        }\r\n        obj.container.removeListener(eventname_mousedown, _onMouseDown);\r\n        if (!right) obj.container.removeListener('touchstart', _onMouseDown);\r\n\r\n        if (hover) {\r\n            obj.container.removeListener('mouseover', _onMouseOver);\r\n            obj.container.removeListener('mouseout', _onMouseOut);\r\n            obj.container.removeListener('mousemove', _onMouseMove);\r\n            obj.container.removeListener('touchmove', _onMouseMove);\r\n        }\r\n    };\r\n\r\n    this.startEvent = function () {\r\n        obj.container.on(eventname_mousedown, _onMouseDown);\r\n        if (!right) obj.container.on('touchstart', _onMouseDown);\r\n\r\n        if (hover) {\r\n            obj.container.on('mouseover', _onMouseOver);\r\n            obj.container.on('mouseout', _onMouseOut);\r\n\r\n        }\r\n    };\r\n\r\n    this.startEvent();\r\n};\r\n\r\nClickEvent.prototype.constructor = ClickEvent;\r\nmodule.exports = ClickEvent;\r\n\r\nClickEvent.prototype.onHover = function (event, over) { };\r\nClickEvent.prototype.onPress = function (event, isPressed) { };\r\nClickEvent.prototype.onClick = function (event) { };\r\nClickEvent.prototype.onMove = function (event) { };","var _items = [];\r\nvar DragDropController = {\r\n    add: function (item, event) {\r\n        item._dragDropEventId = event.data.identifier;\r\n        if (_items.indexOf(item) === -1) {\r\n            _items.push(item);\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    getItem: function (object) {\r\n        var item = null, index;\r\n        for (var i = 0; i < _items.length; i++) {\r\n            if (_items[i] === object) {\r\n                item = _items[i];\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (item !== null) {\r\n            _items.splice(index, 1);\r\n            return item;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    },\r\n    getEventItem: function (event, group) {\r\n        var item = null, index, id = event.data.identifier;\r\n        for (var i = 0; i < _items.length; i++) {\r\n            if (_items[i]._dragDropEventId === id) {\r\n                if (group !== _items[i].dragGroup) {\r\n                    return false;\r\n                }\r\n                item = _items[i];\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (item !== null) {\r\n            _items.splice(index, 1);\r\n            return item;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = DragDropController;","var DragEvent = function (obj) {\r\n    var bound = false,\r\n        start = new PIXI.Point(),\r\n        offset = new PIXI.Point(),\r\n        mouse = new PIXI.Point(),\r\n        movementX = 0,\r\n        movementY = 0,\r\n        cancel = false,\r\n        dragging = false,\r\n        self = this,\r\n        id = 0;\r\n\r\n    obj.container.interactive = true;\r\n\r\n    var _onDragStart = function (e) {\r\n        id = e.data.identifier;\r\n        self.onPress.call(obj, e, true);\r\n        if (!bound) {\r\n            start.copy(e.data.global);\r\n            obj.stage.on('mousemove', _onDragMove);\r\n            obj.stage.on('touchmove', _onDragMove);\r\n            obj.stage.on('mouseup', _onDragEnd);\r\n            obj.stage.on('mouseupoutside', _onDragEnd);\r\n            obj.stage.on('touchend', _onDragEnd);\r\n            obj.stage.on('touchendoutside', _onDragEnd);\r\n            obj.stage.on('touchcancel', _onDragEnd);\r\n            bound = true;\r\n        }\r\n\r\n        e.data.originalEvent.preventDefault();\r\n    };\r\n\r\n    var _onDragMove = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        mouse.copy(event.data.global);\r\n        offset.set(mouse.x - start.x, mouse.y - start.y);\r\n        if (!dragging) {\r\n            movementX = Math.abs(offset.x);\r\n            movementY = Math.abs(offset.y);\r\n            if (movementX === 0 && movementY === 0 || Math.max(movementX, movementY) < obj.dragThreshold) return; //thresshold\r\n            if (obj.dragRestrictAxis !== null) {\r\n                cancel = false;\r\n                if (obj.dragRestrictAxis == \"x\" && movementY > movementX) cancel = true;\r\n                else if (obj.dragRestrictAxis == \"y\" && movementY <= movementX) cancel = true;\r\n                if (cancel) {\r\n                    _onDragEnd(event);\r\n                    return;\r\n                }\r\n            }\r\n            self.onDragStart.call(obj, event);\r\n            dragging = true;\r\n        }\r\n        self.onDragMove.call(obj, event, offset);\r\n    };\r\n\r\n    var _onDragEnd = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        if (bound) {\r\n            obj.stage.removeListener('mousemove', _onDragMove);\r\n            obj.stage.removeListener('touchmove', _onDragMove);\r\n            obj.stage.removeListener('mouseup', _onDragEnd);\r\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\r\n            obj.stage.removeListener('touchend', _onDragEnd);\r\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\r\n            obj.stage.removeListener('touchcancel', _onDragEnd);\r\n            dragging = false;\r\n            bound = false;\r\n            self.onDragEnd.call(obj, event);\r\n            self.onPress.call(obj, event, false);\r\n\r\n        }\r\n    };\r\n\r\n    this.stopEvent = function () {\r\n        if (bound) {\r\n            obj.stage.removeListener('mousemove', _onDragMove);\r\n            obj.stage.removeListener('touchmove', _onDragMove);\r\n            obj.stage.removeListener('mouseup', _onDragEnd);\r\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\r\n            obj.stage.removeListener('touchend', _onDragEnd);\r\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\r\n            bound = false;\r\n        }\r\n        obj.container.removeListener('mousedown', _onDragStart);\r\n        obj.container.removeListener('touchstart', _onDragStart);\r\n    };\r\n\r\n    this.startEvent = function () {\r\n        obj.container.on('mousedown', _onDragStart);\r\n        obj.container.on('touchstart', _onDragStart);\r\n    };\r\n\r\n    this.startEvent();\r\n};\r\n\r\nDragEvent.prototype.constructor = DragEvent;\r\nmodule.exports = DragEvent;\r\n\r\nDragEvent.prototype.onPress = function (event, isPressed) { };\r\nDragEvent.prototype.onDragEnd = function (event) { };\r\nDragEvent.prototype.onDragMove = function (event, offset) { };\r\nDragEvent.prototype.onDragStart = function (event) { };","var _currentItem;\r\nvar tabGroups = {};\r\nvar checkGroups = {};\r\nvar checkGroupValues = {};\r\n\r\nvar InputController = {\r\n    registrer: function (item, tabIndex, tabGroup) {\r\n        var groupName = tabGroup || \"default\";\r\n\r\n        var items = tabGroups[groupName];\r\n        if (!items)\r\n            items = tabGroups[groupName] = [];\r\n\r\n        var i = items.indexOf(item);\r\n        if (i === -1) {\r\n            item._tabIndex = tabIndex !== undefined ? tabIndex : -1;\r\n            item._tabGroup = items;\r\n            items.push(item);\r\n            items.sort(function (a, b) {\r\n                if (a._tabIndex < b._tabIndex)\r\n                    return -1;\r\n                if (a._tabIndex > b._tabIndex)\r\n                    return 1;\r\n                return 0;\r\n            });\r\n        }\r\n    },\r\n    set: function (item) {\r\n        this.blur();\r\n        _currentItem = item;\r\n    },\r\n    clear: function () {\r\n        _currentItem = undefined;\r\n    },\r\n    blur: function () {\r\n        if (_currentItem && typeof _currentItem.blur === \"function\")\r\n            _currentItem.blur();\r\n    },\r\n    fireTab: function () {\r\n        if (_currentItem) {\r\n            var i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\r\n            if (i >= _currentItem._tabGroup.length) i = 0;\r\n            _currentItem._tabGroup[i].focus();\r\n        }\r\n    },\r\n    fireNext: function () {\r\n        if (_currentItem) {\r\n            var i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\r\n            if (i >= _currentItem._tabGroup.length) i = _currentItem._tabGroup.length - 1;\r\n            _currentItem._tabGroup[i].focus();\r\n        }\r\n    },\r\n    firePrev: function () {\r\n        if (_currentItem) {\r\n            var i = _currentItem._tabGroup.indexOf(_currentItem) - 1;\r\n            if (i < 0) i = 0;\r\n            _currentItem._tabGroup[i].focus();\r\n        }\r\n    },\r\n    registrerCheckGroup: function (cb) {\r\n        var name = cb.checkGroup;\r\n        var group = checkGroups[name];\r\n        if (!group) group = checkGroups[name] = {};\r\n        group[cb.value] = cb;\r\n\r\n        if (cb.checked)\r\n            checkGroupValues[name] = cb.value;\r\n    },\r\n    updateCheckGroupSelected: function (cb) {\r\n        var group = checkGroups[cb.checkGroup];\r\n        for (var val in group) {\r\n            var b = group[val];\r\n            if (b !== cb)\r\n                b.checked = false;\r\n        }\r\n        checkGroupValues[cb.checkGroup] = cb.value;\r\n    },\r\n    getCheckGroupSelectedValue: function (name) {\r\n        if (checkGroupValues[name])\r\n            return checkGroupValues[name];\r\n        return \"\";\r\n    },\r\n    setCheckGroupSelectedValue: function (name, val) {\r\n        var group = checkGroups[name];\r\n        if (group) {\r\n            var cb = group[val];\r\n            if (cb) {\r\n                cb.checked = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = InputController;","var Interaction = {\r\n    ClickEvent: require('./ClickEvent'),\r\n    DragEvent: require('./DragEvent'),\r\n    MouseScrollEvent: require('./MouseScrollEvent'),\r\n    InputController: require('./InputController')\r\n};\r\n\r\n\r\nmodule.exports = Interaction;","var MouseScrollEvent = function (obj, preventDefault) {\r\n    var bound = false, delta = new PIXI.Point(), self = this;\r\n    obj.container.interactive = true;\r\n\r\n    var _onMouseScroll = function (event) {\r\n        if (preventDefault)\r\n            event.preventDefault();\r\n\r\n        if (typeof event.deltaX !== \"undefined\")\r\n            delta.set(event.deltaX, event.deltaY);\r\n        else //Firefox\r\n            delta.set(event.axis == 1 ? event.detail * 60 : 0, event.axis == 2 ? event.detail * 60 : 0);\r\n\r\n        self.onMouseScroll.call(obj, event, delta);\r\n    };\r\n\r\n    var _onHover = function (event) {\r\n        if (!bound) {\r\n            document.addEventListener(\"mousewheel\", _onMouseScroll, false);\r\n            document.addEventListener(\"DOMMouseScroll\", _onMouseScroll, false);\r\n            bound = true;\r\n        }\r\n    };\r\n\r\n    var _onMouseOut = function (event) {\r\n        if (bound) {\r\n            document.removeEventListener(\"mousewheel\", _onMouseScroll);\r\n            document.removeEventListener(\"DOMMouseScroll\", _onMouseScroll);\r\n            bound = false;\r\n        }\r\n    };\r\n\r\n    this.stopEvent = function () {\r\n        if (bound) {\r\n            document.removeEventListener(\"mousewheel\", _onMouseScroll);\r\n            document.removeEventListener(\"DOMMouseScroll\", _onMouseScroll);\r\n            bound = false;\r\n        }\r\n        obj.container.removeListener('mouseover', _onHover);\r\n        obj.container.removeListener('mouseout', _onMouseOut);\r\n    };\r\n\r\n    this.startEvent = function () {\r\n        obj.container.on('mouseover', _onHover);\r\n        obj.container.on('mouseout', _onMouseOut);\r\n    };\r\n\r\n    this.startEvent();\r\n\r\n    \r\n};\r\n\r\nMouseScrollEvent.prototype.constructor = MouseScrollEvent;\r\nmodule.exports = MouseScrollEvent;\r\n\r\nMouseScrollEvent.prototype.onMouseScroll = function (event, delta) { };","var Slider = require('./Slider'),\r\n    Tween = require('./Tween'),\r\n    Ease = require('./Ease/Ease');\r\n\r\n/**\r\n* An UI scrollbar to control a ScrollingContainer\r\n* \r\n* @class\r\n* @extends PIXI.UI.Slider\r\n* @memberof PIXI.UI\r\n* @param options {Object} ScrollBar settings\r\n* @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the scrollbar track\r\n* @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as scrollbar handle\r\n* @param options.scrollingContainer {PIXI.UI.ScrollingContainer} The container to control\r\n* @param [options.vertical=false] {boolean} Direction of the scrollbar\r\n* @param [options.autohide=false] {boolean} Hides the scrollbar when not needed\r\n*\r\n*/\r\nfunction ScrollBar(options) {\r\n    Slider.call(this, { track: options.track, handle: options.handle, fill: null, vertical: options.vertical });\r\n    this.scrollingContainer = options.scrollingContainer;\r\n    this.autohide = options.autohide;\r\n    this._hidden = false;\r\n\r\n}\r\n\r\nScrollBar.prototype = Object.create(Slider.prototype);\r\nScrollBar.prototype.constructor = ScrollBar;\r\nmodule.exports = ScrollBar;\r\n\r\n\r\nScrollBar.prototype.initialize = function () {\r\n    Slider.prototype.initialize.call(this);\r\n    this.decimals = 3; //up decimals to trigger ValueChanging more often\r\n\r\n    this._onValueChanging = function (val) {\r\n        var sizeAmt = this.scrollingContainer._height / this.scrollingContainer.innerContainer.height || 0.001;\r\n        if (sizeAmt < 1)\r\n            this.scrollingContainer.forcePctPosition(this.vertical ? \"y\" : \"x\", this._amt);\r\n    };\r\n\r\n    this.scrollingContainer._scrollBars.push(this);\r\n\r\n};\r\n\r\nScrollBar.prototype.alignToContainer = function () {\r\n    var newPos,\r\n        size,\r\n        x_y = this.vertical ? \"y\" : \"x\",\r\n        width_height = this.vertical ? \"height\" : \"width\",\r\n        top_left = this.vertical ? \"top\" : \"left\",\r\n        _posAmt = !this.scrollingContainer.innerContainer[width_height] ? 0 : -(this.scrollingContainer.innerContainer[x_y] / this.scrollingContainer.innerContainer[width_height]),\r\n        sizeAmt = !this.scrollingContainer.innerContainer[width_height] ? 1 : this.scrollingContainer[\"_\" + width_height] / this.scrollingContainer.innerContainer[width_height];\r\n\r\n    //update amt\r\n    var diff = this.scrollingContainer.innerContainer[width_height] - this.scrollingContainer[\"_\" + width_height];\r\n    this._amt = !this.scrollingContainer[\"_\" + width_height] || !diff ? 0 : -(this.scrollingContainer.innerContainer[x_y] / diff);\r\n\r\n    if (sizeAmt >= 1) {\r\n        size = this[\"_\" + width_height];\r\n        this.handle[top_left] = size * 0.5;\r\n        this.toggleHidden(true);\r\n    }\r\n    else {\r\n        size = this[\"_\" + width_height] * sizeAmt;\r\n        if (this._amt > 1) size -= (this[\"_\" + width_height] - size) * (this._amt - 1);\r\n        else if (this._amt < 0) size -= (this[\"_\" + width_height] - size) * -this._amt;\r\n        if (this._amt < 0) newPos = size * 0.5;\r\n        else if (this._amt > 1) newPos = this[\"_\" + width_height] - size * 0.5;\r\n        else newPos = (_posAmt * this.scrollingContainer[\"_\" + width_height]) + (size * 0.5);\r\n        this.handle[top_left] = newPos;\r\n        this.toggleHidden(false);\r\n    }\r\n    this.handle[width_height] = size;\r\n};\r\n\r\n\r\nScrollBar.prototype.toggleHidden = function (hidden) {\r\n    if (this.autohide) {\r\n        if (hidden && !this._hidden) {\r\n            Tween.to(this, 0.2, { alpha: 0 });\r\n            this._hidden = true;\r\n        }\r\n        else if (!hidden && this._hidden) {\r\n            Tween.to(this, 0.2, { alpha: 1 });\r\n            this._hidden = false;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n","var UIBase = require('./UIBase'),\r\n    Container = require('./Container'),\r\n    Helpers = require('./Helpers'),\r\n    Ticker = require('./Ticker'),\r\n    DragEvent = require('./Interaction/DragEvent'),\r\n    MouseScrollEvent = require('./Interaction/MouseScrollEvent');\r\n\r\n\r\n/**\r\n * An UI Container object with expandMask hidden and possibility to enable scrolling\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param [options.scrollX=false] {Boolean} Enable horizontal scrolling\r\n * @param [options.scrollY=false] {Boolean} Enable vertical scrolling\r\n * @param [options.dragScrolling=true] {Boolean} Enable mousedrag scrolling\r\n * @param [options.softness=0.5] {Number} (0-1) softness of scrolling\r\n * @param [options.width=0] {Number|String} container width \r\n * @param [options.height=0] {Number} container height \r\n * @param [options.radius=0] {Number} corner radius of clipping mask\r\n * @param [options.expandMask=0] {Number} mask expand (px)\r\n * @param [options.overflowY=0] {Number} how much can be scrolled past content dimensions\r\n * @param [options.overflowX=0] {Number} how much can be scrolled past content dimensions\r\n */\r\nfunction ScrollingContainer(options) {\r\n    options = options || {};\r\n    Container.call(this, options.width, options.height);\r\n    this.mask = new PIXI.Graphics();\r\n    this.innerContainer = new PIXI.Container();\r\n    this.innerBounds = new PIXI.Rectangle();\r\n    this.container.addChild(this.mask);\r\n    this.container.addChild(this.innerContainer);\r\n    this.container.mask = this.mask;\r\n    this.scrollX = options.scrollX !== undefined ? options.scrollX : false;\r\n    this.scrollY = options.scrollY !== undefined ? options.scrollY : true;\r\n    this.dragScrolling = options.dragScrolling !== undefined ? options.dragScrolling : true;\r\n    this.softness = options.softness !== undefined ? Math.max(Math.min(options.softness || 0, 1), 0) : 0.5;\r\n    this.radius = options.radius || 0;\r\n    this.expandMask = options.expandMask || 0;\r\n    this.overflowY = options.overflowY || 0;\r\n    this.overflowX = options.overflowX || 0;\r\n\r\n    this.animating = false;\r\n    this.scrolling = false;\r\n    this._scrollBars = [];\r\n\r\n    this.boundCached = performance.now() - 1000;\r\n}\r\n\r\n\r\nScrollingContainer.prototype = Object.create(Container.prototype);\r\nScrollingContainer.prototype.constructor = ScrollingContainer;\r\nmodule.exports = ScrollingContainer;\r\n\r\n\r\nScrollingContainer.prototype.initialize = function () {\r\n    Container.prototype.initialize.apply(this);\r\n    if (this.scrollX || this.scrollY) {\r\n        this.initScrolling();\r\n    }\r\n};\r\n\r\nScrollingContainer.prototype.update = function () {\r\n    Container.prototype.update.apply(this);\r\n    if (this._lastWidth != this._width || this._lastHeight != this._height) {\r\n        var of = this.expandMask;\r\n        this.mask.clear();\r\n        this.mask.lineStyle(0);\r\n        this.mask.beginFill(0xFFFFFF, 1);\r\n        if (this.radius === 0) {\r\n\r\n            //this.mask.drawRect(0, 0, this._width, this._height);\r\n            //this.mask.drawRect(-of, -of, this._width + of, this.height + of);\r\n            //this.mask.moveTo(-of, -of);\r\n            //this.mask.lineTo(this._width + of, -of);\r\n            //this.mask.lineTo(this._width + of, this._height + of);\r\n            //this.mask.lineTo(-of, this._height + of);\r\n            this.mask.drawRect(-of, -of, this._width + of, this._height + of);\r\n        }\r\n        else {\r\n            this.mask.drawRoundedRect(-of, -of, this._width + of, this.height + of, this.radius);\r\n        }\r\n        this.mask.endFill();\r\n        this._lastWidth = this._width;\r\n        this._lastHeight = this._height;\r\n    }\r\n\r\n\r\n    if (this.setScrollPosition) {\r\n        this.setScrollPosition();\r\n    }\r\n};\r\n\r\nScrollingContainer.prototype.addChild = function (UIObject) {\r\n    var argumentsLength = arguments.length;\r\n    if (argumentsLength > 1) {\r\n        for (var i = 0; i < argumentsLength; i++) {\r\n            this.addChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        Container.prototype.addChild.call(this, UIObject);\r\n        this.innerContainer.addChild(UIObject.container);\r\n        this.getInnerBounds(true); //make sure bounds is updated instantly when a child is added\r\n    }\r\n    return UIObject;\r\n};\r\n\r\n\r\nScrollingContainer.prototype.updateScrollBars = function () {\r\n    for (var i = 0; i < this._scrollBars.length; i++) {\r\n        this._scrollBars[i].alignToContainer();\r\n    }\r\n};\r\n\r\n\r\nScrollingContainer.prototype.getInnerBounds = function (force) {\r\n    //this is a temporary fix, because we cant rely on innercontainer height if the children is positioned > 0 y.\r\n    if (force || performance.now() - this.boundCached > 1000) {\r\n        this.innerContainer.getLocalBounds(this.innerBounds);\r\n        this.innerContainer.getLocalBounds(this.innerBounds);\r\n        this.innerBounds.height = this.innerBounds.y + this.innerContainer.height;\r\n        this.innerBounds.width = this.innerBounds.x + this.innerContainer.width;\r\n        this.boundCached = performance.now();\r\n    }\r\n\r\n    return this.innerBounds;\r\n};\r\n\r\nScrollingContainer.prototype.initScrolling = function () {\r\n    var container = this.innerContainer,\r\n        containerStart = new PIXI.Point(),\r\n        targetPosition = new PIXI.Point(),\r\n        lastPosition = new PIXI.Point(),\r\n        Position = new PIXI.Point(),\r\n        Speed = new PIXI.Point(),\r\n        stop,\r\n        self = this;\r\n\r\n    this.forcePctPosition = function (direction, pct) {\r\n        var bounds = this.getInnerBounds();\r\n\r\n        if (this.scrollX && direction == \"x\") {\r\n            container.position[direction] = -((bounds.width - this._width) * pct);\r\n        }\r\n        if (this.scrollY && direction == \"y\") {\r\n            container.position[direction] = -((bounds.height - this._height) * pct);\r\n        }\r\n        Position[direction] = targetPosition[direction] = container.position[direction];\r\n    };\r\n\r\n    this.focusPosition = function (pos) {\r\n        var bounds = this.getInnerBounds();\r\n\r\n        var dif;\r\n        if (this.scrollX) {\r\n            var x = Math.max(0, (Math.min(bounds.width, pos.x)));\r\n            if (x + container.x > this._width) {\r\n                dif = x - this._width;\r\n                container.x = -dif;\r\n            }\r\n            else if (x + container.x < 0) {\r\n                dif = x + container.x;\r\n                container.x -= dif;\r\n            }\r\n        }\r\n\r\n        if (this.scrollY) {\r\n            var y = Math.max(0, (Math.min(bounds.height, pos.y)));\r\n\r\n            if (y + container.y > this._height) {\r\n                dif = y - this._height;\r\n                container.y = -dif;\r\n            }\r\n            else if (y + container.y < 0) {\r\n                dif = y + container.y;\r\n                container.y -= dif;\r\n            }\r\n        }\r\n\r\n        lastPosition.copy(container.position);\r\n        targetPosition.copy(container.position);\r\n        Position.copy(container.position);\r\n        this.updateScrollBars();\r\n\r\n    };\r\n\r\n    this.setScrollPosition = function (speed) {\r\n        if (speed) {\r\n            Speed = speed;\r\n        }\r\n\r\n        if (!this.animating) {\r\n            this.animating = true;\r\n            lastPosition.copy(container.position);\r\n            targetPosition.copy(container.position);\r\n            Ticker.on(\"update\", this.updateScrollPosition, this);\r\n        }\r\n    };\r\n\r\n    this.updateScrollPosition = function (delta) {\r\n        stop = true;\r\n        if (this.scrollX) this.updateDirection(\"x\", delta);\r\n        if (this.scrollY) this.updateDirection(\"y\", delta);\r\n        if (stop) {\r\n            Ticker.removeListener(\"update\", this.updateScrollPosition);\r\n            this.animating = false;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    this.updateDirection = function (direction, delta) {\r\n        var bounds = this.getInnerBounds();\r\n\r\n        var min;\r\n        if (direction == \"y\")\r\n            min = Math.round(Math.min(0, this._height - bounds.height));\r\n        else\r\n            min = Math.round(Math.min(0, this._width - bounds.width));\r\n\r\n        if (!this.scrolling && Math.round(Speed[direction]) !== 0) {\r\n            targetPosition[direction] += Speed[direction];\r\n            Speed[direction] = Helpers.Lerp(Speed[direction], 0, (5 + 2.5 / Math.max(this.softness, 0.01)) * delta);\r\n\r\n            if (targetPosition[direction] > 0) {\r\n                targetPosition[direction] = 0;\r\n\r\n            }\r\n            else if (targetPosition[direction] < min) {\r\n                targetPosition[direction] = min;\r\n\r\n            }\r\n        }\r\n\r\n        if (!this.scrolling && Math.round(Speed[direction]) === 0 && (container[direction] > 0 || container[direction] < min)) {\r\n            var target = Position[direction] > 0 ? 0 : min;\r\n            Position[direction] = Helpers.Lerp(Position[direction], target, (40 - (30 * this.softness)) * delta);\r\n            stop = false;\r\n        }\r\n        else if (this.scrolling || Math.round(Speed[direction]) !== 0) {\r\n\r\n            if (this.scrolling) {\r\n                Speed[direction] = Position[direction] - lastPosition[direction];\r\n                lastPosition.copy(Position);\r\n            }\r\n            if (targetPosition[direction] > 0) {\r\n                Speed[direction] = 0;\r\n                Position[direction] = 100 * this.softness * (1 - Math.exp(targetPosition[direction] / -200));\r\n            }\r\n            else if (targetPosition[direction] < min) {\r\n                Speed[direction] = 0;\r\n                Position[direction] = min - (100 * this.softness * (1 - Math.exp((min - targetPosition[direction]) / -200)));\r\n            }\r\n            else {\r\n                Position[direction] = targetPosition[direction];\r\n            }\r\n            stop = false;\r\n        }\r\n\r\n        container.position[direction] = Math.round(Position[direction]);\r\n\r\n        self.updateScrollBars();\r\n\r\n    };\r\n\r\n\r\n    //Drag scroll\r\n    if (this.dragScrolling) {\r\n        var drag = new DragEvent(this);\r\n        drag.onDragStart = function (e) {\r\n            if (!this.scrolling) {\r\n                containerStart.copy(container.position);\r\n                Position.copy(container.position);\r\n                this.scrolling = true;\r\n                this.setScrollPosition();\r\n                self.emit(\"dragStart\", e);\r\n            }\r\n        };\r\n\r\n        drag.onDragMove = function (e, offset) {\r\n            if (this.scrollX)\r\n                targetPosition.x = containerStart.x + offset.x;\r\n            if (this.scrollY)\r\n                targetPosition.y = containerStart.y + offset.y;\r\n        };\r\n\r\n        drag.onDragEnd = function (e) {\r\n            if (this.scrolling) {\r\n                this.scrolling = false;\r\n                self.emit(\"dragEnd\", e);\r\n            }\r\n        };\r\n    }\r\n\r\n    //Mouse scroll\r\n    var scrollSpeed = new PIXI.Point();\r\n    var scroll = new MouseScrollEvent(this, true);\r\n    scroll.onMouseScroll = function (e, delta) {\r\n        scrollSpeed.set(-delta.x * 0.2, -delta.y * 0.2);\r\n        this.setScrollPosition(scrollSpeed);\r\n    };\r\n\r\n\r\n    self.updateScrollBars();\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * A sliced sprite with dynamic width and height.\r\n *\r\n * @class\r\n * @memberof PIXI.UI\r\n * @param Texture {PIXI.Texture} the texture for this SliceSprite\r\n * @param BorderWidth {Number} Width of the sprite borders\r\n * @param horizontalSlice {Boolean} Slice the sprite horizontically\r\n * @param verticalSlice {Boolean} Slice the sprite vertically\r\n * @param [tile=false] {Boolean} tile or streach\r\n */\r\nfunction SliceSprite(texture, borderWidth, horizontalSlice, verticalSlice, tile) {\r\n    UIBase.call(this, texture.width, texture.height);\r\n\r\n    var ftl, ftr, fbl, fbr, ft, fb, fl, fr, ff, stl, str, sbl, sbr, st, sb, sl, sr, sf,\r\n        bw = borderWidth || 5,\r\n        vs = typeof verticalSlice !== \"undefined\" ? verticalSlice : true,\r\n        hs = typeof horizontalSlice !== \"undefined\" ? horizontalSlice : true,\r\n        t = texture.baseTexture,\r\n        f = texture.frame;\r\n\r\n\r\n    if (hs) this.setting.minWidth = borderWidth * 2;\r\n    if (vs) this.setting.minHeight = borderWidth * 2;\r\n\r\n    this.initialize = function () {\r\n        UIBase.prototype.initialize.apply(this);\r\n\r\n        //get frames\r\n        if (vs && hs) {\r\n            ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\r\n            ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\r\n            fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\r\n            fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\r\n            ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\r\n            fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\r\n            fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\r\n            fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\r\n            ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\r\n        }\r\n        else if (hs) {\r\n            fl = new PIXI.Rectangle(f.x, f.y, bw, f.height);\r\n            fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\r\n            ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\r\n        }\r\n        else { //vs\r\n            ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\r\n            fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\r\n            ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\r\n        }\r\n\r\n        //TODO: swap frames if rotation\r\n\r\n\r\n\r\n        //make sprites\r\n        sf = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ff)) : new PIXI.Sprite(new PIXI.Texture(t, ff));\r\n        this.container.addChildAt(sf, 0);\r\n        if (vs && hs) {\r\n            stl = new PIXI.Sprite(new PIXI.Texture(t, ftl));\r\n            str = new PIXI.Sprite(new PIXI.Texture(t, ftr));\r\n            sbl = new PIXI.Sprite(new PIXI.Texture(t, fbl));\r\n            sbr = new PIXI.Sprite(new PIXI.Texture(t, fbr));\r\n            this.container.addChildAt(stl, 0);\r\n            this.container.addChildAt(str, 0);\r\n            this.container.addChildAt(sbl, 0);\r\n            this.container.addChildAt(sbr, 0);\r\n\r\n        }\r\n        if (hs) {\r\n            sl = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fl)) : new PIXI.Sprite(new PIXI.Texture(t, fl));\r\n            sr = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fr)) : new PIXI.Sprite(new PIXI.Texture(t, fr));\r\n            this.container.addChildAt(sl, 0);\r\n            this.container.addChildAt(sr, 0);\r\n        }\r\n        if (vs) {\r\n            st = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ft)) : new PIXI.Sprite(new PIXI.Texture(t, ft));\r\n            sb = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fb)) : new PIXI.Sprite(new PIXI.Texture(t, fb));\r\n            this.container.addChildAt(st, 0);\r\n            this.container.addChildAt(sb, 0);\r\n        }\r\n\r\n        //set constant position and sizes\r\n        if (vs && hs) st.x = sb.x = sl.y = sr.y = stl.width = str.width = sbl.width = sbr.width = stl.height = str.height = sbl.height = sbr.height = bw;\r\n        if (hs) sf.x = sl.width = sr.width = bw;\r\n        if (vs) sf.y = st.height = sb.height = bw;\r\n    };\r\n\r\n    /**\r\n     * Updates the sliced sprites position and size\r\n     *\r\n     * @private\r\n     */\r\n    this.update = function () {\r\n        if (!this.initialized) return;\r\n        if (vs && hs) {\r\n            str.x = sbr.x = sr.x = this._width - bw;\r\n            sbl.y = sbr.y = sb.y = this._height - bw;\r\n            sf.width = st.width = sb.width = this._width - bw * 2;\r\n            sf.height = sl.height = sr.height = this._height - bw * 2;\r\n        }\r\n        else if (hs) {\r\n            sr.x = this._width - bw;\r\n            sl.height = sr.height = sf.height = this._height;\r\n            sf.width = this._width - bw * 2;\r\n        }\r\n        else { //vs\r\n            sb.y = this._height - bw;\r\n            st.width = sb.width = sf.width = this._width;\r\n            sf.height = this._height - bw * 2;\r\n        }\r\n\r\n        if (this.tint !== null) {\r\n            sf.tint = this.tint;\r\n            if (vs && hs) stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\r\n            if (hs) sl.tint = sr.tint = this.tint;\r\n            if (vs) st.tint = sb.tint = this.tint;\r\n        }\r\n\r\n        if (this.blendMode !== null) {\r\n            sf.blendMode = this.blendMode;\r\n            if (vs && hs) stl.blendMode = str.blendMode = sbl.blendMode = sbr.blendMode = this.blendMode;\r\n            if (hs) sl.blendMode = sr.blendMode = this.blendMode;\r\n            if (vs) st.blendMode = sb.blendMode = this.blendMode;\r\n        }\r\n    };\r\n}\r\n\r\nSliceSprite.prototype = Object.create(UIBase.prototype);\r\nSliceSprite.prototype.constructor = SliceSprite;\r\nmodule.exports = SliceSprite;\r\n\r\n\r\n\r\n","var UIBase = require('./UIBase'),\r\n    DragEvent = require('./Interaction/DragEvent'),\r\n    ClickEvent = require('./Interaction/ClickEvent'),\r\n    Tween = require('./Tween'),\r\n    Ease = require('./Ease/Ease'),\r\n    Helpers = require('./Helpers');\r\n\r\n/**\r\n* An UI Slider, the default width/height is 90%\r\n* \r\n* @class\r\n* @extends UIBase\r\n* @memberof PIXI.UI\r\n* @param options {Object} Slider settings\r\n* @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the slider track\r\n* @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as slider handle\r\n* @param [options.fill=null] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used for slider fill\r\n* @param [options.vertical=false] {boolean} Direction of the slider\r\n* @param [options.value=0] {number} value of the slider\r\n* @param [options.minValue=0] {number} minimum value\r\n* @param [options.maxValue=100] {number} max value\r\n* @param [options.decimals=0] {boolean} the decimal precision (use negative to round tens and hundreds)\r\n* @param [options.onValueChange=null] {callback} Callback when the value has changed\r\n* @param [options.onValueChanging=null] {callback} Callback while the value is changing\r\n* \r\n* \r\n*/\r\nfunction Slider(options) {\r\n    UIBase.call(this);\r\n    this._amt = 0;\r\n    this._disabled = false;\r\n\r\n    //set options\r\n    this.track = options.track;\r\n    this.handle = options.handle;\r\n    this.fill = options.fill || null;\r\n    this._minValue = options.minValue || 0;\r\n    this._maxValue = options.maxValue || 100;\r\n    this.decimals = options.decimals || 0;\r\n    this.vertical = options.vertical || false;\r\n    this._onValueChange = options.onValueChange || null;\r\n    this._onValueChanging = options.onValueChanging || null;\r\n    this.value = options.value || 50;\r\n    this.handle.pivot = 0.5;\r\n\r\n\r\n\r\n    this.addChild(this.track);\r\n    if (this.fill) this.track.addChild(this.fill);\r\n    this.addChild(this.handle);\r\n    this.handle.container.buttonMode = true;\r\n\r\n    if (this.vertical) {\r\n        this.height = \"100%\";\r\n        this.width = this.track.width;\r\n        this.track.height = \"100%\";\r\n        this.handle.horizontalAlign = \"center\";\r\n        if (this.fill) this.fill.horizontalAlign = \"center\";\r\n    }\r\n    else {\r\n        this.width = \"100%\";\r\n        this.height = this.track.height;\r\n        this.track.width = \"100%\";\r\n        this.handle.verticalAlign = \"middle\";\r\n        if (this.fill) this.fill.verticalAlign = \"middle\";\r\n    }\r\n\r\n}\r\n\r\nSlider.prototype = Object.create(UIBase.prototype);\r\nSlider.prototype.constructor = Slider;\r\nmodule.exports = Slider;\r\n\r\nSlider.prototype.update = function (soft) {\r\n    var handleSize, val;\r\n\r\n    if (this.vertical) {\r\n        handleSize = this.handle._height || this.handle.container.height;\r\n        val = ((this._height - handleSize) * this._amt) + (handleSize * 0.5);\r\n        if (soft) {\r\n            Tween.to(this.handle, 0.3, { top: val }, Ease.Power2.easeOut);\r\n            if (this.fill) Tween.to(this.fill, 0.3, { height: val }, Ease.Power2.easeOut);\r\n        }\r\n        else {\r\n            Tween.set(this.handle, { top: val });\r\n            if (this.fill) Tween.set(this.fill, { height: val });\r\n        }\r\n    }\r\n    else {\r\n        handleSize = this.handle._width || this.handle.container.width;\r\n        val = ((this._width - handleSize) * this._amt) + (handleSize * 0.5);\r\n        if (soft) {\r\n            Tween.to(this.handle, 0.3, { left: val }, Ease.Power2.easeOut);\r\n            if (this.fill) Tween.to(this.fill, 0.3, { width: val }, Ease.Power2.easeOut);\r\n        }\r\n        else {\r\n            Tween.set(this.handle, { left: val });\r\n            if (this.fill) Tween.set(this.fill, { width: val });\r\n        }\r\n    }\r\n};\r\n\r\nSlider.prototype.initialize = function () {\r\n    UIBase.prototype.initialize.call(this);\r\n\r\n\r\n\r\n    var self = this;\r\n    var startValue = 0;\r\n\r\n\r\n\r\n    ////Handle dragging\r\n    var handleDrag = new DragEvent(this.handle);\r\n    handleDrag.onPress = function (event, isPressed) {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleDrag.onDragStart = function (event) {\r\n        startValue = self._amt;\r\n        maxPosition = self.vertical ? self._height - self.handle._height : self._width - self.handle._width;\r\n    };\r\n\r\n    handleDrag.onDragMove = function (event, offset) {\r\n\r\n        self._amt = !maxPosition ? 0 : Math.max(0, Math.min(1, startValue + ((self.vertical ? offset.y : offset.x) / maxPosition)));\r\n\r\n        triggerValueChanging();\r\n        self.update();\r\n    };\r\n\r\n    handleDrag.onDragEnd = function () {\r\n        triggerValueChange();\r\n        self.update();\r\n    };\r\n\r\n    //Bar pressing/dragging\r\n    var localMousePosition = new PIXI.Point();\r\n    var trackDrag = new DragEvent(this.track);\r\n\r\n    trackDrag.onPress = function (event, isPressed) {\r\n        if (isPressed)\r\n            updatePositionToMouse(event.data.global, true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    trackDrag.onDragMove = function (event) {\r\n        updatePositionToMouse(event.data.global, false);\r\n    };\r\n\r\n    trackDrag.onDragEnd = function () {\r\n        triggerValueChange();\r\n    };\r\n\r\n    var updatePositionToMouse = function (mousePosition, soft) {\r\n        self.track.container.toLocal(mousePosition, null, localMousePosition, true);\r\n\r\n        var newPos = self.vertical ? localMousePosition.y - self.handle._height * 0.5 : localMousePosition.x - self.handle._width * 0.5;\r\n        var maxPos = self.vertical ? self._height - self.handle._height : self._width - self.handle._width;\r\n        self._amt = !maxPos ? 0 : Math.max(0, Math.min(1, newPos / maxPos));\r\n        self.update(soft);\r\n        triggerValueChanging();\r\n    };\r\n\r\n    var triggerValueChange = function () {\r\n        self.emit(\"change\", self.value);\r\n        if (self._lastChange != self.value) {\r\n            self._lastChange = self.value;\r\n            if (typeof self.onValueChange === \"function\")\r\n                self.onValueChange(self.value);\r\n        }\r\n    };\r\n\r\n    var triggerValueChanging = function () {\r\n        self.emit(\"changing\", self.value);\r\n        if (self._lastChanging != self.value) {\r\n            self._lastChanging = self.value;\r\n            if (typeof self._onValueChanging === \"function\")\r\n                self._onValueChanging(self.value);\r\n        }\r\n    };\r\n};\r\n\r\n\r\nObject.defineProperties(Slider.prototype, {\r\n    value: {\r\n        get: function () {\r\n            return Helpers.Round(Helpers.Lerp(this._minValue, this._maxValue, this._amt), this.decimals);\r\n        },\r\n        set: function (val) {\r\n            this._amt = (Math.max(this._minValue, Math.min(this._maxValue, val)) - this._minValue) / (this._maxValue - this._minValue);\r\n            if (typeof this.onValueChange === \"function\")\r\n                self.onValueChange(this.value);\r\n            if (typeof this._onValueChanging === \"function\")\r\n                this._onValueChanging(this.value);\r\n            this.update();\r\n        }\r\n    },\r\n\r\n    onValueChange: {\r\n        get: function () {\r\n            return this._onValueChange;\r\n        },\r\n        set: function (val) {\r\n            this._onValueChange = val;\r\n        }\r\n    },\r\n    onValueChanging: {\r\n        get: function () {\r\n            return this._onValueChanging;\r\n        },\r\n        set: function (val) {\r\n            this._onValueChanging = val;\r\n        }\r\n    },\r\n    minValue: {\r\n        get: function () {\r\n            return this._minValue;\r\n        },\r\n        set: function (val) {\r\n            this._minValue = val;\r\n            this.update();\r\n        }\r\n    },\r\n    maxValue: {\r\n        get: function () {\r\n            return this._maxValue;\r\n        },\r\n        set: function (val) {\r\n            this._maxValue = val;\r\n            this.update();\r\n        }\r\n    },\r\n    disabled: {\r\n        get: function () {\r\n            return this._disabled;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._disabled) {\r\n                this._disabled = val;\r\n                this.handle.container.buttonMode = !val;\r\n                this.handle.container.interactive = !val;\r\n                this.track.container.interactive = !val;\r\n            }\r\n        }\r\n    }\r\n});","var Container = require('./Container');\r\nvar Tween = require('./Tween');\r\n/**\r\n * An UI Container object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param desc {Boolean} Sort the list descending\r\n * @param tweenTime {Number} if above 0 the sort will be animated\r\n * @param tweenEase {PIXI.UI.Ease} ease method used for animation\r\n */\r\nfunction SortableList(desc, tweenTime, tweenEase) {\r\n    Container.call(this);\r\n    this.desc = typeof desc !== \"undefined\" ? desc : false;\r\n    this.tweenTime = tweenTime || 0;\r\n    this.tweenEase = tweenEase;\r\n    this.items = [];\r\n\r\n}\r\n\r\nSortableList.prototype = Object.create(Container.prototype);\r\nSortableList.prototype.constructor = SortableList;\r\nmodule.exports = SortableList;\r\n\r\nSortableList.prototype.addChild = function (UIObject, fnValue, fnThenBy) {\r\n    Container.prototype.addChild.call(this, UIObject);\r\n    if (this.items.indexOf(UIObject) == -1) {\r\n        this.items.push(UIObject);\r\n    }\r\n\r\n    if (typeof fnValue === \"function\")\r\n        UIObject._sortListValue = fnValue;\r\n\r\n    if (typeof fnThenBy === \"function\")\r\n        UIObject._sortListThenByValue = fnThenBy;\r\n\r\n    if (!UIObject._sortListRnd)\r\n        UIObject._sortListRnd = Math.random();\r\n\r\n\r\n\r\n    this.sort();\r\n};\r\n\r\nSortableList.prototype.removeChild = function (UIObject) {\r\n    if (arguments.length > 1) {\r\n        for (var i = 0; i < arguments.length; i++) {\r\n            this.removeChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        Container.prototype.removeChild.call(this, UIObject);\r\n        var index = this.items.indexOf(UIObject);\r\n        if (index != -1) {\r\n            this.items.splice(index, 1);\r\n        }\r\n        this.sort();\r\n    }\r\n};\r\n\r\nSortableList.prototype.sort = function (instant) {\r\n    clearTimeout(this._sortTimeout);\r\n\r\n    if (instant) {\r\n        this._sort();\r\n        return;\r\n    }\r\n\r\n    var _this = this;\r\n    this._sortTimeout = setTimeout(function () { _this._sort(); }, 0);\r\n};\r\n\r\nSortableList.prototype._sort = function () {\r\n    var self = this,\r\n        desc = this.desc,\r\n        y = 0,\r\n        alt = true;\r\n\r\n    this.items.sort(function (a, b) {\r\n        var res = a._sortListValue() < b._sortListValue() ? desc ? 1 : -1 :\r\n                  a._sortListValue() > b._sortListValue() ? desc ? -1 : 1 : 0;\r\n\r\n        if (res === 0 && a._sortListThenByValue && b._sortListThenByValue) {\r\n            res = a._sortListThenByValue() < b._sortListThenByValue() ? desc ? 1 : -1 :\r\n                  a._sortListThenByValue() > b._sortListThenByValue() ? desc ? -1 : 1 : 0;\r\n        }\r\n        if (res === 0) {\r\n            res = a._sortListRnd > b._sortListRnd ? 1 :\r\n                  a._sortListRnd < b._sortListRnd ? -1 : 0;\r\n        }\r\n        return res;\r\n    });\r\n\r\n    for (var i = 0; i < this.items.length; i++) {\r\n        var item = this.items[i];\r\n\r\n        alt = !alt;\r\n\r\n        if (this.tweenTime > 0) {\r\n            Tween.fromTo(item, this.tweenTime, { x: item.x, y: item.y }, { x: 0, y: y }, this.tweenEase);\r\n        }\r\n        else {\r\n            item.x = 0;\r\n            item.y = y;\r\n        }\r\n        y += item.height;\r\n        if (typeof item.altering === \"function\")\r\n            item.altering(alt);\r\n    }\r\n\r\n    //force it to update parents when sort animation is done (prevent scrolling container bug)\r\n    if (this.tweenTime > 0) {\r\n        setTimeout(function () {\r\n            self.updatesettings(false, true);\r\n        }, this.tweenTime * 1000);\r\n    }\r\n};\r\n\r\n\r\n","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI sprite object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param Texture {PIXI.Texture} The texture for the sprite\r\n */\r\nfunction Sprite(t) {\r\n    this.sprite = new PIXI.Sprite(t);\r\n    UIBase.call(this, this.sprite.width, this.sprite.height);\r\n    this.container.addChild(this.sprite);\r\n}\r\n\r\nSprite.prototype = Object.create(UIBase.prototype);\r\nSprite.prototype.constructor = Sprite;\r\nmodule.exports = Sprite;\r\n\r\n\r\nSprite.fromFrame = function (frameId) {\r\n    return new Sprite(new PIXI.Texture.fromFrame(frameId));\r\n};\r\n\r\nSprite.fromImage = function (imageUrl) {\r\n    return new Sprite(new PIXI.Texture.fromImage(imageUrl));\r\n};\r\n\r\n/**\r\n * Updates the text\r\n *\r\n * @private\r\n */\r\nSprite.prototype.update = function () {\r\n    if (this.tint !== null)\r\n        this.sprite.tint = this.tint;\r\n\r\n    if (this.blendMode !== null)\r\n        this.sprite.blendMode = this.blendMode;\r\n\r\n    this.sprite.width = this._width;\r\n    this.sprite.height = this._height;\r\n};\r\n\r\n","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * A Stage for UIObjects\r\n *\r\n * @class\r\n * @extends PIXI.UI.Container\r\n * @memberof PIXI.UI\r\n * @param width {Number} Width of the Stage\r\n * @param height {Number} Height of the Stage\r\n */\r\nfunction Stage(width, height) {\r\n    PIXI.Container.call(this);\r\n    this.__width = width;\r\n    this.__height = height;\r\n    this.minWidth = 0;\r\n    this.minHeight = 0;\r\n\r\n    this.UIChildren = [];\r\n    this.stage = this;\r\n    this.interactive = true;\r\n    this.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\r\n    this.initialized = true;\r\n    this.resize(width, height);\r\n}\r\n\r\nStage.prototype = Object.create(PIXI.Container.prototype);\r\nStage.prototype.constructor = Stage;\r\nmodule.exports = Stage;\r\n\r\nStage.prototype.addChild = function (UIObject) {\r\n    var argumentLenght = arguments.length;\r\n    if (argumentLenght > 1) {\r\n        for (var i = 0; i < argumentLenght; i++) {\r\n            this.addChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        if (UIObject.parent !== null)\r\n            UIObject.parent.removeChild(UIObject);\r\n\r\n        UIObject.parent = this;\r\n        this.UIChildren.push(UIObject);\r\n        PIXI.Container.prototype.addChild.call(this, UIObject.container);\r\n        UIObject.updatesettings(true);\r\n    }\r\n};\r\n\r\nStage.prototype.removeChild = function (UIObject) {\r\n    var argumentLenght = arguments.length;\r\n    if (argumentLenght > 1) {\r\n        for (var i = 0; i < argumentLenght; i++) {\r\n            this.removeChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        PIXI.Container.prototype.removeChild.call(this, UIObject.container);\r\n        var index = this.UIChildren.indexOf(UIObject);\r\n        if (index != -1) {\r\n            this.UIChildren.splice(index, 1);\r\n            UIObject.parent = null;\r\n        }\r\n\r\n    }\r\n};\r\n\r\nStage.prototype.resize = function (width, height) {\r\n    if (!isNaN(height)) this.__height = height;\r\n    if (!isNaN(width)) this.__width = width;\r\n\r\n    if (this.minWidth || this.minHeight) {\r\n        var rx = 1,\r\n            ry = 1;\r\n\r\n        if (width && width < this.minWidth) {\r\n            rx = this.minWidth / width;\r\n        }\r\n\r\n        if (height && height < this.minHeight) {\r\n            ry = this.minHeight / height;\r\n        }\r\n\r\n        if (rx > ry && rx > 1) {\r\n            this.scale.set(1 / rx);\r\n            this.__height *= rx;\r\n            this.__width *= rx;\r\n        }\r\n        else if (ry > 1) {\r\n            this.scale.set(1 / ry);\r\n            this.__width *= ry;\r\n            this.__height *= ry;\r\n        }\r\n        else if (this.scale.x !== 1) {\r\n            this.scale.set(1);\r\n        }\r\n    }\r\n\r\n    this.hitArea.width = this.__width;\r\n    this.hitArea.height = this.__height;\r\n\r\n    for (var i = 0; i < this.UIChildren.length; i++)\r\n        this.UIChildren[i].updatesettings(true, false);\r\n};\r\n\r\nObject.defineProperties(Stage.prototype, {\r\n    _width: {\r\n        get: function () {\r\n            return this.__width;\r\n        },\r\n        set: function (val) {\r\n            if (!isNaN(val)) {\r\n                this.__width = val;\r\n                this.resize();\r\n            }\r\n        }\r\n    },\r\n    _height: {\r\n        get: function () {\r\n            return this.__height;\r\n        },\r\n        set: function (val) {\r\n            if (!isNaN(val)) {\r\n                this.__height = val;\r\n                this.resize();\r\n            }\r\n        }\r\n    }\r\n});","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI text object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param Text {String} Text content\r\n * @param TextStyle {PIXI.TextStyle} Style used for the Text\r\n */\r\nfunction Text(text, PIXITextStyle) {\r\n    this._text = new PIXI.Text(text, PIXITextStyle);\r\n    UIBase.call(this, this._text.width, this._text.height);\r\n    this.container.addChild(this._text);\r\n\r\n    this.baseupdate = function () {\r\n        //force original text width unless using anchors\r\n        if (this._anchorLeft === null || this._anchorRight === null) {\r\n            this.setting.width = this._text.width;\r\n            this.setting.widthPct = null;\r\n        }\r\n        else {\r\n            this._text.width = this._width;\r\n        }\r\n\r\n        //force original text height unless using anchors\r\n        if (this._anchorTop === null || this._anchorBottom === null) {\r\n            this.setting.height = this._text.height;\r\n            this.setting.heightPct = null;\r\n        }\r\n        else {\r\n            this._text.width = this._width;\r\n        }\r\n\r\n\r\n        UIBase.prototype.baseupdate.call(this);\r\n    };\r\n\r\n    this.update = function () {\r\n        //set tint\r\n        if (this.tint !== null)\r\n            this._text.tint = this.tint;\r\n\r\n        //set blendmode\r\n        if (this.blendMode !== null)\r\n            this._text.blendMode = this.blendMode;\r\n    };\r\n}\r\n\r\nText.prototype = Object.create(UIBase.prototype);\r\nText.prototype.constructor = Text;\r\nmodule.exports = Text;\r\n\r\n\r\nObject.defineProperties(Text.prototype, {\r\n    value: {\r\n        get: function () {\r\n            return this._text.text;\r\n        },\r\n        set: function (val) {\r\n            this._text.text = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    text: {\r\n        get: function () {\r\n            return this.value;\r\n        },\r\n        set: function (val) {\r\n            this.value = val;\r\n        }\r\n    }\r\n});","var InputBase = require('./InputBase'),\r\n    Container = require('./Container'),\r\n    DragEvent = require('./Interaction/DragEvent');\r\n\r\n/**\r\n * An UI text object\r\n *\r\n * @class\r\n * @extends PIXI.UI.InputBase\r\n * @memberof PIXI.UI\r\n * @param options.value {String} Text content\r\n * @param [options.multiLine=false] {Boolean} Multiline input\r\n * @param options.style {PIXI.TextStyle} Style used for the Text\r\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\r\n * @param [options.selectedColor='#ffffff'] {String|Array} Fill color of selected text\r\n * @param [options.selectedBackgroundColor='#318cfa'] {String} BackgroundColor of selected text\r\n * @param [options.width=150] {Number} width of input\r\n * @param [options.height=20] {Number} height of input\r\n * @param [options.padding=3] {Number} input padding\r\n * @param [options.paddingTop=0] {Number} input padding\r\n * @param [options.paddingBottom=0] {Number} input padding\r\n * @param [options.paddingLeft=0] {Number} input padding\r\n * @param [options.paddingRight=0] {Number} input padding\r\n * @param [options.tabIndex=0] {Number} input tab index\r\n * @param [options.tabGroup=0] {Number|String} input tab group\r\n * @param [options.maxLength=0] {Number} 0 = unlimited\r\n * @param [options.caretWidth=1] {Number} width of the caret\r\n * @param [options.lineHeight=0] {Number} 0 = inherit from text\r\n */\r\nfunction TextInput(options) {\r\n    //create temp input (for mobile keyboard)\r\n    if (typeof _pui_tempInput === \"undefined\") {\r\n        _pui_tempInput = document.createElement(\"INPUT\");\r\n        _pui_tempInput.setAttribute(\"type\", \"text\");\r\n        _pui_tempInput.setAttribute(\"id\", \"_pui_tempInput\");\r\n        _pui_tempInput.setAttribute(\"style\", \"position:fixed; left:-10px; top:-10px; width:0px; height: 0px;\");\r\n        document.body.appendChild(_pui_tempInput);\r\n    }\r\n    var width = typeof options.width !== 'undefined' ? options.width : options.background ? options.background.width : 150;\r\n    var height = typeof options.height !== 'undefined' ? options.height : options.background ? options.background.height : 150;\r\n    InputBase.call(this, width, height, options.tabIndex || 0, options.tabGroup || 0);\r\n\r\n    this._dirtyText = true;\r\n    this.maxLength = options.maxLength || 0;\r\n    this._value = this._lastValue = options.value || \"\";\r\n\r\n    if (this.maxLength) this._value = this._value.slice(0, this.maxLength);\r\n\r\n    var self = this;\r\n    var chars = [];\r\n    var multiLine = options.multiLine !== undefined ? options.multiLine : false;\r\n    var color = options.style && options.style.fill ? options.style.fill : \"#000000\";\r\n    var selectedColor = options.selectedColor || \"#ffffff\";\r\n    var selectedBackgroundColor = options.selectedBackgroundColor || \"#318cfa\";\r\n    var tempText = new PIXI.Text(\"1\", options.style);\r\n    var textHeight = tempText.height;\r\n    var lineHeight = options.lineHeight || textHeight || self._height;\r\n    tempText.destroy();\r\n\r\n\r\n    //set cursor\r\n    //this.container.cursor = \"text\";\r\n\r\n    //selection graphics\r\n    var selection = self.selection = new PIXI.Graphics();\r\n    selection.visible = false;\r\n    selection._startIndex = 0;\r\n    selection._endIndex = 0;\r\n\r\n    //caret graphics\r\n    var caret = self.caret = new PIXI.Graphics();\r\n    caret.visible = false;\r\n    caret._index = 0;\r\n    caret.lineStyle(options.caretWidth || 1, \"#ffffff\", 1);\r\n    caret.moveTo(0, 0);\r\n    caret.lineTo(0, textHeight);\r\n\r\n\r\n    //insert bg\r\n    if (options.background) {\r\n        this.background = options.background;\r\n        this.background.width = \"100%\";\r\n        this.background.height = \"100%\";\r\n        this.addChild(this.background);\r\n    }\r\n\r\n    //var padding\r\n    var paddingLeft = options.paddingLeft !== undefined ? options.paddingLeft : options.padding !== undefined ? options.padding : 3;\r\n    var paddingRight = options.paddingRight !== undefined ? options.paddingRight : options.padding !== undefined ? options.padding : 3;\r\n    var paddingBottom = options.paddingBottom !== undefined ? options.paddingBottom : options.padding !== undefined ? options.padding : 3;\r\n    var paddingTop = options.paddingTop !== undefined ? options.paddingTop : options.padding !== undefined ? options.padding : 3;\r\n\r\n    //insert text container (scrolling container)\r\n    var textContainer = this.textContainer = new PIXI.UI.ScrollingContainer({\r\n        scrollX: !multiLine,\r\n        scrollY: multiLine,\r\n        dragScrolling: multiLine,\r\n        expandMask: 2,\r\n        softness: 0.2,\r\n        overflowX: 40,\r\n        overflowY: 40\r\n    });\r\n    textContainer.anchorTop = paddingTop;\r\n    textContainer.anchorBottom = paddingBottom;\r\n    textContainer.anchorLeft = paddingLeft;\r\n    textContainer.anchorRight = paddingRight;\r\n    this.addChild(textContainer);\r\n\r\n    if (multiLine) {\r\n        this._useNext = this._usePrev = false;\r\n        textContainer.dragRestrictAxis = \"y\";\r\n        textContainer.dragThreshold = 5;\r\n        this.dragRestrictAxis = \"x\";\r\n        this.dragThreshold = 5;\r\n\r\n    }\r\n\r\n\r\n    var innerContainer = textContainer.innerContainer;\r\n\r\n\r\n    this.update = function () {\r\n        if (this._width != this._lastWidth) {\r\n            this._lastWidth = this._width;\r\n            if (multiLine) {\r\n                updateText();\r\n                if (caret.visible) self.setCaretIndex(caret._index);\r\n                if (hasSelection) updateSelectionGraphics();\r\n            }\r\n\r\n        }\r\n\r\n        //update text        \r\n        if (this._dirtyText) {\r\n            updateText();\r\n            this._dirtyText = false;\r\n        }\r\n    };\r\n\r\n    //selection Vars\r\n    var caretInterval, //interval for flash\r\n        si, //startIndex\r\n        sie, //startIndexEnd\r\n        ei, //endIndex\r\n        eie, //endIndexEnd\r\n        sp = new PIXI.Point(), //startposition\r\n        ds = new PIXI.Point(), //dragStart\r\n        de = new PIXI.Point(), //dragend\r\n        rdd = false, //Reverse drag direction\r\n        vrdd = false, //vertical Reverse drag direction\r\n        selectionStart = -1,\r\n        selectionEnd = -1,\r\n        hasSelection = false,\r\n        t = performance.now(), //timestamp\r\n        cc = 0,  //click counter\r\n        textLengthPX = 0,\r\n        textHeightPX = 0,\r\n        lineIndexMax = 0,\r\n        ctrlDown = false,\r\n        shiftDown = false,\r\n        shiftKey = 16,\r\n        ctrlKey = 17,\r\n        cmdKey = 91;\r\n\r\n\r\n\r\n    var updateText = function () {\r\n        textLengthPX = 0;\r\n        textHeightPX = 0;\r\n        lineIndexMax = 0;\r\n\r\n        var lineIndex = 0,\r\n            length = self._value.length,\r\n            x = 0,\r\n            y = (lineHeight - textHeight) * 0.5,\r\n            i = 0;\r\n\r\n        //destroy excess chars\r\n        if (chars.length > length) {\r\n            for (i = chars.length - 1; i >= length; i--) {\r\n                innerContainer.removeChild(chars[i]);\r\n                chars[i].destroy();\r\n            }\r\n            chars.splice(length, chars.length - length);\r\n        }\r\n\r\n        //update and add chars\r\n        var whitespace = false;\r\n        var newline = false;\r\n        var wordIndex = 0;\r\n        var lastWordIndex = -1;\r\n        var wrap = false;\r\n        for (i = 0; i < self._value.length; i++) {\r\n            if (whitespace || newline) {\r\n                lastWordIndex = i;\r\n                wordIndex++;\r\n            }\r\n\r\n            var c = self._value[i];\r\n            whitespace = c === \" \";\r\n            newline = c === \"\\n\";\r\n\r\n\r\n            if (newline) { //newline \"hack\". webgl render errors if \\n is passed to text\r\n                c = \"\";\r\n            }\r\n\r\n\r\n\r\n            var charText = chars[i];\r\n            if (!charText) {\r\n                charText = new PIXI.Text(c, options.style);\r\n                innerContainer.addChild(charText);\r\n                chars.push(charText);\r\n            }\r\n            else {\r\n                charText.text = c;\r\n            }\r\n\r\n            charText.scale.x = newline ? 0 : 1;\r\n            charText.wrapped = wrap;\r\n            wrap = false;\r\n\r\n            if (newline || (multiLine && x + charText.width >= self._width - paddingLeft - paddingRight)) {\r\n                lineIndex++;\r\n                x = 0;\r\n                y += lineHeight;\r\n\r\n                if (lastWordIndex != -1 && !newline) {\r\n                    i = lastWordIndex - 1;\r\n                    lastWordIndex = -1;\r\n                    wrap = true;\r\n                    continue;\r\n                }\r\n            }\r\n\r\n\r\n            charText.lineIndex = lineIndex;\r\n            charText.x = x;\r\n            charText.y = y;\r\n            charText.wordIndex = whitespace || newline ? -1 : wordIndex;\r\n            x += charText.width;\r\n\r\n\r\n            if (x > textLengthPX)\r\n                textLengthPX = x;\r\n            if (y > textHeightPX)\r\n                textHeightPX = y;\r\n        }\r\n\r\n        lineIndexMax = lineIndex;\r\n\r\n        //put caret on top\r\n        innerContainer.addChild(caret);\r\n\r\n        //recache\r\n        if (innerContainer.cacheAsBitmap) {\r\n            innerContainer.cacheAsBitmap = false;\r\n            innerContainer.cacheAsBitmap = true;\r\n        }\r\n\r\n        textContainer.update();\r\n\r\n    };\r\n\r\n    var updateClosestIndex = function (point, start) {\r\n        var currentDistX = 99999;\r\n        var currentClosest;\r\n        var currentIndex = -1;\r\n        var atEnd = false;\r\n\r\n        var closestLineIndex = 0;\r\n        if (lineIndexMax > 0)\r\n            closestLineIndex = Math.max(0, Math.min(lineIndexMax, Math.floor(point.y / lineHeight)));\r\n\r\n\r\n\r\n\r\n\r\n        for (var i = 0; i < chars.length; i++) {\r\n            var char = chars[i];\r\n            if (char.lineIndex != closestLineIndex) continue;\r\n\r\n            var distX = Math.abs(point.x - (char.x + (char.width * 0.5)));\r\n            if (distX < currentDistX) {\r\n                currentDistX = distX;\r\n                currentClosest = char;\r\n                currentIndex = i;\r\n                atEnd = point.x > char.x + (char.width * 0.5);\r\n            }\r\n        }\r\n\r\n\r\n        if (start) {\r\n            si = currentIndex;\r\n            sie = atEnd;\r\n        }\r\n        else {\r\n            ei = currentIndex;\r\n            eie = atEnd;\r\n        }\r\n    };\r\n\r\n    var deleteSelection = function () {\r\n        if (hasSelection) {\r\n            self.value = self.value.slice(0, selectionStart) + self.value.slice(selectionEnd + 1);\r\n            self.setCaretIndex(selectionStart);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var updateSelectionColors = function () {\r\n        //Color charecters\r\n        for (var i = 0; i < chars.length; i++) {\r\n            if (i >= selectionStart && i <= selectionEnd)\r\n                chars[i].style.fill = selectedColor;\r\n            else\r\n                chars[i].style.fill = color;\r\n        }\r\n    };\r\n\r\n    var _sp = new PIXI.Point();\r\n    var scrollToPosition = function (pos) {\r\n        _sp.copy(pos);\r\n        if (multiLine && _sp.y >= lineHeight)\r\n            _sp.y += lineHeight;\r\n        textContainer.focusPosition(_sp);\r\n    };\r\n\r\n    var resetScrollPosition = function () {\r\n        _sp.set(0, 0);\r\n        textContainer.focusPosition(_sp);\r\n    };\r\n\r\n    //caret\r\n    var hideCaret = function () {\r\n        caret.visible = false;\r\n        clearInterval(caretInterval);\r\n    };\r\n\r\n    var showCaret = function () {\r\n        self.clearSelection();\r\n        clearInterval(caretInterval);\r\n        caret.alpha = 1;\r\n        caret.visible = true;\r\n        caretInterval = setInterval(function () {\r\n            caret.alpha = caret.alpha === 0 ? 1 : 0;\r\n        }, 500);\r\n\r\n    };\r\n\r\n    var insertTextAtCaret = function (c) {\r\n        if (!multiLine && c.indexOf(\"\\n\") != -1) {\r\n            c = c.replace(/\\n/g, '');\r\n        }\r\n\r\n        if (hasSelection)\r\n            deleteSelection();\r\n        if (!self.maxLength || chars.length < self.maxLength) {\r\n\r\n            if (caret._atEnd) {\r\n                self.valueEvent += c;\r\n                self.setCaretIndex(chars.length);\r\n            }\r\n            else {\r\n                var index = Math.min(chars.length - 1, caret._index);\r\n                self.valueEvent = self.value.slice(0, index) + c + self.value.slice(index);\r\n                self.setCaretIndex(index + c.length);\r\n            }\r\n        }\r\n    };\r\n\r\n    //events\r\n    var keyDownEvent = function (e) {\r\n\r\n\r\n\r\n        if (e.which === ctrlKey || e.which === cmdKey) ctrlDown = true;\r\n        if (e.which === shiftKey) shiftDown = true;\r\n\r\n        self.emit(\"keydown\", e);\r\n\r\n        if (e.defaultPrevented)\r\n            return;\r\n\r\n        if (e.which === 13) { //enter\r\n            insertTextAtCaret('\\n');\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (ctrlDown) {\r\n\r\n            //ctrl + ?\r\n            if (e.which === 65) { //ctrl + a\r\n                self.select();\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n            else if (e.which === 90) { //ctrl + z (undo)\r\n                if (self.value != self._lastValue)\r\n                    self.valueEvent = self._lastValue;\r\n                self.setCaretIndex(self._lastValue.length + 1);\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n\r\n        }\r\n        if (e.which === 8) {\r\n            //backspace\r\n            if (!deleteSelection()) {\r\n                if (caret._index > 0 || (chars.length === 1 && caret._atEnd)) {\r\n                    if (caret._atEnd) {\r\n                        self.valueEvent = self.value.slice(0, chars.length - 1);\r\n                        self.setCaretIndex(caret._index);\r\n                    }\r\n                    else {\r\n                        self.valueEvent = self.value.slice(0, caret._index - 1) + self.value.slice(caret._index);\r\n                        self.setCaretIndex(caret._index - 1);\r\n                    }\r\n                }\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (e.which === 46) {\r\n            //delete\r\n            if (!deleteSelection()) {\r\n                if (!caret._atEnd) {\r\n                    self.valueEvent = self.value.slice(0, caret._index) + self.value.slice(caret._index + 1);\r\n                    self.setCaretIndex(caret._index);\r\n                }\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        else if (e.which === 37 || e.which === 39) {\r\n            rdd = e.which === 37;\r\n            if (shiftDown) {\r\n                if (hasSelection) {\r\n                    var caretAtStart = selectionStart === caret._index;\r\n                    if (caretAtStart) {\r\n                        if (selectionStart === selectionEnd && rdd === caret._forward) {\r\n                            self.setCaretIndex(caret._forward ? caret._index : caret._index + 1);\r\n                        }\r\n                        else {\r\n                            var startindex = rdd ? caret._index - 1 : caret._index + 1;\r\n                            self.selectRange(startindex, selectionEnd);\r\n                            caret._index = Math.min(chars.length - 1, Math.max(0, startindex));\r\n                        }\r\n                    }\r\n                    else {\r\n                        var endIndex = rdd ? caret._index - 1 : caret._index + 1;\r\n                        self.selectRange(selectionStart, endIndex);\r\n                        caret._index = Math.min(chars.length - 1, Math.max(0, endIndex));\r\n                    }\r\n                }\r\n                else {\r\n                    var _i = caret._atEnd ? caret._index + 1 : caret._index;\r\n                    var selectIndex = rdd ? _i - 1 : _i;\r\n                    self.selectRange(selectIndex, selectIndex);\r\n                    caret._index = selectIndex;\r\n                    caret._forward = !rdd;\r\n                }\r\n            }\r\n            else {\r\n                //Navigation\r\n                if (hasSelection)\r\n                    self.setCaretIndex(rdd ? selectionStart : selectionEnd + 1);\r\n                else\r\n                    self.setCaretIndex(caret._index + (rdd ? caret._atEnd ? 0 : -1 : 1));\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n\r\n        }\r\n        else if (multiLine && (e.which === 38 || e.which === 40)) {\r\n            vrdd = e.which === 38;\r\n            if (shiftDown) {\r\n                if (hasSelection) {\r\n                    de.y = Math.max(0, Math.min(textHeightPX, de.y + (vrdd ? -lineHeight : lineHeight)));\r\n                    updateClosestIndex(de, false);\r\n                    //console.log(si, ei);\r\n                    if (Math.abs(si - ei) <= 1) {\r\n                        //console.log(si, ei);\r\n                        self.setCaretIndex(sie ? si + 1 : si);\r\n                    } else {\r\n                        caret._index = (eie ? ei + 1 : ei) + (caret._down ? -1 : 0);\r\n                        self.selectRange(caret._down ? si : si - 1, caret._index);\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    si = caret._index;\r\n                    sie = false;\r\n                    de.copy(caret);\r\n                    de.y = Math.max(0, Math.min(textHeightPX, de.y + (vrdd ? -lineHeight : lineHeight)));\r\n                    updateClosestIndex(de, false);\r\n                    caret._index = (eie ? ei + 1 : ei) - (vrdd ? 0 : 1);\r\n                    self.selectRange(vrdd ? si - 1 : si, caret._index);\r\n                    caret._down = !vrdd;\r\n                }\r\n            }\r\n            else {\r\n                if (hasSelection) {\r\n                    self.setCaretIndex(vrdd ? selectionStart : selectionEnd + 1);\r\n                }\r\n                else {\r\n                    ds.copy(caret);\r\n                    ds.y += vrdd ? -lineHeight : lineHeight;\r\n                    ds.x += 1;\r\n                    updateClosestIndex(ds, true);\r\n                    self.setCaretIndex(sie ? si + 1 : si);\r\n                }\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n    };\r\n\r\n    var keyUpEvent = function (e) {\r\n        if (e.which == ctrlKey || e.which == cmdKey) ctrlDown = false;\r\n        if (e.which === shiftKey) shiftDown = false;\r\n\r\n        self.emit(\"keyup\", e);\r\n\r\n        if (e.defaultPrevented)\r\n            return;\r\n    };\r\n\r\n    var copyEvent = function (e) {\r\n        self.emit(\"copy\", e);\r\n\r\n        if (e.defaultPrevented)\r\n            return;\r\n\r\n        if (hasSelection) {\r\n            var clipboardData = e.clipboardData || window.clipboardData;\r\n            clipboardData.setData('Text', self.value.slice(selectionStart, selectionEnd + 1));\r\n        }\r\n        e.preventDefault();\r\n    };\r\n\r\n    var cutEvent = function (e) {\r\n        self.emit(\"cut\", e);\r\n\r\n        if (e.defaultPrevented)\r\n            return;\r\n\r\n        if (hasSelection) {\r\n            copyEvent(e);\r\n            deleteSelection();\r\n        }\r\n        e.preventDefault();\r\n    };\r\n\r\n    var pasteEvent = function (e) {\r\n        self.emit(\"paste\", e);\r\n\r\n        if (e.defaultPrevented)\r\n            return;\r\n\r\n        var clipboardData = e.clipboardData || window.clipboardData;\r\n        insertTextAtCaret(clipboardData.getData('Text'));\r\n        e.preventDefault();\r\n    };\r\n\r\n    var inputEvent = function (e) {\r\n        var c = _pui_tempInput.value;\r\n        if (c.length) {\r\n            insertTextAtCaret(c);\r\n            _pui_tempInput.value = \"\";\r\n        }\r\n        e.preventDefault();\r\n    };\r\n\r\n    var inputBlurEvent = function (e) {\r\n        self.blur();\r\n    };\r\n\r\n    var event = new DragEvent(this);\r\n\r\n    event.onPress = function (e, mouseDown) {\r\n\r\n        if (mouseDown) {\r\n            var timeSinceLast = performance.now() - t;\r\n            t = performance.now();\r\n            if (timeSinceLast < 250) {\r\n                cc++;\r\n                if (cc > 1)\r\n                    this.select();\r\n                else {\r\n                    innerContainer.toLocal(sp, undefined, ds, true);\r\n                    updateClosestIndex(ds, true);\r\n                    var c = chars[si];\r\n                    if (c) {\r\n                        if (c.wordIndex != -1)\r\n                            this.selectWord(c.wordIndex);\r\n                        else\r\n                            this.selectRange(si, si);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                cc = 0;\r\n                sp.copy(e.data.global);\r\n                innerContainer.toLocal(sp, undefined, ds, true);\r\n                if (chars.length) {\r\n                    updateClosestIndex(ds, true);\r\n                    self.setCaretIndex(sie ? si + 1 : si);\r\n                }\r\n            }\r\n        }\r\n        e.data.originalEvent.preventDefault();\r\n    };\r\n\r\n    event.onDragMove = function (e, offset) {\r\n        if (!chars.length || !this._focused) return;\r\n\r\n        de.x = sp.x + offset.x;\r\n        de.y = sp.y + offset.y;\r\n        innerContainer.toLocal(de, undefined, de, true);\r\n        updateClosestIndex(de, false);\r\n\r\n        if (si < ei) {\r\n            self.selectRange(sie ? si + 1 : si, eie ? ei : ei - 1);\r\n            caret._index = eie ? ei : ei - 1;\r\n        }\r\n        else if (si > ei) {\r\n            self.selectRange(ei, sie ? si : si - 1);\r\n            caret._index = ei;\r\n        }\r\n        else {\r\n            if (sie === eie) {\r\n                self.setCaretIndex(sie ? si + 1 : si);\r\n            }\r\n            else {\r\n                self.selectRange(si, ei);\r\n                caret._index = ei;\r\n            }\r\n        }\r\n\r\n        caret._forward = si <= ei;\r\n        caret._down = offset.y > 0;\r\n\r\n        scrollToPosition(de);\r\n    };\r\n\r\n\r\n\r\n\r\n    //public methods\r\n    this.focus = function () {\r\n        if (!this._focused) {\r\n            InputBase.prototype.focus.call(this);\r\n\r\n            var l = this.container.worldTransform.tx + \"px\";\r\n            var t = this.container.worldTransform.ty + \"px\";\r\n            var h = this.container.height + \"px\";\r\n            var w = this.container.width + \"px\";\r\n\r\n            _pui_tempInput.setAttribute(\"style\", \"position:fixed; left:\" + l + \"; top:\" + t + \"; height:\" + h + \"; width:\" + w + \";\");\r\n            _pui_tempInput.value = \"\";\r\n            _pui_tempInput.focus();\r\n            _pui_tempInput.setAttribute(\"style\", \"position:fixed; left:-10px; top:-10px; width:0px; height: 0px;\");\r\n\r\n            innerContainer.cacheAsBitmap = false;\r\n            _pui_tempInput.addEventListener(\"blur\", inputBlurEvent, false);\r\n            document.addEventListener(\"keydown\", keyDownEvent, false);\r\n            document.addEventListener(\"keyup\", keyUpEvent, false);\r\n            document.addEventListener('paste', pasteEvent, false);\r\n            document.addEventListener('copy', copyEvent, false);\r\n            document.addEventListener('cut', cutEvent, false);\r\n            _pui_tempInput.addEventListener('input', inputEvent, false);\r\n\r\n            setTimeout(function () {\r\n                if (!caret.visible && !self.selection.visible && !multiLine)\r\n                    self.setCaretIndex(chars.length);\r\n            }, 0);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.blur = function () {\r\n        if (this._focused) {\r\n            InputBase.prototype.blur.call(this);\r\n            ctrlDown = false;\r\n            shiftDown = false;\r\n            hideCaret();\r\n            this.clearSelection();\r\n            if (chars.length > 1) innerContainer.cacheAsBitmap = true;\r\n            _pui_tempInput.removeEventListener(\"blur\", inputBlurEvent);\r\n            document.removeEventListener(\"keydown\", keyDownEvent);\r\n            document.removeEventListener(\"keyup\", keyUpEvent);\r\n            document.removeEventListener('paste', pasteEvent);\r\n            document.removeEventListener('copy', copyEvent);\r\n            document.removeEventListener('cut', cutEvent);\r\n            _pui_tempInput.removeEventListener('input', inputEvent);\r\n            _pui_tempInput.blur();\r\n\r\n        }\r\n\r\n        if (!multiLine)\r\n            resetScrollPosition();\r\n    };\r\n\r\n    this.setCaretIndex = function (index) {\r\n        caret._atEnd = index >= chars.length;\r\n        caret._index = Math.max(0, Math.min(chars.length - 1, index));\r\n\r\n        if (chars.length && index > 0) {\r\n\r\n            var i = Math.max(0, Math.min(index, chars.length - 1));\r\n            var c = chars[i];\r\n\r\n            if (c && c.wrapped) {\r\n                caret.x = c.x;\r\n                caret.y = c.y;\r\n            }\r\n            else {\r\n                i = Math.max(0, Math.min(index - 1, chars.length - 1));\r\n                c = chars[i];\r\n                caret.x = chars[i].x + chars[i].width;\r\n                caret.y = (chars[i].lineIndex * lineHeight) + (lineHeight - textHeight) * 0.5;\r\n            }\r\n        }\r\n        else {\r\n            caret.x = 0;\r\n            caret.y = (lineHeight - textHeight) * 0.5;\r\n        }\r\n\r\n        scrollToPosition(caret);\r\n        showCaret();\r\n\r\n    };\r\n\r\n    this.select = function () {\r\n        this.selectRange(0, chars.length - 1);\r\n    };\r\n\r\n    this.selectWord = function (wordIndex) {\r\n        var startIndex = chars.length;\r\n        var endIndex = 0;\r\n        for (var i = 0; i < chars.length; i++) {\r\n            if (chars[i].wordIndex !== wordIndex) continue;\r\n            if (i < startIndex)\r\n                startIndex = i;\r\n            if (i > endIndex)\r\n                endIndex = i;\r\n        }\r\n\r\n        this.selectRange(startIndex, endIndex);\r\n    };\r\n\r\n    var drawSelectionRect = function (x, y, w, h) {\r\n        self.selection.beginFill(\"0x\" + selectedBackgroundColor.slice(1), 1);\r\n        self.selection.moveTo(x, y);\r\n        self.selection.lineTo(x + w, y);\r\n        self.selection.lineTo(x + w, y + h);\r\n        self.selection.lineTo(x, y + h);\r\n        self.selection.endFill();\r\n    };\r\n\r\n    var updateSelectionGraphics = function () {\r\n        var c1 = chars[selectionStart];\r\n        if (c1 !== undefined) {\r\n            var cx = c1.x,\r\n                cy = c1.y,\r\n                w = 0,\r\n                h = textHeight,\r\n                cl = c1.lineIndex;\r\n\r\n            self.selection.clear();\r\n            for (var i = selectionStart; i <= selectionEnd; i++) {\r\n                var c = chars[i];\r\n                if (c.lineIndex != cl) {\r\n                    drawSelectionRect(cx, cy, w, h);\r\n                    cx = c.x;\r\n                    cy = c.y;\r\n                    cl = c.lineIndex;\r\n                    w = 0;\r\n                }\r\n                w += c.width;\r\n            }\r\n            drawSelectionRect(cx, cy, w, h);\r\n            innerContainer.addChildAt(self.selection, 0);\r\n        }\r\n    };\r\n\r\n    this.selectRange = function (startIndex, endIndex) {\r\n        if (startIndex > -1 && endIndex > -1) {\r\n            var start = Math.min(startIndex, endIndex, chars.length - 1);\r\n            var end = Math.min(Math.max(startIndex, endIndex), chars.length - 1);\r\n            if (start != selectionStart || end != selectionEnd) {\r\n                hasSelection = true;\r\n                this.selection.visible = true;\r\n                selectionStart = start;\r\n                selectionEnd = end;\r\n                hideCaret();\r\n                updateSelectionGraphics();\r\n                updateSelectionColors();\r\n            }\r\n            this.focus();\r\n        }\r\n        else {\r\n            self.clearSelection();\r\n        }\r\n    };\r\n\r\n    this.clearSelection = function () {\r\n        if (hasSelection) {\r\n            //remove color\r\n            hasSelection = false;\r\n            this.selection.visible = false;\r\n            selectionStart = -1;\r\n            selectionEnd = -1;\r\n            updateSelectionColors();\r\n        }\r\n    };\r\n}\r\n\r\nTextInput.prototype = Object.create(InputBase.prototype);\r\nTextInput.prototype.constructor = TextInput;\r\nmodule.exports = TextInput;\r\n\r\nObject.defineProperties(TextInput.prototype, {\r\n    valueEvent: {\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        set: function (val) {\r\n            if (this.maxLength)\r\n                val = val.slice(0, this.maxLength);\r\n\r\n            if (this._value != val) {\r\n                this.value = val;\r\n                this.emit(\"change\");\r\n            }\r\n        }\r\n    },\r\n    value: {\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        set: function (val) {\r\n            if (this.maxLength)\r\n                val = val.slice(0, this.maxLength);\r\n\r\n            if (this._value != val) {\r\n                this._lastValue = this._value;\r\n                this._value = val;\r\n                this._dirtyText = true;\r\n                this.update();\r\n\r\n            }\r\n        }\r\n    },\r\n    text: {\r\n        get: function () {\r\n            return this.value;\r\n        },\r\n        set: function (val) {\r\n            this.value = val;\r\n        }\r\n    }\r\n});\r\n\r\n\r\n/*\r\n * Features:\r\n * multiLine, shift selection, Mouse Selection, Cut, Copy, Paste, Delete, Backspace, Arrow navigation, tabIndex\r\n * \r\n * Methods:\r\n * blur()\r\n * focus()\r\n * select() - selects all text\r\n * selectRange(startIndex, endIndex)\r\n * clearSelection() \r\n * setCaretIndex(index) moves caret to index\r\n * \r\n * \r\n * Events:\r\n * \"change\"\r\n * \"blur\"\r\n * \"blur\"\r\n * \"focus\"\r\n * \"focusChanged\" param: [bool]focus\r\n * \"keyup\" param: Event\r\n * \"keydown\" param: Event\r\n * \"copy\" param: Event\r\n * \"paste\" param: Event\r\n * \"cut\" param: Event\r\n * \"keyup\" param: Event\r\n */","var Tween = require('./Tween');\r\n\r\nfunction Ticker(autoStart) {\r\n    PIXI.utils.EventEmitter.call(this);\r\n    this._disabled = true;\r\n    this._now = 0;\r\n\r\n    this.DeltaTime = 0;\r\n    this.Time = performance.now();\r\n    this.Ms = 0;\r\n    if (autoStart) {\r\n        this.disabled = false;\r\n    }\r\n    Ticker.shared = this;\r\n}\r\n\r\nTicker.prototype = Object.create(PIXI.utils.EventEmitter.prototype);\r\nTicker.prototype.constructor = Ticker;\r\n\r\nmodule.exports = Ticker;\r\n\r\n\r\n\r\nObject.defineProperties(Ticker.prototype, {\r\n    disabled: {\r\n        get: function () {\r\n            return this._disabled;\r\n        },\r\n        set: function (val) {\r\n            if (!this._disabled) {\r\n                this._disabled = true;\r\n            }\r\n            else {\r\n                this._disabled = false;\r\n                Ticker.shared = this;\r\n                this.update(performance.now(), true);\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\n\r\n\r\n/**\r\n * Updates the text\r\n *\r\n * @private\r\n */\r\nTicker.prototype.update = function (time) {\r\n    Ticker.shared._now = time;\r\n    Ticker.shared.Ms = Ticker.shared._now - Ticker.shared.Time;\r\n    Ticker.shared.Time = Ticker.shared._now;\r\n    Ticker.shared.DeltaTime = Ticker.shared.Ms * 0.001;\r\n    Ticker.shared.emit(\"update\", Ticker.shared.DeltaTime);\r\n    Tween._update(Ticker.shared.DeltaTime);\r\n    if (!Ticker.shared._disabled)\r\n        requestAnimationFrame(Ticker.shared.update);\r\n};\r\n\r\n\r\n\r\n\r\nTicker.on = function (event, fn, context) {\r\n    Ticker.prototype.on.apply(this.shared, arguments);\r\n};\r\n\r\nTicker.once = function (event, fn, context) {\r\n    Ticker.prototype.once.apply(this.shared, arguments);\r\n};\r\n\r\nTicker.removeListener = function (event, fn) {\r\n    Ticker.prototype.removeListener.apply(this.shared, arguments);\r\n};\r\n\r\n\r\nTicker.shared = new Ticker(true);","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI sprite object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param Texture {PIXI.Texture} The texture for the sprite\r\n * @param [Width=Texture.width] {number} Width of tilingsprite\r\n * @param [Height=Texture.height] {number} Height of tiling sprite\r\n */\r\nfunction TilingSprite(t, width, height) {\r\n    this.sprite = new PIXI.extras.TilingSprite(t);\r\n    UIBase.call(this, width || this.sprite.width, height || this.sprite.height);\r\n    this.container.addChild(this.sprite);\r\n}\r\n\r\nTilingSprite.prototype = Object.create(UIBase.prototype);\r\nTilingSprite.prototype.constructor = TilingSprite;\r\nmodule.exports = TilingSprite;\r\n\r\n/**\r\n * Updates the text\r\n *\r\n * @private\r\n */\r\nTilingSprite.prototype.update = function () {\r\n    if (this.tint !== null)\r\n        this.sprite.tint = this.tint;\r\n\r\n    if (this.blendMode !== null)\r\n        this.sprite.blendMode = this.blendMode;\r\n\r\n    this.sprite.width = this._width;\r\n    this.sprite.height = this._height;\r\n};\r\n\r\nObject.defineProperties(TilingSprite.prototype, {\r\n    tilePosition: {\r\n        get: function () {\r\n            return this.sprite.tilePosition;\r\n        },\r\n        set: function (val) {\r\n            this.sprite.tilePosition = val;\r\n        }\r\n    },\r\n    tileScale: {\r\n        get: function () {\r\n            return this.sprite.tileScale;\r\n        },\r\n        set: function (val) {\r\n            this.sprite.tileScale = val;\r\n        }\r\n    }\r\n});","var Helpers = require('./Helpers');\r\nvar _tweenItemCache = [];\r\nvar _callbackItemCache = [];\r\nvar _tweenObjects = {};\r\nvar _activeTweenObjects = {};\r\nvar _currentId = 1;\r\n\r\nvar TweenObject = function (object) {\r\n    this.object = object;\r\n    this.tweens = {};\r\n    this.active = false;\r\n    this.onUpdate = null;\r\n};\r\n\r\nvar CallbackItem = function () {\r\n    this._ready = false;\r\n    this.obj = null;\r\n    this.parent = null;\r\n    this.key = \"\";\r\n    this.time = 0;\r\n    this.callback = null;\r\n    this.currentTime = 0;\r\n};\r\n\r\nCallbackItem.prototype.remove = function () {\r\n    this._ready = true;\r\n    delete this.parent.tweens[this.key];\r\n    if (!Object.keys(this.parent.tweens).length) {\r\n        this.parent.active = false;\r\n        this.parent.onUpdate = null;\r\n        delete _activeTweenObjects[this.obj._tweenObjectId];\r\n    }\r\n};\r\n\r\nCallbackItem.prototype.set = function (obj, callback, time) {\r\n    this.obj = obj.object;\r\n\r\n    if (!this.obj._currentCallbackID)\r\n        this.obj._currentCallbackID = 1;\r\n    else\r\n        this.obj._currentCallbackID++;\r\n\r\n    this.time = time;\r\n    this.parent = obj;\r\n    this.callback = callback;\r\n    this._ready = false;\r\n    this.key = \"cb_\" + this.obj._currentCallbackID;\r\n    this.currentTime = 0;\r\n    if (!this.parent.active) {\r\n        this.parent.active = true;\r\n        _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\r\n    }\r\n};\r\n\r\nCallbackItem.prototype.update = function (delta) {\r\n    this.currentTime += delta;\r\n    if (this.currentTime >= this.time) {\r\n        this.remove();\r\n        this.callback.call(this.parent);\r\n    }\r\n};\r\n\r\n\r\n\r\nvar TweenItem = function () {\r\n    this._ready = false;\r\n    this.parent = null;\r\n    this.obj = null;\r\n    this.key = \"\";\r\n    this.from = 0;\r\n    this.to = 0;\r\n    this.time = 0;\r\n    this.ease = 0;\r\n    this.currentTime = 0;\r\n    this.t = 0;\r\n    this.isColor = false;\r\n};\r\n\r\nTweenItem.prototype.remove = function () {\r\n    this._ready = true;\r\n    delete this.parent.tweens[this.key];\r\n    if (!Object.keys(this.parent.tweens).length) {\r\n        this.parent.active = false;\r\n        delete _activeTweenObjects[this.obj._tweenObjectId];\r\n    }\r\n};\r\n\r\nTweenItem.prototype.set = function (obj, key, from, to, time, ease) {\r\n    this.isColor = isNaN(from) && from[0] === \"#\" || isNaN(to) && to[0] === \"#\";\r\n    this.parent = obj;\r\n    this.obj = obj.object;\r\n    this.key = key;\r\n    this.surfix = getSurfix(to);\r\n\r\n    if (this.isColor) {\r\n        this.to = Helpers.hexToRgb(to);\r\n        this.from = Helpers.hexToRgb(from);\r\n        this.currentColor = { r: this.from.r, g: this.from.g, b: this.from.b };\r\n    }\r\n    else {\r\n        this.to = getToValue(to);\r\n        this.from = getFromValue(from, to, this.obj, key);\r\n    }\r\n\r\n    this.time = time;\r\n    this.currentTime = 0;\r\n    this.ease = ease;\r\n    this._ready = false;\r\n\r\n    if (!this.parent.active) {\r\n        this.parent.active = true;\r\n        _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\r\n    }\r\n\r\n};\r\n\r\nTweenItem.prototype.update = function (delta) {\r\n    this.currentTime += delta;\r\n    this.t = Math.min(this.currentTime, this.time) / this.time;\r\n    if (this.ease)\r\n        this.t = this.ease.getPosition(this.t);\r\n\r\n    if (this.isColor) {\r\n        this.currentColor.r = Math.round(Helpers.Lerp(this.from.r, this.to.r, this.t));\r\n        this.currentColor.g = Math.round(Helpers.Lerp(this.from.g, this.to.g, this.t));\r\n        this.currentColor.b = Math.round(Helpers.Lerp(this.from.b, this.to.b, this.t));\r\n        this.obj[this.key] = Helpers.rgbToNumber(this.currentColor.r, this.currentColor.g, this.currentColor.b);\r\n    }\r\n    else {\r\n        var val = Helpers.Lerp(this.from, this.to, this.t);\r\n        this.obj[this.key] = this.surfix ? val + this.surfix : val;\r\n    }\r\n\r\n    \r\n\r\n    if (this.currentTime >= this.time) {\r\n        this.remove();\r\n    }\r\n};\r\n\r\n\r\nvar widthKeys = [\"width\", \"minWidth\", \"maxWidth\", \"anchorLeft\", \"anchorRight\", \"left\", \"right\", \"x\"];\r\nvar heightKeys = [\"height\", \"minHeight\", \"maxHeight\", \"anchorTop\", \"anchorBottom\", \"top\", \"bottom\", \"y\"];\r\n\r\n\r\nfunction getFromValue(from, to, obj, key) {\r\n    //both number\r\n    if (!isNaN(from) && !isNaN(to))\r\n        return from;\r\n\r\n    //both percentage\r\n    if (isNaN(from) && isNaN(to) && from.indexOf('%') !== -1 && to.indexOf('%') !== -1)\r\n        return parseFloat(from.replace('%', ''));\r\n\r\n    //convert from to px\r\n    if (isNaN(from) && !isNaN(to) && from.indexOf('%') !== -1) {\r\n        if (widthKeys.indexOf(key) !== -1)\r\n            return obj.parent._width * (parseFloat(from.replace('%', '')) * 0.01);\r\n        else if (heightKeys.indexOf(key) !== -1)\r\n            return obj.parent._height * (parseFloat(from.replace('%', '')) * 0.01);\r\n        else\r\n            return 0;\r\n    }\r\n\r\n    //convert from to percentage\r\n    if (!isNaN(from) && isNaN(to) && to.indexOf('%') !== -1) {\r\n        if (widthKeys.indexOf(key) !== -1)\r\n            return from / obj.parent._width * 100;\r\n        else if (heightKeys.indexOf(key) !== -1)\r\n            return from / obj.parent._height * 100;\r\n        else\r\n            return 0;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getSurfix(to) {\r\n    if (isNaN(to) && to.indexOf('%') !== -1)\r\n        return \"%\";\r\n}\r\n\r\nfunction getToValue(to) {\r\n    if (!isNaN(to))\r\n        return to;\r\n    if (isNaN(to) && to.indexOf('%') !== -1)\r\n        return parseFloat(to.replace('%', ''));\r\n}\r\n\r\n\r\nfunction getObject(obj) {\r\n    if (!obj._tweenObjectId) {\r\n        obj._tweenObjectId = _currentId;\r\n        _currentId++;\r\n    }\r\n    var object = _tweenObjects[obj._tweenObjectId];\r\n    if (!object) {\r\n        object = _tweenObjects[obj._tweenObjectId] = new TweenObject(obj);\r\n    }\r\n    return object;\r\n}\r\n\r\nfunction getTweenItem() {\r\n    for (var i = 0; i < _tweenItemCache.length; i++) {\r\n        if (_tweenItemCache[i]._ready)\r\n            return _tweenItemCache[i];\r\n    }\r\n\r\n    var tween = new TweenItem();\r\n    _tweenItemCache.push(tween);\r\n    return tween;\r\n}\r\n\r\nfunction getCallbackItem() {\r\n    for (var i = 0; i < _callbackItemCache.length; i++) {\r\n        if (_callbackItemCache[i]._ready)\r\n            return _callbackItemCache[i];\r\n    }\r\n\r\n    var cb = new CallbackItem();\r\n    _callbackItemCache.push(cb);\r\n    return cb;\r\n}\r\n\r\nvar Tween = {\r\n    to: function (obj, time, params, ease) {\r\n        var object = getObject(obj);\r\n        var onUpdate = null;\r\n        for (var key in params) {\r\n            if (key === \"onComplete\") {\r\n                var cb = getCallbackItem();\r\n                cb.set(object, params[key], time);\r\n                object.tweens[cb.key] = cb;\r\n                continue;\r\n            }\r\n\r\n            if (key === \"onUpdate\") {\r\n                onUpdate = params[key];\r\n                continue;\r\n            }\r\n\r\n            if (time) {\r\n                var match = params[key] === obj[key];\r\n                if (typeof obj[key] === \"undefined\") continue;\r\n\r\n                if (match) {\r\n                    if (object.tweens[key]) object.tweens[key].remove();\r\n                }\r\n                else {\r\n                    if (!object.tweens[key])\r\n                        object.tweens[key] = getTweenItem();\r\n                    object.tweens[key].set(object, key, obj[key], params[key], time, ease);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (time)\r\n            object.onUpdate = onUpdate;\r\n        else this.set(obj, params);\r\n    },\r\n    from: function (obj, time, params, ease) {\r\n        var object = getObject(obj);\r\n        var onUpdate = null;\r\n        for (var key in params) {\r\n            if (key === \"onComplete\") {\r\n                var cb = getCallbackItem();\r\n                cb.set(object, params[key], time);\r\n                object.tweens[cb.key] = cb;\r\n                continue;\r\n            }\r\n\r\n            if (key === \"onUpdate\") {\r\n                onUpdate = params[key];\r\n                continue;\r\n            }\r\n\r\n            if (time) {\r\n                var match = params[key] == obj[key];\r\n                if (typeof obj[key] === \"undefined\") continue;\r\n\r\n                if (match) {\r\n                    if (object.tweens[key]) object.tweens[key].remove();\r\n                }\r\n                else {\r\n                    if (!object.tweens[key])\r\n                        object.tweens[key] = getTweenItem();\r\n                    object.tweens[key].set(object, key, params[key], obj[key], time, ease);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (time)\r\n            object.onUpdate = onUpdate;\r\n        else this.set(obj, params);\r\n    },\r\n    fromTo: function (obj, time, paramsFrom, paramsTo, ease) {\r\n        var object = getObject(obj);\r\n        var onUpdate = null;\r\n        for (var key in paramsTo) {\r\n            if (key === \"onComplete\") {\r\n                var cb = getCallbackItem();\r\n                cb.set(object, paramsTo[key], time);\r\n                object.tweens[cb.key] = cb;\r\n                continue;\r\n            }\r\n\r\n            if (key === \"onUpdate\") {\r\n                onUpdate = paramsTo[key];\r\n                continue;\r\n            }\r\n\r\n            if (time) {\r\n                var match = paramsFrom[key] == paramsTo[key];\r\n                if (typeof obj[key] === \"undefined\" || typeof paramsFrom[key] === \"undefined\") continue;\r\n\r\n                if (match) {\r\n                    if (object.tweens[key]) object.tweens[key].remove();\r\n                    obj[key] = paramsTo[key];\r\n                }\r\n                else {\r\n                    if (!object.tweens[key]) {\r\n                        object.tweens[key] = getTweenItem();\r\n                    }\r\n                    object.tweens[key].set(object, key, paramsFrom[key], paramsTo[key], time, ease);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (time)\r\n            object.onUpdate = onUpdate;\r\n        else this.set(obj, paramsTo);\r\n    },\r\n    set: function (obj, params) {\r\n        var object = getObject(obj);\r\n        for (var key in params) {\r\n            if (typeof obj[key] === \"undefined\") continue;\r\n            if (object.tweens[key]) object.tweens[key].remove();\r\n            obj[key] = params[key];\r\n        }\r\n    },\r\n    _update: function (delta) {\r\n        for (var id in _activeTweenObjects) {\r\n            var object = _activeTweenObjects[id];\r\n            for (var key in object.tweens) {\r\n                object.tweens[key].update(delta);\r\n            }\r\n            if (object.onUpdate) {\r\n                object.onUpdate.call(object.object, delta);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\nmodule.exports = Tween;","var UI = {\r\n    Stage: require('./Stage'),\r\n    Container: require('./Container'),\r\n    ScrollingContainer: require('./ScrollingContainer'),\r\n    SortableList: require('./SortableList'),\r\n    Sprite: require('./Sprite'),\r\n    TilingSprite: require('./TilingSprite'),\r\n    SliceSprite: require('./SliceSprite'),\r\n    Slider: require('./Slider'),\r\n    ScrollBar: require('./ScrollBar'),\r\n    Text: require('./Text'),\r\n    DynamicText: require('./DynamicText/DynamicText'),\r\n    DynamicTextStyle: require('./DynamicText/DynamicTextStyle'),\r\n    TextInput: require('./TextInput'),\r\n    Button: require('./Button'),\r\n    CheckBox: require('./CheckBox'),\r\n    Helpers: require('./Helpers'),\r\n    Tween: require('./Tween'),\r\n    Ease: require('./Ease/Ease'),\r\n    Interaction: require('./Interaction/Interaction'),\r\n    Base: require('./UIBase'),\r\n    Ticker: require('./Ticker').shared,\r\n};\r\n\r\n\r\nmodule.exports = UI;","var UISettings = require('./UISettings'),\r\n    UI = require('./UI'),\r\n    DragEvent = require('./Interaction/DragEvent'),\r\n    DragDropController = require('./Interaction/DragDropController');\r\n\r\n/**\r\n * Base class of all UIObjects\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @param width {Number} Width of the UIObject\r\n * @param height {Number} Height of the UIObject\r\n */\r\nfunction UIBase(width, height) {\r\n    PIXI.utils.EventEmitter.call(this);\r\n    this.container = new PIXI.Container();\r\n    this.setting = new UISettings();\r\n    this.children = [];\r\n    this.parent = null;\r\n    this.stage = null;\r\n    this.initialized = false;\r\n    this.dragInitialized = false;\r\n    this.dropInitialized = false;\r\n    this.dirty = true;\r\n    this._oldWidth = -1;\r\n    this._oldHeight = -1;\r\n    this.pixelPerfect = true;\r\n\r\n\r\n    if (width && isNaN(width) && width.indexOf('%') != -1) {\r\n        this.setting.widthPct = parseFloat(width.replace('%', '')) * 0.01;\r\n    }\r\n    else {\r\n        this.setting.widthPct = null;\r\n    }\r\n\r\n    if (height && isNaN(height) && height.indexOf('%') != -1)\r\n        this.setting.heightPct = parseFloat(height.replace('%', '')) * 0.01;\r\n    else {\r\n        this.setting.heightPct = null;\r\n    }\r\n\r\n    this.setting.width = width || 0;\r\n    this.setting.height = height || 0;\r\n\r\n    //actual values\r\n    this._width = 0;\r\n    this._height = 0;\r\n    this._minWidth = null;\r\n    this._minHeight = null;\r\n    this._maxWidth = null;\r\n    this._maxHeight = null;\r\n    this._anchorLeft = null;\r\n    this._anchorRight = null;\r\n    this._anchorTop = null;\r\n    this._anchorBottom = null;\r\n    this._left = null;\r\n    this._right = null;\r\n    this._top = null;\r\n    this._bottom = null;\r\n\r\n    this._dragPosition = null; //used for overriding positions if tweens is playing\r\n}\r\n\r\nUIBase.prototype = Object.create(PIXI.utils.EventEmitter.prototype);\r\nUIBase.prototype.constructor = UIBase;\r\nmodule.exports = UIBase;\r\n\r\n/**\r\n * Renders the object using the WebGL renderer\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.updatesettings = function (updateChildren, updateParent) {\r\n\r\n    if (!this.initialized) {\r\n        if (this.parent !== null && this.parent.stage !== null && this.parent.initialized) {\r\n            this.initialize();\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    if (updateParent) this.updateParent();\r\n    this.baseupdate();\r\n    this.update();\r\n    if (updateChildren) this.updateChildren();\r\n};\r\n\r\n/**\r\n * Update method (override from other UIObjects)\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.update = function () {\r\n};\r\n\r\n\r\n/**\r\n * Updates the parent\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.updateParent = function () {\r\n    if (this.parent !== null) {\r\n        if (this.parent.updatesettings) {\r\n            this.parent.updatesettings(false, true);\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Updates the UIObject with all base settings\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.baseupdate = function () {\r\n    //return if parent size didnt change\r\n    if (this.parent !== null) {\r\n        var parentHeight, parentWidth;\r\n\r\n\r\n\r\n        //transform convertion (% etc)\r\n        this.dirty = true; \r\n        this._width = this.actual_width;\r\n        this._height = this.actual_height;\r\n        this._minWidth = this.actual_minWidth;\r\n        this._minHeight = this.actual_minHeight;\r\n        this._maxWidth = this.actual_maxWidth;\r\n        this._maxHeight = this.actual_maxHeight;\r\n        this._anchorLeft = this.actual_anchorLeft;\r\n        this._anchorRight = this.actual_anchorRight;\r\n        this._anchorTop = this.actual_anchorTop;\r\n        this._anchorBottom = this.actual_anchorBottom;\r\n        this._left = this.actual_left;\r\n        this._right = this.actual_right;\r\n        this._top = this.actual_top;\r\n        this._bottom = this.actual_bottom;\r\n        this._parentWidth = parentWidth = this.parent._width;\r\n        this._parentHeight = parentHeight = this.parent._height;\r\n        this.dirty = false;\r\n\r\n\r\n        var pivotXOffset = this.pivotX * this._width;\r\n        var pivotYOffset = this.pivotY * this._height;\r\n\r\n        if (this.pixelPerfect) {\r\n            pivotXOffset = Math.round(pivotXOffset);\r\n            pivotYOffset = Math.round(pivotYOffset);\r\n        }\r\n\r\n\r\n        if (this.horizontalAlign === null) {\r\n            //get anchors (use left right if conflict)\r\n            if (this._anchorLeft !== null && this._anchorRight === null && this._right !== null)\r\n                this._anchorRight = this._right;\r\n            else if (this._anchorLeft === null && this._anchorRight !== null && this._left !== null)\r\n                this._anchorLeft = this._left;\r\n            else if (this._anchorLeft === null && this._anchorRight === null && this._left !== null && this._right !== null) {\r\n                this._anchorLeft = this._left;\r\n                this._anchorRight = this._right;\r\n            }\r\n\r\n\r\n            var useHorizontalAnchor = this._anchorLeft !== null || this._anchorRight !== null;\r\n            var useLeftRight = !useHorizontalAnchor && (this._left !== null || this._right !== null);\r\n\r\n            if (useLeftRight) {\r\n                if (this._left !== null)\r\n                    this.container.position.x = this._left;\r\n                else if (this._right !== null)\r\n                    this.container.position.x = parentWidth - this._right;\r\n            }\r\n            else if (useHorizontalAnchor) {\r\n\r\n                if (this._anchorLeft !== null && this._anchorRight === null)\r\n                    this.container.position.x = this._anchorLeft;\r\n                else if (this._anchorLeft === null && this._anchorRight !== null)\r\n                    this.container.position.x = parentWidth - this._width - this._anchorRight;\r\n                else if (this._anchorLeft !== null && this._anchorRight !== null) {\r\n                    this.container.position.x = this._anchorLeft;\r\n                    this._width = parentWidth - this._anchorLeft - this._anchorRight;\r\n                }\r\n                this.container.position.x += pivotXOffset;\r\n            }\r\n            else {\r\n                this.container.position.x = 0;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if (this.verticalAlign === null) {\r\n            //get anchors (use top bottom if conflict)\r\n            if (this._anchorTop !== null && this._anchorBottom === null && this._bottom !== null)\r\n                this._anchorBottom = this._bottom;\r\n            if (this._anchorTop === null && this._anchorBottom !== null && this._top !== null)\r\n                this._anchorTop = this._top;\r\n\r\n            var useVerticalAnchor = this._anchorTop !== null || this._anchorBottom !== null;\r\n            var useTopBottom = !useVerticalAnchor && (this._top !== null || this._bottom !== null);\r\n\r\n            if (useTopBottom) {\r\n                if (this._top !== null)\r\n                    this.container.position.y = this._top;\r\n                else if (this._bottom !== null)\r\n                    this.container.position.y = parentHeight - this._bottom;\r\n            }\r\n            else if (useVerticalAnchor) {\r\n                if (this._anchorTop !== null && this._anchorBottom === null)\r\n                    this.container.position.y = this._anchorTop;\r\n                else if (this._anchorTop === null && this._anchorBottom !== null)\r\n                    this.container.position.y = parentHeight - this._height - this._anchorBottom;\r\n                else if (this._anchorTop !== null && this._anchorBottom !== null) {\r\n                    this.container.position.y = this._anchorTop;\r\n                    this._height = parentHeight - this._anchorTop - this._anchorBottom;\r\n                }\r\n                this.container.position.y += pivotYOffset;\r\n            }\r\n            else {\r\n                this.container.position.y = 0;\r\n            }\r\n        }\r\n\r\n        //min/max sizes\r\n        if (this._maxWidth !== null && this._width > this._maxWidth) this._width = this._maxWidth;\r\n        if (this._width < this._minWidth) this._width = this._minWidth;\r\n\r\n        if (this._maxHeight !== null && this._height > this._maxHeight) this._height = this._maxHeight;\r\n        if (this._height < this._minHeight) this._height = this._minHeight;\r\n\r\n\r\n        //pure vertical/horizontal align\r\n        if (this.horizontalAlign !== null) {\r\n            if (this.horizontalAlign == \"center\")\r\n                this.container.position.x = parentWidth * 0.5 - this._width * 0.5;\r\n            else if (this.horizontalAlign == \"right\")\r\n                this.container.position.x = parentWidth - this._width;\r\n            else\r\n                this.container.position.x = 0;\r\n            this.container.position.x += pivotXOffset;\r\n        }\r\n        if (this.verticalAlign !== null) {\r\n            if (this.verticalAlign == \"middle\")\r\n                this.container.position.y = parentHeight * 0.5 - this._height * 0.5;\r\n            else if (this.verticalAlign == \"bottom\")\r\n                this.container.position.y = parentHeight - this._height;\r\n            else\r\n                this.container.position.y = 0;\r\n            this.container.position.y += pivotYOffset;\r\n        }\r\n\r\n\r\n        //Unrestricted dragging\r\n        if (this.dragging && !this.setting.dragRestricted) {\r\n            this.container.position.x = this._dragPosition.x;\r\n            this.container.position.y = this._dragPosition.y;\r\n        }\r\n\r\n\r\n        //scale\r\n        if (this.setting.scaleX !== null) this.container.scale.x = this.setting.scaleX;\r\n        if (this.setting.scaleY !== null) this.container.scale.y = this.setting.scaleY;\r\n\r\n        //pivot\r\n        if (this.setting.pivotX !== null) this.container.pivot.x = pivotXOffset;\r\n        if (this.setting.pivotY !== null) this.container.pivot.y = pivotYOffset;\r\n\r\n        if (this.setting.alpha !== null) this.container.alpha = this.setting.alpha;\r\n        if (this.setting.rotation !== null) this.container.rotation = this.setting.rotation;\r\n\r\n        //make pixel perfect\r\n        if (this.pixelPerfect) {\r\n            this._width = Math.round(this._width);\r\n            this._height = Math.round(this._height);\r\n            this.container.position.x = Math.round(this.container.position.x);\r\n            this.container.position.y = Math.round(this.container.position.y);\r\n        }\r\n\r\n\r\n\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Updates all UI Children\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.updateChildren = function () {\r\n    for (var i = 0; i < this.children.length; i++) {\r\n        this.children[i].updatesettings(true);\r\n    }\r\n};\r\n\r\nUIBase.prototype.addChild = function (UIObject) {\r\n    var argumentsLength = arguments.length;\r\n    if (argumentsLength > 1) {\r\n        for (var i = 0; i < argumentsLength; i++) {\r\n            this.addChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        if (UIObject.parent) {\r\n            UIObject.parent.removeChild(UIObject);\r\n        }\r\n\r\n        UIObject.parent = this;\r\n        this.container.addChild(UIObject.container);\r\n        this.children.push(UIObject);\r\n        this.updatesettings(true, true);\r\n    }\r\n\r\n    return UIObject;\r\n};\r\n\r\nUIBase.prototype.removeChild = function (UIObject) {\r\n    var argumentLenght = arguments.length;\r\n    if (argumentLenght > 1) {\r\n        for (var i = 0; i < argumentLenght; i++) {\r\n            this.removeChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        var index = this.children.indexOf(UIObject);\r\n        if (index !== -1) {\r\n            var oldUIParent = UIObject.parent;\r\n            var oldParent = UIObject.container.parent;\r\n            UIObject.container.parent.removeChild(UIObject.container);\r\n            this.children.splice(index, 1);\r\n            UIObject.parent = null;\r\n\r\n            //oldParent._recursivePostUpdateTransform();\r\n            setTimeout(function () { //hack but cant get the transforms to update propertly otherwice?\r\n                if (oldUIParent.updatesettings)\r\n                    oldUIParent.updatesettings(true, true);\r\n            }, 0);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Initializes the object when its added to an UIStage\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.initialize = function () {\r\n    this.initialized = true;\r\n    this.stage = this.parent.stage;\r\n    if (this.draggable) {\r\n        this.initDraggable();\r\n    }\r\n\r\n    if (this.droppable) {\r\n        this.initDroppable();\r\n    }\r\n};\r\n\r\nUIBase.prototype.clearDraggable = function () {\r\n    if (this.dragInitialized) {\r\n        this.dragInitialized = false;\r\n        this.drag.stopEvent();\r\n    }\r\n};\r\n\r\nUIBase.prototype.initDraggable = function () {\r\n    if (!this.dragInitialized) {\r\n        this.dragInitialized = true;\r\n        var containerStart = new PIXI.Point(),\r\n            stageOffset = new PIXI.Point(),\r\n            self = this;\r\n\r\n        this._dragPosition = new PIXI.Point();\r\n        this.drag = new DragEvent(this);\r\n        this.drag.onDragStart = function (e) {\r\n            \r\n            var added = DragDropController.add(this, e);\r\n            if (!this.dragging && added) {\r\n                this.dragging = true;\r\n                this.container.interactive = false;\r\n                containerStart.copy(this.container.position);\r\n                if (this.dragContainer) {\r\n                    var c = this.dragContainer.container ? this.dragContainer.container : this.dragContainer;\r\n                    if (c) {\r\n                        //_this.container._recursivePostUpdateTransform();\r\n                        stageOffset.set(c.worldTransform.tx - this.parent.container.worldTransform.tx, c.worldTransform.ty - this.parent.container.worldTransform.ty);\r\n                        c.addChild(this.container);\r\n                    }\r\n                } else {\r\n                    stageOffset.set(0);\r\n                }\r\n                this.emit(\"draggablestart\", e);\r\n            }\r\n\r\n            \r\n        };\r\n\r\n\r\n        this.drag.onDragMove = function (e, offset) {\r\n            if (this.dragging) {\r\n                this._dragPosition.set(containerStart.x + offset.x - stageOffset.x, containerStart.y + offset.y - stageOffset.y);\r\n                this.x = this._dragPosition.x;\r\n                this.y = this._dragPosition.y;\r\n                this.emit(\"draggablemove\", e);\r\n            }\r\n            \r\n        };\r\n\r\n        this.drag.onDragEnd = function (e) {\r\n            if (this.dragging) {\r\n                this.dragging = false;\r\n                //Return to container after 0ms if not picked up by a droppable\r\n                setTimeout(function () {\r\n                    self.container.interactive = true;\r\n                    var item = DragDropController.getItem(self);\r\n                    if (item) {\r\n                        var container = self.parent === self.stage ? self.stage : self.parent.container;\r\n                        container.toLocal(self.container.position, self.container.parent, self);\r\n                        if (container != self.container) {\r\n                            self.parent.addChild(self);\r\n                        }\r\n                    }\r\n                    self.emit(\"draggableend\", e);\r\n                }, 0);\r\n            }\r\n            \r\n        };\r\n    }\r\n};\r\n\r\nUIBase.prototype.clearDroppable = function () {\r\n    if (this.dropInitialized) {\r\n        this.dropInitialized = false;\r\n        this.container.removeListener('mouseup', this.onDrop);\r\n        this.container.removeListener('touchend', this.onDrop);\r\n    }\r\n};\r\n\r\nUIBase.prototype.initDroppable = function () {\r\n    if (!this.dropInitialized) {\r\n        this.dropInitialized = true;\r\n        var container = this.container,\r\n            self = this;\r\n\r\n        this.container.interactive = true;\r\n        this.onDrop = function (event) {\r\n            var item = DragDropController.getEventItem(event, self.dropGroup);\r\n            if (item && item.dragging) {\r\n                item.dragging = false;\r\n                item.container.interactive = true;\r\n                var parent = self.droppableReparent !== null ? self.droppableReparent : self;\r\n                parent.container.toLocal(item.container.position, item.container.parent, item);\r\n                if (parent.container != item.container.parent)\r\n                    parent.addChild(item);\r\n            }\r\n        };\r\n\r\n        container.on('mouseup', this.onDrop);\r\n        container.on('touchend', this.onDrop);\r\n    }\r\n};\r\n\r\nObject.defineProperties(UIBase.prototype, {\r\n    x: {\r\n        get: function () {\r\n            return this.setting.left;\r\n        },\r\n        set: function (val) {\r\n            this.left = val;\r\n        }\r\n    },\r\n    y: {\r\n        get: function () {\r\n            return this.setting.top;\r\n        },\r\n        set: function (val) {\r\n            this.top = val;\r\n        }\r\n    },\r\n    width: {\r\n        get: function () {\r\n            return this.setting.width;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.widthPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.widthPct = null;\r\n            \r\n            this.setting.width = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_width: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.widthPct !== null) {\r\n                    this._width = this.parent._width * this.setting.widthPct;\r\n                }\r\n                else {\r\n                    this._width = this.setting.width;\r\n                }\r\n            }\r\n            return this._width;\r\n        }\r\n    },\r\n    height: {\r\n        get: function () {\r\n            return this.setting.height;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.heightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.heightPct = null;\r\n            \r\n            this.setting.height = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_height: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.heightPct !== null) {\r\n                    this._height = this.parent._height * this.setting.heightPct;\r\n                }\r\n                else {\r\n                    this._height = this.setting.height;\r\n                }\r\n            }\r\n            return this._height;\r\n        }\r\n    },\r\n    minWidth: {\r\n        get: function () {\r\n            return this.setting.minWidth;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.minWidthPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.minWidthPct = null;\r\n            \r\n            this.setting.minWidth = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_minWidth: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.minWidthPct !== null) {\r\n                    this._minWidth = this.parent._width * this.setting.minWidthPct;\r\n                }\r\n                else {\r\n                    this._minWidth = this.setting.minWidth;\r\n                }\r\n            }\r\n            return this._minWidth;\r\n        }\r\n    },\r\n    minHeight: {\r\n        get: function () {\r\n            return this.setting.minHeight;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.minHeightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.minHeightPct = null;\r\n            \r\n            this.setting.minHeight = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_minHeight: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.minHeightPct !== null) {\r\n                    this._minHeight = this.parent._height * this.setting.minHeightPct;\r\n                }\r\n                else {\r\n                    this._minHeight = this.setting.minHeight;\r\n                }\r\n            }\r\n            return this._minHeight;\r\n        }\r\n    },\r\n    maxWidth: {\r\n        get: function () {\r\n            return this.setting.maxWidth;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.maxWidthPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.maxWidthPct = null;\r\n            \r\n\r\n            this.setting.maxWidth = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_maxWidth: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.maxWidthPct !== null) {\r\n                    this._maxWidth = this.parent._width * this.setting.maxWidthPct;\r\n                }\r\n                else {\r\n                    this._maxWidth = this.setting.maxWidth;\r\n                }\r\n            }\r\n            return this._maxWidth;\r\n        }\r\n    },\r\n    maxHeight: {\r\n        get: function () {\r\n            return this.setting.maxHeight;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.maxHeightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.maxHeightPct = null;\r\n            \r\n            this.setting.maxHeight = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_maxHeight: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.maxHeightPct !== null) {\r\n                    this._maxHeight = this.parent._height * this.setting.maxHeightPct;\r\n                }\r\n                else {\r\n                    this._maxHeight = this.setting.maxHeight;\r\n                }\r\n            }\r\n            return this._maxHeight;\r\n        }\r\n    },\r\n    anchorLeft: {\r\n        get: function () {\r\n            return this.setting.anchorLeft;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) \r\n                this.setting.anchorLeftPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else \r\n                this.setting.anchorLeftPct = null;\r\n            \r\n            this.setting.anchorLeft = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_anchorLeft: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.anchorLeftPct !== null) {\r\n                    this._anchorLeft = this.parent._width * this.setting.anchorLeftPct;\r\n                }\r\n                else {\r\n                    this._anchorLeft = this.setting.anchorLeft;\r\n                }\r\n            }\r\n            return this._anchorLeft;\r\n        }\r\n    },\r\n    anchorRight: {\r\n        get: function () {\r\n            return this.setting.anchorRight;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.anchorRightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.anchorRightPct = null;\r\n            \r\n            this.setting.anchorRight = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_anchorRight: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.anchorRightPct !== null) {\r\n                    this._anchorRight = this.parent._width * this.setting.anchorRightPct;\r\n                }\r\n                else {\r\n                    this._anchorRight = this.setting.anchorRight;\r\n                }\r\n            }\r\n            return this._anchorRight;\r\n        }\r\n    },\r\n    anchorTop: {\r\n        get: function () {\r\n            return this.setting.anchorTop;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.anchorTopPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.anchorTopPct = null;\r\n            \r\n            this.setting.anchorTop = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_anchorTop: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.anchorTopPct !== null) {\r\n                    this._anchorTop = this.parent._height * this.setting.anchorTopPct;\r\n                }\r\n                else {\r\n                    this._anchorTop = this.setting.anchorTop;\r\n                }\r\n            }\r\n            return this._anchorTop;\r\n        }\r\n    },\r\n    anchorBottom: {\r\n        get: function () {\r\n            return this.setting.anchorBottom;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.anchorBottomPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else \r\n                this.setting.anchorBottomPct = null;\r\n            \r\n            this.setting.anchorBottom = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_anchorBottom: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.anchorBottomPct !== null) {\r\n                    this._anchorBottom = this.parent._height * this.setting.anchorBottomPct;\r\n                }\r\n                else {\r\n                    this._anchorBottom = this.setting.anchorBottom;\r\n                }\r\n            }\r\n            return this._anchorBottom;\r\n        }\r\n    },\r\n    left: {\r\n        get: function () {\r\n            return this.setting.left;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.leftPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.leftPct = null;\r\n            \r\n            this.setting.left = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_left: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.leftPct !== null) {\r\n                    this._left = this.parent._width * this.setting.leftPct;\r\n                }\r\n                else {\r\n                    this._left = this.setting.left;\r\n                }\r\n            }\r\n            return this._left;\r\n        }\r\n    },\r\n    right: {\r\n        get: function () {\r\n            return this.setting.right;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.rightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.rightPct = null;\r\n\r\n            this.setting.right = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_right: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.rightPct !== null) {\r\n                    this._right = this.parent._width * this.setting.rightPct;\r\n                }\r\n                else {\r\n                    this._right = this.setting.right;\r\n                }\r\n            }\r\n            return this._right;\r\n        }\r\n    },\r\n    top: {\r\n        get: function () {\r\n            return this.setting.top;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.topPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.topPct = null;\r\n\r\n            this.setting.top = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_top: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.topPct !== null) {\r\n                    this._top = this.parent._height * this.setting.topPct;\r\n                }\r\n                else {\r\n                    this._top = this.setting.top;\r\n                }\r\n            }\r\n            return this._top;\r\n        }\r\n    },\r\n    bottom: {\r\n        get: function () {\r\n            return this.setting.bottom;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.bottomPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.bottomPct = null;\r\n\r\n            this.setting.bottom = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_bottom: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.bottomPct !== null) {\r\n                    this._bottom = this.parent._height * this.setting.bottomPct;\r\n                }\r\n                else {\r\n                    this._bottom = this.setting.bottom;\r\n                }\r\n            }\r\n            return this._bottom;\r\n        }\r\n    },\r\n    verticalAlign: {\r\n        get: function () {\r\n            return this.setting.verticalAlign;\r\n        },\r\n        set: function (val) {\r\n            this.setting.verticalAlign = val;\r\n            this.baseupdate();\r\n        }\r\n    },\r\n    valign: {\r\n        get: function () {\r\n            return this.setting.verticalAlign;\r\n        },\r\n        set: function (val) {\r\n            this.setting.verticalAlign = val;\r\n            this.baseupdate();\r\n        }\r\n    },\r\n    horizontalAlign: {\r\n        get: function () {\r\n            return this.setting.horizontalAlign;\r\n        },\r\n        set: function (val) {\r\n            this.setting.horizontalAlign = val;\r\n            this.baseupdate();\r\n        }\r\n    },\r\n    align: {\r\n        get: function () {\r\n            return this.setting.horizontalAlign;\r\n        },\r\n        set: function (val) {\r\n            this.setting.horizontalAlign = val;\r\n            this.baseupdate();\r\n        }\r\n    },\r\n    tint: {\r\n        get: function () {\r\n            return this.setting.tint;\r\n        },\r\n        set: function (val) {\r\n            this.setting.tint = val;\r\n            this.update();\r\n        }\r\n    },\r\n    alpha: {\r\n        get: function () {\r\n            return this.setting.alpha;\r\n        },\r\n        set: function (val) {\r\n            this.setting.alpha = val;\r\n            this.container.alpha = val;\r\n        }\r\n    },\r\n    rotation: {\r\n        get: function () {\r\n            return this.setting.rotation;\r\n        },\r\n        set: function (val) {\r\n            this.setting.rotation = val;\r\n            this.container.rotation = val;\r\n        }\r\n    },\r\n    blendMode: {\r\n        get: function () {\r\n            return this.setting.blendMode;\r\n        },\r\n        set: function (val) {\r\n            this.setting.blendMode = val;\r\n            this.update();\r\n        }\r\n    },\r\n    pivotX: {\r\n        get: function () {\r\n            return this.setting.pivotX;\r\n        },\r\n        set: function (val) {\r\n            this.setting.pivotX = val;\r\n            this.baseupdate();\r\n            this.update();\r\n        }\r\n    },\r\n    pivotY: {\r\n        get: function () {\r\n            return this.setting.pivotY;\r\n        },\r\n        set: function (val) {\r\n            this.setting.pivotY = val;\r\n            this.baseupdate();\r\n            this.update();\r\n        }\r\n    },\r\n    pivot: {\r\n        set: function (val) {\r\n            this.setting.pivotX = val;\r\n            this.setting.pivotY = val;\r\n            this.baseupdate();\r\n            this.update();\r\n        }\r\n    },\r\n    scaleX: {\r\n        get: function () {\r\n            return this.setting.scaleX;\r\n        },\r\n        set: function (val) {\r\n            this.setting.scaleX = val;\r\n            this.container.scale.x = val;\r\n        }\r\n    },\r\n    scaleY: {\r\n        get: function () {\r\n            return this.setting.scaleY;\r\n        },\r\n        set: function (val) {\r\n            this.setting.scaleY = val;\r\n            this.container.scale.y = val;\r\n        }\r\n    },\r\n    scale: {\r\n        get: function () {\r\n            return this.setting.scaleX;\r\n        },\r\n        set: function (val) {\r\n            this.setting.scaleX = val;\r\n            this.setting.scaleY = val;\r\n            this.container.scale.x = val;\r\n            this.container.scale.y = val;\r\n        }\r\n    },\r\n\r\n    draggable: {\r\n        get: function () {\r\n            return this.setting.draggable;\r\n        },\r\n        set: function (val) {\r\n            this.setting.draggable = val;\r\n            if (this.initialized) {\r\n                if (val)\r\n                    this.initDraggable();\r\n                else\r\n                    this.clearDraggable();\r\n            }\r\n        }\r\n    },\r\n    dragRestricted: {\r\n        get: function () {\r\n            return this.setting.dragRestricted;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragRestricted = val;\r\n        }\r\n    },\r\n    dragRestrictAxis: {\r\n        get: function () {\r\n            return this.setting.dragRestrictAxis;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragRestrictAxis = val;\r\n        }\r\n    },\r\n    dragThreshold: {\r\n        get: function () {\r\n            return this.setting.dragThreshold;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragThreshold = val;\r\n        }\r\n    },\r\n    dragGroup: {\r\n        get: function () {\r\n            return this.setting.dragGroup;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragGroup = val;\r\n        }\r\n    },\r\n    dragContainer: {\r\n        get: function () {\r\n            return this.setting.dragContainer;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragContainer = val;\r\n        }\r\n    },\r\n    droppable: {\r\n        get: function () {\r\n            return this.setting.droppable;\r\n        },\r\n        set: function (val) {\r\n            this.setting.droppable = true;\r\n            if (this.initialized) {\r\n                if (val)\r\n                    this.initDroppable();\r\n                else\r\n                    this.clearDroppable();\r\n            }\r\n        }\r\n    },\r\n    droppableReparent: {\r\n        get: function () {\r\n            return this.setting.droppableReparent;\r\n        },\r\n        set: function (val) {\r\n            this.setting.droppableReparent = val;\r\n        }\r\n    },\r\n    dropGroup: {\r\n        get: function () {\r\n            return this.setting.dropGroup;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dropGroup = val;\r\n        }\r\n    },\r\n    renderable: {\r\n        get: function () {\r\n            return this.container.renderable;\r\n        },\r\n        set: function (val) {\r\n            this.container.renderable = val;\r\n        }\r\n    },\r\n    visible: {\r\n        get: function () {\r\n            return this.container.visible;\r\n        },\r\n        set: function (val) {\r\n            this.container.visible = val;\r\n        }\r\n    },\r\n    cacheAsBitmap: {\r\n        get: function () {\r\n            return this.container.cacheAsBitmap;\r\n        },\r\n        set: function (val) {\r\n            this.container.cacheAsBitmap = val;\r\n        }\r\n    },\r\n    onClick: {\r\n        get: function () {\r\n            return this.container.click;\r\n        },\r\n        set: function (val) {\r\n            this.container.click = val;\r\n        }\r\n    },\r\n    interactive: {\r\n        get: function () {\r\n            return this.container.interactive;\r\n        },\r\n        set: function (val) {\r\n            this.container.interactive = val;\r\n        }\r\n    },\r\n    interactiveChildren: {\r\n        get: function () {\r\n            return this.container.interactiveChildren;\r\n        },\r\n        set: function (val) {\r\n            this.container.interactiveChildren = val;\r\n        }\r\n    },\r\n    parentLayer: {\r\n        get: function () {\r\n            return this.container.parentLayer;\r\n        },\r\n        set: function (val) {\r\n            this.container.parentLayer = val;\r\n        }\r\n    }\r\n});","/**\r\n * Settings object for all UIObjects\r\n *\r\n * @class\r\n * @memberof PIXI.UI\r\n */\r\nfunction UISettings() {\r\n    this.width = 0;\r\n    this.height = 0;\r\n    this.minHeight = 0;\r\n    this.maxWidth = null;\r\n    this.maxHeight = null;\r\n    this.left = null;\r\n    this.right = null;\r\n    this.top = null;\r\n    this.bottom = null;\r\n    this.anchorLeft = null;\r\n    this.anchorRight = null;\r\n    this.anchorTop = null;\r\n    this.anchorBottom = null;\r\n\r\n    this.widthPct = null;\r\n    this.heightPct = null;\r\n    this.minWidthPct = null;\r\n    this.minHeightPct = null;\r\n    this.maxWidthPct = null;\r\n    this.maxHeightPct = null;\r\n    this.minWidth = 0;\r\n    this.leftPct = null;\r\n    this.rightPct = null;\r\n    this.topPct = null;\r\n    this.bottomPct = null;\r\n    this.anchorLeftPct = null;\r\n    this.anchorRightPct = null;\r\n    this.anchorTopPct = null;\r\n    this.anchorBottomPct = null;\r\n\r\n    this.pivotX = 0;\r\n    this.pivotY = 0;\r\n    this.scaleX = 1;\r\n    this.scaleY = 1;\r\n    this.verticalAlign = null;\r\n    this.horizontalAlign = null;\r\n    this.rotation = null;\r\n    this.blendMode = null;\r\n    this.tint = null;\r\n    this.alpha = 1;\r\n\r\n\r\n    this.draggable = null;\r\n    this.dragRestricted = false;\r\n    this.dragRestrictAxis = null; //x, y\r\n    this.dragThreshold = 0;\r\n    this.dragGroup = null;\r\n    this.dragContainer = null;\r\n    this.droppable = null;\r\n    this.droppableReparent = null;\r\n    this.dropGroup = null;\r\n}\r\n\r\n\r\nmodule.exports = UISettings;\r\n\r\n\r\n","\r\nvar Library = {\r\n    UI: require('./UI')\r\n};\r\n\r\n//dump everything into extras\r\n\r\nObject.assign(PIXI, Library);\r\n\r\nmodule.exports = Library;\r\n"],"sourceRoot":"."}